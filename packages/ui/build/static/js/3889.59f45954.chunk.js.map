{"version":3,"file":"static/js/3889.59f45954.chunk.js","mappings":"oQAEO,SAASA,EAAqBC,GACnC,OAAOC,EAAAA,EAAAA,GAAqB,WAAYD,EAC1C,CACA,MAGA,GAHqBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,QAAS,MAAO,WAAY,uBAAwB,0BAA2B,sBAAuB,yBAA0B,YAAa,aAAc,YAAa,eAAgB,iBAAkB,eAAgB,eAAgB,qBAAsB,kBAEjU,8BAA+B,iCAAkC,+BAAgC,kCAAmC,iCAAkC,oCAAqC,kCAAmC,uC,eCH9O,MAAMC,EAAY,CAAC,eAAgB,YAAa,UAAW,YAAa,aAAc,kBAAmB,WAAY,UAAW,QAAS,YAAa,MAAO,eAAgB,QAAS,YAAa,WAAY,WA+BzMC,GAAYC,EAAAA,EAAAA,IAAO,OAAQ,CAC/BC,KAAM,WACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAH7BL,CAIf,CACDM,SAAU,WACVC,QAAS,cAETC,cAAe,SACfC,WAAY,IAERC,GAAaV,EAAAA,EAAAA,IAAO,OAAQ,CAChCC,KAAM,WACNN,KAAM,QACNO,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAOQ,MAAOR,EAAOO,EAAWE,SAAUT,EAAO,eAADU,QAAgBC,EAAAA,EAAAA,GAAWJ,EAAWK,aAAaC,WAASH,QAAGC,EAAAA,EAAAA,GAAWJ,EAAWK,aAAaE,aAAWJ,QAAGC,EAAAA,EAAAA,GAAWJ,EAAWQ,WAAkC,YAArBR,EAAWS,OAAuBhB,EAAO,QAADU,QAASC,EAAAA,EAAAA,GAAWJ,EAAWS,SAAWT,EAAWU,WAAajB,EAAOiB,UAAU,GAPvTrB,EAShBsB,IAAA,IAAC,MACFC,EAAK,WACLZ,GACDW,EAAA,OAAKE,EAAAA,EAAAA,GAAS,CACbjB,QAAS,OACTkB,cAAe,MACfC,SAAU,OACVC,eAAgB,SAChBC,aAAc,SACdC,WAAY,SACZvB,SAAU,WACVwB,UAAW,aACXC,WAAYR,EAAMS,WAAWD,WAC7BE,WAAYV,EAAMS,WAAWE,iBAC7BC,SAAUZ,EAAMS,WAAWI,QAAQ,IACnCC,SAAUC,GACVC,WAAY,EACZC,QAAS,QACTC,OAAQH,GACRI,aAxDsB,GAyDtBC,OAAQ,EAERC,WAAYrB,EAAMsB,YAAYC,OAAO,YAAa,CAChDC,OAAQxB,EAAMsB,YAAYE,OAAOC,UACjCC,SAAU1B,EAAMsB,YAAYI,SAASC,kBAEjB,YAArBvC,EAAWS,OAAuB,CACnC+B,iBAAkB5B,EAAM6B,MAAQ7B,GAAO8B,QAAQ1C,EAAWS,OAAOkC,KACjElC,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQ1C,EAAWS,OAAOmC,cAC/B,QAAvB5C,EAAWE,SAAqB,CACjC6B,aAlEiB,EAmEjBD,OAAQe,EACRnB,SAAUmB,EACVhB,QAAS,GAC6B,QAArC7B,EAAWK,aAAaC,UAA6D,UAAvCN,EAAWK,aAAaE,YAAiD,gBAAvBP,EAAWQ,SAA6B,CACzIsC,IAAK,EACLC,MAAO,EACPC,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAAD9C,OAAM+C,EAAaxC,YAAc,CAC/BsC,UAAW,kCAEyB,WAArChD,EAAWK,aAAaC,UAAgE,UAAvCN,EAAWK,aAAaE,YAAiD,gBAAvBP,EAAWQ,SAA6B,CAC5I2C,OAAQ,EACRJ,MAAO,EACPC,UAAW,+BACXC,gBAAiB,YACjB,CAAC,KAAD9C,OAAM+C,EAAaxC,YAAc,CAC/BsC,UAAW,iCAEyB,QAArChD,EAAWK,aAAaC,UAA6D,SAAvCN,EAAWK,aAAaE,YAAgD,gBAAvBP,EAAWQ,SAA6B,CACxIsC,IAAK,EACLM,KAAM,EACNJ,UAAW,iCACXC,gBAAiB,QACjB,CAAC,KAAD9C,OAAM+C,EAAaxC,YAAc,CAC/BsC,UAAW,mCAEyB,WAArChD,EAAWK,aAAaC,UAAgE,SAAvCN,EAAWK,aAAaE,YAAgD,gBAAvBP,EAAWQ,SAA6B,CAC3I2C,OAAQ,EACRC,KAAM,EACNJ,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAAD9C,OAAM+C,EAAaxC,YAAc,CAC/BsC,UAAW,kCAEyB,QAArChD,EAAWK,aAAaC,UAA6D,UAAvCN,EAAWK,aAAaE,YAAiD,aAAvBP,EAAWQ,SAA0B,CACtIsC,IAAK,MACLC,MAAO,MACPC,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAAD9C,OAAM+C,EAAaxC,YAAc,CAC/BsC,UAAW,kCAEyB,WAArChD,EAAWK,aAAaC,UAAgE,UAAvCN,EAAWK,aAAaE,YAAiD,aAAvBP,EAAWQ,SAA0B,CACzI2C,OAAQ,MACRJ,MAAO,MACPC,UAAW,+BACXC,gBAAiB,YACjB,CAAC,KAAD9C,OAAM+C,EAAaxC,YAAc,CAC/BsC,UAAW,iCAEyB,QAArChD,EAAWK,aAAaC,UAA6D,SAAvCN,EAAWK,aAAaE,YAAgD,aAAvBP,EAAWQ,SAA0B,CACrIsC,IAAK,MACLM,KAAM,MACNJ,UAAW,iCACXC,gBAAiB,QACjB,CAAC,KAAD9C,OAAM+C,EAAaxC,YAAc,CAC/BsC,UAAW,mCAEyB,WAArChD,EAAWK,aAAaC,UAAgE,SAAvCN,EAAWK,aAAaE,YAAgD,aAAvBP,EAAWQ,SAA0B,CACxI2C,OAAQ,MACRC,KAAM,MACNJ,UAAW,gCACXC,gBAAiB,UACjB,CAAC,KAAD9C,OAAM+C,EAAaxC,YAAc,CAC/BsC,UAAW,kCAEZhD,EAAWU,WAAa,CACzBuB,WAAYrB,EAAMsB,YAAYC,OAAO,YAAa,CAChDC,OAAQxB,EAAMsB,YAAYE,OAAOC,UACjCC,SAAU1B,EAAMsB,YAAYI,SAASe,iBAEvC,IAmNF,EAlN2BC,EAAAA,YAAiB,SAAeC,EAASC,GAClE,IAAIC,EAAMC,EAAaC,EAAOC,EAAcC,EAAiBC,EAC7D,MAAMtE,GAAQuE,EAAAA,EAAAA,GAAc,CAC1BvE,MAAO+D,EACPjE,KAAM,cAGJe,aAAc2D,EAAmB,CAC/B1D,SAAU,MACVC,WAAY,SACb,UACD0D,EAAS,UACTC,EAAS,WACTC,EAAa,CAAC,EAAC,gBACfC,EAAkB,CAAC,EAAC,SACpBC,EACA7D,QAAS8D,EAAc,cACvB7D,MAAO8D,EAAY,UACnB7D,UAAW8D,GAAgB,EAC3BC,IAAKC,EAAU,GACfC,aAAcC,EAAgB,MAC9BC,EAAK,UACLC,EAAS,SACTC,GAAW,EACX7E,QAAS8E,EAAc,YACrBxF,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC,aACJwF,EACAjE,UAAWyE,EAAiB,IAC5BV,EACAW,aAAcC,GCjLX,SAAkBC,GACvB,MACEX,aAAcC,EACdlE,UAAW8D,GAAgB,EAC3BC,IAAKC,EAAU,GAAE,SACjBK,GAAW,GACTO,EACEC,GAAYC,EAAAA,EAAAA,GAAiB,CACjCb,aAAcC,EACdH,IAAKC,IAEP,IAAIhE,EAAY8D,GACM,IAAlBA,GAAgD,IAArBI,GAA2BG,IACxDrE,GAAY,GAEd,MAAM,aACJiE,EAAY,IACZF,EAAMC,GACJhE,EAAY6E,EAAYD,EAE5B,MAAO,CACLX,eACAjE,YACA+D,MACAW,aALmBT,GAAgBc,OAAOd,GAAgBF,EAAM,GAAHtE,OAAMsE,EAAG,KAAME,EAOhF,CDwJMe,CAAS,CACXjB,IAAKC,EACLhE,UAAW8D,EACXG,aAAcC,EACdG,aAEIQ,GAAYC,EAAAA,EAAAA,GAAiB,CACjCnF,aAAc2D,EACdvD,MAAO8D,EACP/D,QAAS8D,EACTpE,QAAS8E,EACTL,aAAcC,IAEVlE,EAAYyE,GAAqC,MAAhBR,GAAwC,QAAhBK,GACzD,MACJvE,EAAQ8D,EAAS,QACjB/D,EAAU8D,EAAW,aACrBjE,EAAe2D,EAAgB,QAC/B9D,EAAU8E,GACRtE,EAAY6E,EAAY/F,EACtB4F,EAA2B,QAAZlF,EAAoBmF,OAAuBM,EAC1D3F,GAAaa,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCmF,eACAjE,YACA+D,MACAW,eACAL,WACA1E,eACAI,QACAD,UACAN,YAEI0F,EA3MkB5F,KACxB,MAAM,MACJS,EAAK,aACLJ,EAAY,UACZK,EAAS,QACTF,EAAO,QACPN,EAAO,QACP0F,EAAU,CAAC,GACT5F,EACE6E,EAAQ,CACZnF,KAAM,CAAC,QACPO,MAAO,CAAC,QAASC,EAASQ,GAAa,YAAa,eAAFP,QAAiBC,EAAAA,EAAAA,GAAWC,EAAaC,WAASH,QAAGC,EAAAA,EAAAA,GAAWC,EAAaE,aAAW,eAAAJ,QAAmBC,EAAAA,EAAAA,GAAWC,EAAaC,WAASH,QAAGC,EAAAA,EAAAA,GAAWC,EAAaE,aAAWJ,QAAGC,EAAAA,EAAAA,GAAWI,IAAQ,UAAAL,QAAcC,EAAAA,EAAAA,GAAWI,IAAsB,YAAVC,GAAuB,QAAJN,QAAYC,EAAAA,EAAAA,GAAWK,MAE3U,OAAOoF,EAAAA,EAAAA,GAAehB,EAAO9F,EAAsB6G,EAAQ,EA8L3CE,CAAkB9F,GAG5B+F,EAAmH,OAAvGtC,EAA8D,OAAtDC,EAAuB,MAATmB,OAAgB,EAASA,EAAMnF,MAAgBgE,EAAcS,EAAW6B,MAAgBvC,EAAOrE,EACjI6G,EAAyH,OAA5GtC,EAAiE,OAAxDC,EAAwB,MAATiB,OAAgB,EAASA,EAAM5E,OAAiB2D,EAAeO,EAAW+B,OAAiBvC,EAAQ5D,EACxIoG,EAAmF,OAAlEtC,EAA+B,MAAbiB,OAAoB,EAASA,EAAUpF,MAAgBmE,EAAkBO,EAAgB1E,KAC5H0G,GAAsF,OAApEtC,EAAgC,MAAbgB,OAAoB,EAASA,EAAU7E,OAAiB6D,EAAmBM,EAAgBnE,MAChIoG,IAAYC,EAAAA,EAAAA,GAAa,CAC7BC,YAAaR,EACbS,kBAAmBL,EACnBM,uBAAwBxB,EACxByB,gBAAiB,CACflD,MACAmD,GAAIzC,GAENlE,aACAiE,WAAW2C,EAAAA,EAAAA,GAAsB,MAAjBT,OAAwB,EAASA,EAAclC,UAAW2B,EAAQlG,KAAMuE,KAEpF4C,IAAaP,EAAAA,EAAAA,GAAa,CAC9BC,YAAaN,EACbO,kBAAmBJ,GACnBpG,aACAiE,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQ3F,MAAyB,MAAlBmG,QAAyB,EAASA,GAAenC,aAElF,OAAoB6C,EAAAA,EAAAA,MAAMf,GAAUlF,EAAAA,EAAAA,GAAS,CAAC,EAAGwF,GAAW,CAC1DhC,SAAU,CAACA,GAAuB0C,EAAAA,EAAAA,KAAKd,GAAWpF,EAAAA,EAAAA,GAAS,CAAC,EAAGgG,GAAY,CACzExC,SAAUe,QAGhB,G,yIEnPA,SAAe4B,EAAAA,EAAAA,IAA4BD,EAAAA,EAAAA,KAAK,OAAQ,CACtDE,EAAG,+FACD,wBCFJ,GAAeD,EAAAA,EAAAA,IAA4BD,EAAAA,EAAAA,KAAK,OAAQ,CACtDE,EAAG,wIACD,YCFJ,GAAeD,EAAAA,EAAAA,IAA4BD,EAAAA,EAAAA,KAAK,OAAQ,CACtDE,EAAG,kGACD,yB,0DCTG,SAASC,EAAwBlI,GACtC,OAAOC,EAAAA,EAAAA,GAAqB,cAAeD,EAC7C,CACA,MACA,GADwBE,EAAAA,EAAAA,GAAuB,cAAe,CAAC,OAAQ,UAAW,WAAY,gBAAiB,eAAgB,iBAAkB,YAAa,eCDxJC,EAAY,CAAC,cAAe,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,OAAQ,aA6BzGgI,GAAe9H,EAAAA,EAAAA,IAAO+H,EAAAA,EAAY,CACtCC,kBAAmBC,IAAQC,EAAAA,EAAAA,IAAsBD,IAAkB,YAATA,EAC1DhI,KAAM,cACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAACC,EAAOC,KAAMM,EAAWwH,eAAiB/H,EAAO+H,cAAe/H,EAAO,OAADU,QAAQC,EAAAA,EAAAA,GAAWJ,EAAWyH,QAA+B,YAArBzH,EAAWS,OAAuBhB,EAAO,QAADU,QAASC,EAAAA,EAAAA,GAAWJ,EAAWS,SAAU,GARrLpB,EAUlBoE,IAAA,IAAC,MACF7C,EAAK,WACLZ,GACDyD,EAAA,OAAK5C,EAAAA,EAAAA,GAAS,CACbJ,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQgF,KAAKC,YACxC3H,EAAW4H,eAAiB,CAC9B,UAAW,CACTpF,gBAAiB5B,EAAM6B,KAAO,QAAHtC,OAAgC,YAArBH,EAAWS,MAAsBG,EAAM6B,KAAKC,QAAQmF,OAAOC,cAAgBlH,EAAM6B,KAAKC,QAAQ1C,EAAWS,OAAOsH,YAAW,OAAA5H,OAAMS,EAAM6B,KAAKC,QAAQmF,OAAOG,aAAY,MAAMC,EAAAA,EAAAA,IAA2B,YAArBjI,EAAWS,MAAsBG,EAAM8B,QAAQmF,OAAOK,OAAStH,EAAM8B,QAAQ1C,EAAWS,OAAOkC,KAAM/B,EAAM8B,QAAQmF,OAAOG,cAEnV,uBAAwB,CACtBxF,gBAAiB,iBAGC,YAArBxC,EAAWS,OAAuB,CACnC,CAAC,KAADN,OAAMgI,EAAgBC,QAAO,QAAAjI,OAAOgI,EAAgBX,gBAAkB,CACpE/G,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQ1C,EAAWS,OAAOkC,MAEzD,CAAC,KAADxC,OAAMgI,EAAgBE,WAAa,CACjC5H,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQmF,OAAOQ,WAE9C,IACIC,GAAkCvB,EAAAA,EAAAA,KAAKwB,EAAc,CAAC,GACtDC,GAA2BzB,EAAAA,EAAAA,KAAK0B,EAA0B,CAAC,GAC3DC,GAAwC3B,EAAAA,EAAAA,KAAK4B,EAA2B,CAAC,GAiJ/E,EAhJ8BrF,EAAAA,YAAiB,SAAkBC,EAASC,GACxE,IAAIoF,EAAsBC,EAC1B,MAAMrJ,GAAQuE,EAAAA,EAAAA,GAAc,CAC1BvE,MAAO+D,EACPjE,KAAM,iBAEF,YACFwJ,EAAcR,EAAkB,MAChC7H,EAAQ,UACRsI,KAAMC,EAAWR,EAAW,cAC5BhB,GAAgB,EAChByB,kBAAmBC,EAAwBR,EAAwB,WACnES,EAAU,KACV1B,EAAO,SAAQ,UACfxD,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,GACzC4J,EAAOvB,EAAgB0B,EAAwBF,EAC/CC,EAAoBzB,EAAgB0B,EAAwBJ,EAC5D9I,GAAaa,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCiB,QACA+G,gBACAC,SAEI7B,EAvEkB5F,KACxB,MAAM,QACJ4F,EAAO,cACP4B,EAAa,MACb/G,EAAK,KACLgH,GACEzH,EACE6E,EAAQ,CACZnF,KAAM,CAAC,OAAQ8H,GAAiB,gBAAiB,QAAFrH,QAAUC,EAAAA,EAAAA,GAAWK,IAAM,OAAAN,QAAWC,EAAAA,EAAAA,GAAWqH,MAE5F2B,GAAkBvD,EAAAA,EAAAA,GAAehB,EAAOqC,EAAyBtB,GACvE,OAAO/E,EAAAA,EAAAA,GAAS,CAAC,EAAG+E,EAASwD,EAAgB,EA4D7BtD,CAAkB9F,GAClC,OAAoB+G,EAAAA,EAAAA,KAAKI,GAActG,EAAAA,EAAAA,GAAS,CAC9CwI,KAAM,WACNF,YAAYtI,EAAAA,EAAAA,GAAS,CACnB,qBAAsB2G,GACrB2B,GACHJ,KAAmBzF,EAAAA,aAAmByF,EAAM,CAC1CvH,SAA0D,OAA/CoH,EAAuBG,EAAKvJ,MAAMgC,UAAoBoH,EAAuBnB,IAE1FqB,YAA0BxF,EAAAA,aAAmB2F,EAAmB,CAC9DzH,SAAwE,OAA7DqH,EAAwBI,EAAkBzJ,MAAMgC,UAAoBqH,EAAwBpB,IAEzGzH,WAAYA,EACZwD,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,IAC7BgB,EAAO,CACRW,QAASA,IAEb,G,oLC3GO,SAAS0D,EAAkCtK,GAChD,OAAOC,EAAAA,EAAAA,GAAqB,sBAAuBD,EACrD,CACA,MACA,GADgCE,EAAAA,EAAAA,GAAuB,sBAAuB,CAAC,OAAQ,sBAAuB,oBAAqB,uBAAwB,WAAY,QAAS,QAAS,WAAY,a,0BCDrM,MAAMC,EAAY,CAAC,UAAW,YAAa,kBAAmB,UAAW,WAAY,oBAAqB,WAAY,QAAS,iBAAkB,OAAQ,WAAY,WAAY,YAAa,SA+BjLoK,GAAuBlK,EAAAA,EAAAA,IAAO,QAAS,CAClDC,KAAM,sBACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJO,GACER,EACJ,MAAO,CAAC,CACN,CAAC,MAADW,OAAOqJ,EAAwBC,QAAUhK,EAAOgK,OAC/ChK,EAAOC,KAAMD,EAAO,iBAADU,QAAkBC,EAAAA,EAAAA,GAAWJ,EAAW0J,kBAAmB,GATjDrK,EAWjCsE,IAAA,IAAC,MACF/C,EAAK,WACLZ,GACD2D,EAAA,OAAK9C,EAAAA,EAAAA,GAAS,CACbjB,QAAS,cACTsB,WAAY,SACZyI,OAAQ,UAER9J,cAAe,SACf+J,wBAAyB,cACzBC,YAAa,GACbC,YAAa,GAEb,CAAC,KAAD3J,OAAMqJ,EAAwBnB,WAAa,CACzCsB,OAAQ,YAEqB,UAA9B3J,EAAW0J,gBAA8B,CAC1C5I,cAAe,cACf+I,WAAY,GAEZC,aAAc,IACiB,QAA9B9J,EAAW0J,gBAA4B,CACxC5I,cAAe,iBACf+I,WAAY,IACmB,WAA9B7J,EAAW0J,gBAA+B,CAC3C5I,cAAe,SACf+I,WAAY,IACX,CACD,CAAC,MAAD1J,OAAOqJ,EAAwBC,QAAU,CACvC,CAAC,KAADtJ,OAAMqJ,EAAwBnB,WAAa,CACzC5H,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQgF,KAAKW,YAG9C,IACI0B,GAAoB1K,EAAAA,EAAAA,IAAO,OAAQ,CACvCC,KAAM,sBACNN,KAAM,WACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOuK,UAHrB3K,EAIvBsB,IAAA,IAAC,MACFC,GACDD,EAAA,MAAM,CACL,CAAC,KAADR,OAAMqJ,EAAwBS,QAAU,CACtCxJ,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQuH,MAAMtH,MAE9C,IA0JD,EApJsCW,EAAAA,YAAiB,SAA0BC,EAASC,GACxF,IAAIC,EAAMyG,EACV,MAAM1K,GAAQuE,EAAAA,EAAAA,GAAc,CAC1BvE,MAAO+D,EACPjE,KAAM,yBAEF,UACF2E,EAAS,gBACTG,EAAkB,CAAC,EAAC,QACpB+F,EACA9B,SAAU+B,EAAY,kBACtBC,EACAZ,MAAOa,EAAS,eAChBZ,EAAiB,MACjBa,SAAUC,EAAY,UACtB1F,EAAY,CAAC,GACXtF,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,GACzCsL,GAAiBC,EAAAA,EAAAA,KACjBrC,EAAoF,OAAxE5E,EAAuB,MAAhB2G,EAAuBA,EAAeD,EAAQ3K,MAAM6I,UAAoB5E,EAAyB,MAAlBgH,OAAyB,EAASA,EAAepC,SACnJkC,EAA2B,MAAhBC,EAAuBA,EAAeL,EAAQ3K,MAAM+K,SAC/DI,EAAe,CACnBtC,WACAkC,YAEF,CAAC,UAAW,OAAQ,WAAY,QAAS,YAAYK,SAAQC,IACzB,qBAAvBV,EAAQ3K,MAAMqL,IAA8C,qBAAfrL,EAAMqL,KAC5DF,EAAaE,GAAOrL,EAAMqL,GAC5B,IAEF,MAAMC,GAAMC,EAAAA,EAAAA,GAAiB,CAC3BvL,QACAiL,iBACAO,OAAQ,CAAC,WAELhL,GAAaa,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrC6I,WACAqB,iBACAa,WACAN,MAAOa,EAAIb,QAEPrE,EArHkB5F,KACxB,MAAM,QACJ4F,EAAO,SACPyC,EAAQ,eACRqB,EAAc,MACdO,EAAK,SACLM,GACEvK,EACE6E,EAAQ,CACZnF,KAAM,CAAC,OAAQ2I,GAAY,WAAY,iBAAFlI,QAAmBC,EAAAA,EAAAA,GAAWsJ,IAAmBO,GAAS,QAASM,GAAY,YACpHd,MAAO,CAAC,QAASpB,GAAY,YAC7B2B,SAAU,CAAC,WAAYC,GAAS,UAElC,OAAOpE,EAAAA,EAAAA,GAAehB,EAAOyE,EAAmC1D,EAAQ,EAwGxDE,CAAkB9F,GAC5BiL,EAAwE,OAAjDf,EAAwBpF,EAAUzD,YAAsB6I,EAAwB9F,EAAgB/C,WAC7H,IAAIoI,EAAQa,EASZ,OARa,MAATb,GAAiBA,EAAMJ,OAAS6B,EAAAA,GAAeb,IACjDZ,GAAqB1C,EAAAA,EAAAA,KAAKmE,EAAAA,GAAYrK,EAAAA,EAAAA,GAAS,CAC7CqD,UAAW,QACV+G,EAAqB,CACtBhH,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQ6D,MAA8B,MAAvBwB,OAA8B,EAASA,EAAoBhH,WAC1FI,SAAUoF,OAGM3C,EAAAA,EAAAA,MAAMyC,GAAsB1I,EAAAA,EAAAA,GAAS,CACvDoD,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,GAC9BjE,WAAYA,EACZwD,IAAKA,GACJyB,EAAO,CACRZ,SAAU,CAAcf,EAAAA,aAAmB6G,EAASQ,GAAeJ,GAAwBzD,EAAAA,EAAAA,MAAMqE,EAAAA,EAAO,CACtGvL,QAAS,QACTyE,SAAU,CAACoF,GAAoB3C,EAAAA,EAAAA,MAAMiD,EAAmB,CACtD/J,WAAYA,EACZ,eAAe,EACfiE,UAAW2B,EAAQoE,SACnB3F,SAAU,CAAC,SAAU,UAEpBoF,KAET,G,sEC1JA,SAAezC,EAAAA,EAAAA,IAA4BD,EAAAA,EAAAA,KAAK,OAAQ,CACtDE,EAAG,uDACD,oB,sECFJ,SAAeD,EAAAA,EAAAA,IAA4BD,EAAAA,EAAAA,KAAK,OAAQ,CACtDE,EAAG,qDACD,qB,kMCVG,SAASmE,EAAwBpM,GACtC,OAAOC,EAAAA,EAAAA,GAAqB,cAAeD,EAC7C,CACO,MAAMqM,GAAcnM,EAAAA,EAAAA,GAAuB,cAAe,CAAC,cAAe,0BAA2B,qCAAsC,uCAAwC,sCAAuC,+BAAgC,aAAc,aAAc,cAAe,iBAAkB,gBAAiB,mBAAoB,iBAAkB,kBAAmB,qBAAsB,iBAAkB,oBAAqB,kBAAmB,mBAAoB,sBAAuB,OAAQ,cAAe,eAAgB,eAAgB,gBAAiB,4BAA6B,0BAA2B,2BAA4B,yBAA0B,uBAAwB,wBAAyB,yBAA0B,uBAAwB,yBAA0B,eAAgB,uBAAwB,iCAAkC,uBAAwB,oBAAqB,6BAA8B,oCAAqC,oBAAqB,4BAA6B,2BAA4B,iCAAkC,gBAAiB,qBAAsB,iCAAkC,6BAA8B,4BAA6B,4BAA6B,6BAA8B,kBAAmB,eAAgB,kBAAmB,cAAe,eAAgB,wBAAyB,kCAAmC,aAAc,QAAS,cAAe,eAAgB,eAAgB,cAAe,QAAS,kBAAmB,gBAAiB,aAAc,uBAAwB,+BAAgC,wBAAyB,0BAA2B,uBAAwB,aAAc,kBAAmB,kBAAmB,sBAAuB,gBAAiB,OAAQ,OAAQ,WAAY,iBAAkB,WAAY,WAAY,UAAW,iBAAkB,sBAAuB,OAAQ,wBAAyB,2BAA4B,uBAAwB,6BAA8B,MAAO,gBAAiB,eAAgB,mBAAoB,gBAAiB,qBAAsB,2BAA4B,4BAA6B,WAAY,0BAA2B,iBAAkB,4BAA6B,mBAAoB,oBAAqB,aAAc,mBAAoB,WAAY,mBAAoB,oBAAqB,kBAAmB,yBAA0B,qCAAsC,4BAA6B,gBAAiB,sBAAuB,uBAAwB,sBAAuB,4BAA6B,6BAA8B,kBAAmB,wBAAyB,gCAAiC,uBAAwB,6BAA8B,uBAAwB,6BAA8B,aAAc,kBAAmB,qBAAsB,yBCQj3F,MAAMoM,EAAsB,CAC1B,CAAC,IAADnL,OAAKkL,EAAYE,gBAAe,OAAApL,OAAMkL,EAAY,+BAAiC,CACjFG,WAAY,UACZC,MAAO,SAGLC,EAAqB,CACzB,CAAC,MAADvL,OAAOkL,EAAYM,sBAAwB,CACzCH,WAAY,UACZC,MAAO,QAET,CAAC,MAADtL,OAAOkL,EAAYO,WAAa,CAC9BH,MAAO,OACPD,WAAY,YAGHK,GAAiBxM,EAAAA,EAAAA,IAAO,MAAO,CAC1CC,KAAM,cACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,IAAW,CAAC,CACrC,CAAC,KAADU,OAAMkL,EAAYS,aAAerM,EAAOqM,YACvC,CACD,CAAC,KAAD3L,OAAMkL,EAAYU,0BAA4BtM,EAAOsM,yBACpD,CACD,CAAC,KAAD5L,OAAMkL,EAAY,wCAA0C5L,EAAO,uCAClE,CACD,CAAC,KAADU,OAAMkL,EAAY,0CAA4C5L,EAAO,yCACpE,CACD,CAAC,KAADU,OAAMkL,EAAY,yCAA2C5L,EAAO,wCACnE,CACD,CAAC,KAADU,OAAMkL,EAAYW,+BAAiCvM,EAAOuM,8BACzD,CACD,CAAC,KAAD7L,OAAMkL,EAAY,8BAA6B,MAAAlL,OAAKkL,EAAYY,OAASxM,EAAO,+BAC/E,CACD,CAAC,KAADU,OAAMkL,EAAYa,aAAezM,EAAOyM,YACvC,CACD,CAAC,MAAD/L,OAAOkL,EAAYc,kBAAoB1M,EAAO0M,iBAC7C,CACD,CAAC,MAADhM,OAAOkL,EAAY,mBAAqB5L,EAAO,kBAC9C,CACD,CAAC,MAADU,OAAOkL,EAAY,sBAAwB5L,EAAO,qBACjD,CACD,CAAC,MAADU,OAAOkL,EAAY,oBAAsB5L,EAAO,mBAC/C,CACD,CAAC,MAADU,OAAOkL,EAAY,qBAAuB5L,EAAO,oBAGnD,CACE,CAAC,MAADU,OAAOkL,EAAY,wBAA0B5L,EAAO,uBACnD,CACD,CAAC,MAADU,OAAOkL,EAAYY,OAASxM,EAAOwM,MAClC,CACD,CAAC,MAAD9L,OAAOkL,EAAY,oBAAsB5L,EAAO,mBAC/C,CACD,CAAC,MAADU,OAAOkL,EAAY,uBAAyB5L,EAAO,sBAClD,CACD,CAAC,MAADU,OAAOkL,EAAY,qBAAuB5L,EAAO,oBAChD,CACD,CAAC,MAADU,OAAOkL,EAAY,sBAAwB5L,EAAO,qBACjD,CACD,CAAC,MAADU,OAAOkL,EAAY,2BAA6B5L,EAAO,0BACtD,CACD,CAAC,MAADU,OAAOkL,EAAYe,cAAgB3M,EAAO2M,aACzC,CACD,CAAC,MAADjM,OAAOkL,EAAYgB,eAAiB5M,EAAO4M,cAC1C,CACD,CAAC,MAADlM,OAAOkL,EAAYiB,eAAiB7M,EAAO6M,cAC1C,CACD,CAAC,MAADnM,OAAOkL,EAAYkB,gBAAkB9M,EAAO8M,eAC3C,CACD,CAAC,MAADpM,OAAOkL,EAAY,+BAAiC5L,EAAO,8BAC1D,CACD,CAAC,MAADU,OAAOkL,EAAY,6BAA+B5L,EAAO,4BACxD,CACD,CAAC,MAADU,OAAOkL,EAAY,8BAAgC5L,EAAO,6BACzD,CACD,CAAC,MAADU,OAAOkL,EAAY,4BAA8B5L,EAAO,2BACvD,CACD,CAAC,MAADU,OAAOkL,EAAY,0BAA4B5L,EAAO,yBACrD,CACD,CAAC,MAADU,OAAOkL,EAAY,2BAA6B5L,EAAO,0BACtD,CACD,CAAC,MAADU,OAAOkL,EAAY,4BAA8B5L,EAAO,2BACvD,CACD,CAAC,MAADU,OAAOkL,EAAY,0BAA4B5L,EAAO,yBACrD,CACD,CAAC,MAADU,OAAOkL,EAAY,mCAAqC5L,EAAO,kCAC9D,CACD,CAAC,MAADU,OAAOkL,EAAYmB,eAAiB/M,EAAO+M,cAC1C,CACD,CAAC,MAADrM,OAAOkL,EAAYoB,kBAAoBhN,EAAOgN,iBAC7C,CACD,CAAC,MAADtM,OAAOkL,EAAYqB,uBAAyBjN,EAAOiN,sBAClD,CACD,CAAC,MAADvM,OAAOkL,EAAYsB,iCAAmClN,EAAOkN,gCAC5D,CACD,CAAC,MAADxM,OAAOkL,EAAYuB,6BAA+BnN,EAAOmN,4BACxD,CACD,CAAC,MAADzM,OAAOkL,EAAY,gCAAkC5L,EAAO,+BAC3D,CACD,CAAC,MAADU,OAAOkL,EAAY,+BAAiC5L,EAAO,8BAC1D,CACD,CAAC,MAADU,OAAOkL,EAAYE,kBAAoB9L,EAAO8L,iBAC7C,CACD,CAAC,MAADpL,OAAOkL,EAAYwB,aAAepN,EAAOoN,YACxC,CACD,CAAC,MAAD1M,OAAOkL,EAAYyB,gBAAkBrN,EAAOqN,eAC3C,CACD,CAAC,MAAD3M,OAAOkL,EAAYO,WAAanM,EAAOmM,UACtC,CACD,CAAC,MAADzL,OAAOkL,EAAY0B,iBAAmBtN,EAAOsN,gBAC5C,CACD,CAAC,MAAD5M,OAAOkL,EAAY2B,WAAavN,EAAOuN,UACtC,CACD,CAAC,MAAD7M,OAAOkL,EAAY4B,WAAaxN,EAAOwN,UACtC,CACD,CAAC,MAAD9M,OAAOkL,EAAY,mBAAqB5L,EAAO,kBAC9C,CACD,CAAC,MAADU,OAAOkL,EAAY,kBAAoB5L,EAAO,iBAC7C,CACD,CAAC,MAADU,OAAOkL,EAAY,mBAAqB5L,EAAO,kBAC9C,CACD,CAAC,MAADU,OAAOkL,EAAY6B,MAAQzN,EAAOyN,KACjC,CACD,CAAC,MAAD/M,OAAOkL,EAAY8B,4BAA8B1N,EAAO0N,2BACvD,CACD,CAAC,MAADhN,OAAOkL,EAAY+B,iBAAmB3N,EAAO2N,gBAC5C,CACD,CAAC,MAADjN,OAAOkL,EAAY,+BAAiC5L,EAAO,8BAC1D,CACD,CAAC,MAADU,OAAOkL,EAAYgC,WAAa5N,EAAO4N,UACtC,CACD,CAAC,MAADlN,OAAOkL,EAAYiC,kBAAoB7N,EAAO6N,iBAC7C,CACD,CAAC,MAADnN,OAAOkL,EAAYkC,uBAAyB9N,EAAO8N,sBAClD,CACD,CAAC,MAADpN,OAAOkL,EAAYmC,6BAA+B/N,EAAO+N,4BACxD,CACD,CAAC,MAADrN,OAAOkL,EAAYoC,wBAA0BhO,EAAOgO,uBACnD,CACD,CAAC,MAADtN,OAAOkL,EAAY,qCAAuC5L,EAAO,oCAChEA,EAAOC,OA7HkBL,EA8H3BoE,IAEG,IAFF,MACF7C,GACD6C,EACC,MAAMiK,EA1JR,SAAwB9M,GACtB,OAAIA,EAAM6B,KACD7B,EAAM6B,KAAKC,QAAQiL,UAAUC,OAEX,UAAvBhN,EAAM8B,QAAQmL,MACTC,EAAAA,EAAAA,KAAQ7F,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQqL,QAAS,GAAI,MAE3CC,EAAAA,EAAAA,KAAO/F,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQqL,QAAS,GAAI,IACjD,CAkJsBE,CAAerN,GAC7BsN,EAAStN,EAAMuN,MAAMpM,aAqW3B,OApWkBlB,EAAAA,EAAAA,GAAS,CACzB,6BAAgD,kBAAXqN,EAAsB,GAAH/N,OAAM+N,EAAM,MAAOA,EAC3E,iCAAkCtN,EAAMS,WAAWE,iBACnD,wCAAyCX,EAAM6B,KAAO,QAAHtC,OAAWS,EAAM6B,KAAKC,QAAQ0L,WAAWC,eAAc,OAAAlO,OAAMS,EAAM6B,KAAKC,QAAQmF,OAAOyG,gBAAe,MAAMrG,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQ0L,WAAWG,QAAS3N,EAAM8B,QAAQmF,OAAOyG,iBAC5N,kCAAmC,EACnCE,KAAM,EACNrN,UAAW,aACXxB,SAAU,WACV8O,YAAa,MACbC,YAAa,QACbhB,cACA3L,aAAc,kCACdtB,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQgF,KAAKiH,SACzC/N,EAAMS,WAAWuN,MAAO,CACzBC,QAAS,OACT/M,OAAQ,OACRlC,QAAS,OACT8B,SAAU,EAEVoN,UAAW,EACXhO,cAAe,SACfiO,eAAgB,OAEhB,CAAC,KAAD5O,OAAMkL,EAAYS,aAAe,CAC/BhK,OAAQ,OACR,CAAC,MAAD3B,OAAOkL,EAAY,oBAAmB,MAAAlL,OAAKkL,EAAYY,OAAS,CAC9D+C,kBAAmB,gBAGvB,CAAC,KAAD7O,OAAMkL,EAAYa,aAAe,CAC/B,CAAC,MAAD/L,OAAOkL,EAAY4D,kCAAiC,SAAS,CAC3DC,SAAU,sBAEZ,CAAC,MAAD/O,OAAOkL,EAAYY,KAAI,SAAS,CAC9BiD,SAAU,qBACVC,WAAY,WAGhB,CAAC,MAADhP,OAAOkL,EAAY,sCAAqC,MAAAlL,OAAKkL,EAAY,oBAAmB,MAAAlL,OAAKkL,EAAYY,OAAS,CACpH+C,kBAAmB,eAErB,CAAC,MAAD7O,OAAOkL,EAAYmB,aAAY,SAAArM,OAAQkL,EAAYY,OAAS,CAC1DrC,wBAAyB,cACzBhI,WAAY,KACZC,QAAS,SACTV,UAAW,cAEb,CAAC,MAADhB,OAAOkL,EAAYmB,aAAY,sBAAArM,OAAqBkL,EAAYY,KAAI,kBAAkB,CACpF4C,QAAS,SAAF1O,OAAWS,EAAM6B,KAAO,QAAHtC,OAAWS,EAAM6B,KAAKC,QAAQiM,QAAQ5G,YAAW,YAAYE,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQiM,QAAQhM,KAAM,IAAI,QAC/HyM,aAAc,EACdC,eAAgB,GAElB,CAAC,MAADlP,OAAOkL,EAAYmB,aAAY,eAAArM,OAAckL,EAAYY,KAAI,WAAW,CACtE4C,QAAS,SAAF1O,OAAWS,EAAM8B,QAAQiM,QAAQhM,KAAI,SAE9C,CAAC,MAADxC,OAAOkL,EAAYqB,qBAAoB,SAAAvM,OAAQkL,EAAYgB,eAAiB,CAC1ExK,QAAS,EACTb,eAAgB,SAChBE,WAAY,UAEd,CAAC,MAADf,OAAOkL,EAAYmB,eAAiB,CAClC7M,SAAU,WACVC,QAAS,OACTsB,WAAY,UAEd,CAAC,MAADf,OAAOkL,EAAY,wBAAuB,MAAAlL,OAAKkL,EAAYM,oBAAmB,SAAAxL,OAAQkL,EAAY,0BAAyB,MAAAlL,OAAKkL,EAAYM,sBAAwB,CAClKH,WAAY,UACZC,MAAO,QAET,CAAC,MAADtL,OAAOkL,EAAYmB,aAAY,UAAArM,OAASkL,EAAY,wBAAuB,OAAAlL,OAAMkL,EAAYgC,WAAa,CACxGiC,QAAS,EACTrN,WAAYrB,EAAMsB,YAAYC,OAAO,CAAC,WAAY,CAChDG,SAAU1B,EAAMsB,YAAYI,SAASiN,WAGzC,CAAC,MAADpP,OAAOkL,EAAYuB,6BAA+B,CAChDhN,QAAS,OACTsB,WAAY,SACZQ,SAAU,EACV8M,KAAM,EACNW,WAAY,SACZD,SAAU,SAEVvP,SAAU,YAEZ,CAAC,MAADQ,OAAOkL,EAAY4D,oCAAsC,CACvDC,SAAU,SACVtP,QAAS,OACTsB,WAAY,UAEd,CAAC,MAADf,OAAOkL,EAAY,6BAA4B,MAAAlL,OAAKkL,EAAYuB,6BAA+B,CAC7F4C,kBAAmB,MACnBC,kBAAmB,QACnBtO,UAAW,cAEb,CAAC,MAADhB,OAAOkL,EAAY,6BAA4B,KAAAlL,OAAIkL,EAAY,kCAAiC,MAAAlL,OAAKkL,EAAYuB,6BAA+B,CAC9I8C,aAAc,QAEhB,CAAC,MAADvP,OAAOkL,EAAY,6BAA4B,KAAAlL,OAAIkL,EAAY,oCAAsC,CACnGmE,kBAAmB,MACnBC,kBAAmB,QACnBtO,UAAW,cAEb,CAAC,MAADhB,OAAOkL,EAAYoB,kBAAoB,CACrCkD,UAAW,aAAFxP,OAAeuN,IAE1B,CAAC,MAADvN,OAAOkL,EAAYgC,SAAQ,SAAAlN,OAAQkL,EAAYwB,aAAe,CAC5DrL,SAAU,WAEZ,CAAC,MAADrB,OAAOkL,EAAY,4BAA8B,CAC/C1B,OAAQ,WAEV,CAAC,MAADxJ,OAAOkL,EAAY,6BAA4B,MAAAlL,OAAKkL,EAAYuB,6BAA+B,CAC7F5L,eAAgB,UAElB,CAAC,MAADb,OAAOkL,EAAY,4BAA2B,MAAAlL,OAAKkL,EAAYsB,+BAA8B,SAAAxM,OAAQkL,EAAY,4BAA2B,MAAAlL,OAAKkL,EAAYuB,6BAA+B,CAC1L9L,cAAe,eAEjB,CAAC,MAADX,OAAOkL,EAAY,6BAA4B,MAAAlL,OAAKkL,EAAYO,SAAQ,SAAAzL,OAAQkL,EAAY,4BAA2B,MAAAlL,OAAKkL,EAAYO,WAAa,CACnJ9B,YAAa,OACbD,YAAa,GAEf,CAAC,MAAD1J,OAAOkL,EAAY,4BAA2B,MAAAlL,OAAKkL,EAAYO,SAAQ,SAAAzL,OAAQkL,EAAY,4BAA2B,MAAAlL,OAAKkL,EAAYO,WAAa,CAClJ9B,YAAa,OACbD,YAAa,IAEf,CAAC,MAAD1J,OAAOkL,EAAY,0BAA4B,CAC7C7I,iBAAkB5B,EAAM6B,MAAQ7B,GAAO8B,QAAQmF,OAAO+H,OAExD,CAAC,MAADzP,OAAOkL,EAAYE,kBAAoB,CACrCC,WAAY,SACZ7L,SAAU,WACVqC,OAAQ,IACRpC,QAAS,OACTkB,cAAe,SACfE,eAAgB,SAChBP,MAAOiN,GAET,wBAAyB,CACvB,CAAC,MAADvN,OAAOkL,EAAYwE,cAAa,WAAWvE,EAC3C,CAAC,MAADnL,OAAOkL,EAAYmB,aAAY,WAAWd,EAC1C,CAAC,MAADvL,OAAOkL,EAAYmB,aAAY,UAAArM,OAASkL,EAAY,wBAAuB,aAAAlL,OAAYkL,EAAYgC,WAAa,CAC9GiC,QAAS,KAGb,uBAAwB,CACtB,CAAC,MAADnP,OAAOkL,EAAYwE,gBAAkBvE,EACrC,CAAC,MAADnL,OAAOkL,EAAYmB,eAAiBd,GAEtC,CAAC,MAADvL,OAAOkL,EAAY,+BAAiC,CAClDjI,MAAO,IAET,CAAC,MAADjD,OAAOkL,EAAY,gCAAkC,CACnDtI,OAAQ,IAEV,CAAC,MAAD5C,OAAOkL,EAAY,gCAAkC,CACnD1B,OAAQ,aACRmG,YAAa,OACb,UAAW,CACTrP,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQgF,KAAKiH,QAE1C,uBAAwB,CACtBlO,MAAOiN,IAGX,CAAC,KAADvN,OAAMkL,EAAY,+BAAiC,CACjD5K,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQgF,KAAKiH,SAE5C,QAAS,CACPoB,cAAe,SAGnB,CAAC,MAAD5P,OAAOkL,EAAYyB,gBAAkB,CACnCrM,MAAO,WAET,CAAC,MAADN,OAAOkL,EAAYO,WAAa,CAC9BH,MAAO,EACPD,WAAY,SACZhK,SAAU,GACVsI,aAAc,GACdlK,QAAS,OACTsB,WAAY,UAEd,CAAC,IAADf,OAAKkL,EAAY2B,WAAa,CAC5BxB,WAAY,UACZC,MAAO,QAET,CAAC,MAADtL,OAAOkL,EAAY6B,MAAQ,CACzBtN,QAAS,OACT6L,MAAO,cACPuE,YAAa,QAEb,yBAA0B,CACxBxN,iBAAkB5B,EAAM6B,MAAQ7B,GAAO8B,QAAQmF,OAAO+H,MAEtD,uBAAwB,CACtBpN,gBAAiB,gBAGrB,iBAAkB,CAChBA,gBAAiB5B,EAAM6B,KAAO,QAAHtC,OAAWS,EAAM6B,KAAKC,QAAQiM,QAAQ5G,YAAW,OAAA5H,OAAMS,EAAM6B,KAAKC,QAAQmF,OAAOoI,gBAAe,MAAMhI,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQiM,QAAQhM,KAAM/B,EAAM8B,QAAQmF,OAAOoI,iBACxL,yBAA0B,CACxBzN,gBAAiB5B,EAAM6B,KAAO,QAAHtC,OAAWS,EAAM6B,KAAKC,QAAQiM,QAAQ5G,YAAW,8BAAA5H,OACpES,EAAM6B,KAAKC,QAAQmF,OAAOoI,gBAAe,yBAAA9P,OACzCS,EAAM6B,KAAKC,QAAQmF,OAAOG,aAAY,uBACpCC,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQiM,QAAQhM,KAAM/B,EAAM8B,QAAQmF,OAAOoI,gBAAkBrP,EAAM8B,QAAQmF,OAAOG,cAExG,uBAAwB,CACtBxF,gBAAiB5B,EAAM6B,KAAO,QAAHtC,OAAWS,EAAM6B,KAAKC,QAAQiM,QAAQ5G,YAAW,OAAA5H,OAAMS,EAAM6B,KAAKC,QAAQmF,OAAOoI,gBAAe,MAAMhI,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQiM,QAAQhM,KAAM/B,EAAM8B,QAAQmF,OAAOoI,qBAKhM,CAAC,MAAD9P,OAAOkL,EAAYY,OAAS,CAC1BrM,QAAS,OACTsB,WAAY,SACZwO,aAAc,YACd,iBAAkB,CAChBlN,gBAAiB5B,EAAM6B,KAAO,QAAHtC,OAAWS,EAAM6B,KAAKC,QAAQiM,QAAQ5G,YAAW,OAAA5H,OAAMS,EAAM6B,KAAKC,QAAQmF,OAAOoI,gBAAe,MAAMhI,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQiM,QAAQhM,KAAM/B,EAAM8B,QAAQmF,OAAOoI,iBACxL,yBAA0B,CACxBzN,gBAAiB5B,EAAM6B,KAAO,QAAHtC,OAAWS,EAAM6B,KAAKC,QAAQiM,QAAQ5G,YAAW,OAAA5H,OAAMS,EAAM6B,KAAKC,QAAQmF,OAAOoI,gBAAkBrP,EAAM8B,QAAQmF,OAAOG,aAAY,MAAMC,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQiM,QAAQhM,KAAM/B,EAAM8B,QAAQmF,OAAOoI,gBAAkBrP,EAAM8B,QAAQmF,OAAOG,cAEnQ,uBAAwB,CACtBxF,gBAAiB5B,EAAM6B,KAAO,QAAHtC,OAAWS,EAAM6B,KAAKC,QAAQiM,QAAQ5G,YAAW,OAAA5H,OAAMS,EAAM6B,KAAKC,QAAQmF,OAAOoI,gBAAe,MAAMhI,EAAAA,EAAAA,IAAMrH,EAAM8B,QAAQiM,QAAQhM,KAAM/B,EAAM8B,QAAQmF,OAAOoI,qBAKhM,CAAC,KAAD9P,OAAMkL,EAAY,8BAA6B,MAAAlL,OAAKkL,EAAYY,OAAS,CACvEiE,WAAY,QAEd,CAAC,MAAD/P,OAAOkL,EAAY6B,IAAG,UAAA/M,OAASkL,EAAY,sBAAqB,SAAAlL,OAAQkL,EAAYY,OAAS,CAC3FiD,SAAU,SACVC,WAAY,UAEd,CAAC,MAADhP,OAAOkL,EAAYe,cAAgB,CACjC8C,SAAU,SACViB,aAAc,YAEhB,CAAC,MAADhQ,OAAOkL,EAAYY,KAAI,KAAA9L,OAAIkL,EAAY,yBAA2B,CAChE1B,OAAQ,WAEV,CAAC,MAADxJ,OAAOkL,EAAYY,KAAI,KAAA9L,OAAIkL,EAAY,mBAAqB,CAC1DxJ,QAAS,EACTjC,QAAS,OACTwQ,UAAWxP,EAAMyP,QAAQ,GACzB7N,iBAAkB5B,EAAM6B,MAAQ7B,GAAO8B,QAAQ0L,WAAWkC,MAC1D,iBAAkB,CAChBzB,QAAS,SAAF1O,QAAYS,EAAM6B,MAAQ7B,GAAO8B,QAAQiM,QAAQhM,KAAI,QAC5D0M,cAAe,SAGnB,CAAC,MAADlP,OAAOkL,EAAY,kBAAoB,CACrC+E,UAAWxP,EAAMyP,QAAQ,IAE3B,CAAC,MAADlQ,OAAOkL,EAAY,gBAAe,MAAAlL,OAAKkL,EAAYY,OAAS,CAC1DmE,UAAWxP,EAAMyP,QAAQ,GACzB7N,iBAAkB5B,EAAM6B,MAAQ7B,GAAO8B,QAAQ0L,WAAWkC,OAE5D,CAAC,MAADnQ,OAAOkL,EAAYc,kBAAoB,CACrCvM,QAAS,OACTkC,OAAQ,OACR2J,MAAO,OACPvK,WAAY,SACZF,eAAgB,UAElB,CAAC,MAADb,OAAOkL,EAAYkF,YAAW,wBAAwB,CACpD9P,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQgF,KAAKC,WAE5C,CAAC,MAADxH,OAAOkL,EAAYkF,YAAW,yBAAyB,CACrD9P,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQgF,KAAKW,UAE5C,CAAC,MAADlI,OAAOkL,EAAYmF,cAAgB,CACjC5Q,QAAS,cACTsB,WAAY,SACZuP,QAAS7P,EAAM8P,QAAQ,IAEzB,CAAC,MAADvQ,OAAOkL,EAAY+B,iBAAmB,CACpCxN,QAAS,cACT4O,KAAM,EACNtN,WAAY,SACZF,eAAgB,SAChBsO,SAAU1O,EAAM6B,MAAQ7B,GAAO8B,QAAQmF,OAAOyG,iBAEhD,CAAC,MAADnO,OAAOkL,EAAY,+BAAiC,CAClD1B,OAAQ,OACR2F,QAAS,GAEX,CAAC,MAADnP,OAAOkL,EAAYsF,0BAA4B,CAC7C9O,QAAS,EACTX,WAAY,WAEd,CAAC,IAADf,OAAKkL,EAAYiC,kBAAoB,CACnCI,eAEF,CAAC,MAADvN,OAAOkL,EAAY,2BAA6B,CAC9CuF,iBAAkB,MAClBC,iBAAkB,SAEpB,CAAC,MAAD1Q,OAAOkL,EAAY,mCAAqC,CACtDuF,iBAAkB,MAClBC,iBAAkB,SAEpB,CAAC,MAAD1Q,OAAOkL,EAAY,oBAAsB,CACvCrK,eAAgB,cAElB,CAAC,MAADb,OAAOkL,EAAY,qBAAuB,CACxCrK,eAAgB,YAElB,CAAC,MAADb,OAAOkL,EAAY,sBAAwB,CACzCrK,eAAgB,UAElB,CAAC,MAADb,OAAOkL,EAAYsB,iCAAmC,CACpD/M,QAAS,OACT6L,MAAO,OACP3J,OAAQ,QAEV,CAAC,MAAD3B,OAAOkL,EAAY8B,4BAA8B,CAC/CvN,QAAS,QAEX,CAAC,MAADO,OAAOkL,EAAY,0BAAyB,SAAAlL,OAAQkL,EAAY,mBAAqB,CACnF+C,YAAaxN,EAAM6B,MAAQ7B,GAAO8B,QAAQ0L,WAAWkC,MACrDzO,QAAS,SACTE,aAAc,kCACduN,SAAU1O,EAAM6B,MAAQ7B,GAAO8B,QAAQmF,OAAOyG,iBAEhD,CAAC,MAADnO,OAAOkL,EAAY,mBAAqB,CACtC+C,YAAaxN,EAAM6B,MAAQ7B,GAAO8B,QAAQ0L,WAAWkC,MACrDzO,QAAS,SACTE,aAAc,kCACduN,SAAU1O,EAAM6B,MAAQ7B,GAAO8B,QAAQmF,OAAOyG,gBAC9C,CAAC,MAADnO,OAAOkL,EAAY8B,4BAA8B,CAC/CvN,QAAS,SAGb,CAAC,MAADO,OAAOkL,EAAYkC,uBAAyB,CAC1C3N,QAAS,OACTsB,WAAY,SACZuK,MAAO,QAET,CAAC,MAADtL,OAAOkL,EAAYmC,6BAA+B,CAChDgB,KAAM,WACNsC,UAAW,UACXhH,YAAalJ,EAAM8P,QAAQ,IAE7B,CAAC,MAADvQ,OAAOkL,EAAY0F,uBAAyB,CAC1CnR,QAAS,OACTsB,WAAY,SACZuK,MAAO,QAET,CAAC,MAADtL,OAAOkL,EAAY2F,6BAA+B,CAChDxC,KAAM,WACNsC,UAAW,UACXhH,YAAalJ,EAAM8P,QAAQ,KAGf,IClgBZO,EAAgB,CAAC,EAGhB,SAASC,EAAWC,EAAMC,GAC/B,MAAM5N,EAAMF,EAAAA,OAAa2N,GAIzB,OAHIzN,EAAI6N,UAAYJ,IAClBzN,EAAI6N,QAAUF,EAAKC,IAEd5N,CACT,CCTA,MAAM8N,EAAQ,GACP,SAASC,EAAWC,GAEzBlO,EAAAA,UAAgBkO,EAAIF,EAEtB,CCNO,MAAMG,EAAe,SAACC,GAAiC,IAAxBC,EAAOC,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,UAC1CE,GAAgB,EACpB,MAAMC,EAAeC,MAAMC,QAAQP,GAAWA,EAAQQ,KAAK,MAAQR,EACnE,MAAO,KACAI,IACHA,GAAgB,EACA,UAAZH,EACFQ,QAAQlI,MAAM8H,GAEdI,QAAQC,KAAKL,GAEjB,CAEJ,ECbMM,EAAKC,OAAOD,GACX,SAASE,EAAyBC,EAAGC,GAC1C,GAAID,IAAMC,EACR,OAAO,EAET,KAAMD,aAAaF,WAAaG,aAAaH,QAC3C,OAAO,EAET,IAAII,EAAU,EACVC,EAAU,EAId,IAAK,MAAM9H,KAAO2H,EAAG,CAEnB,GADAE,GAAW,GACNL,EAAGG,EAAE3H,GAAM4H,EAAE5H,IAChB,OAAO,EAET,KAAMA,KAAO4H,GACX,OAAO,CAEX,CAGA,IAAK,MAAMG,KAAKH,EACdE,GAAW,EAKb,OAAOD,IAAYC,CACrB,CC1BmClB,EAAa,CAAC,iFAAkF,+DAInI,SAASoB,EAAcC,EAAQC,GAC7B,OAJF,SAA0BA,GACxB,OAAOA,EAASC,aAClB,CAEMC,CAAiBF,GACZA,EAASD,GAEXC,EAASD,EAAOzB,QAAQ6B,MACjC,CACA,MAAMC,EAAiBb,OAAOD,GACjBe,EAAuBb,EAC9Bc,EAAaA,KAAA,CACjBH,MAAO,KACPI,OAAQ,KACRP,SAAU,OAECQ,EAAkB,SAACT,EAAQC,GAAsC,IAA5BO,EAAM1B,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAGuB,EAMzD,MAAMK,EAAOtC,EAAWmC,GAClBI,EAAoC,OAA1BD,EAAKnC,QAAQ0B,UACtBG,EAAOQ,GAAYpQ,EAAAA,SAE1BmQ,EAAU,KAAOZ,EAAcC,EAAQC,IAavC,OAZAS,EAAKnC,QAAQ6B,MAAQA,EACrBM,EAAKnC,QAAQiC,OAASA,EACtBE,EAAKnC,QAAQ0B,SAAWA,EACxBxB,GAAW,IACFuB,EAAOzB,QAAQsC,MAAMC,WAAU,KACpC,MAAMC,EAAWhB,EAAcC,EAAQU,EAAKnC,QAAQ0B,UAC/CS,EAAKnC,QAAQiC,OAAOE,EAAKnC,QAAQ6B,MAAOW,KAC3CL,EAAKnC,QAAQ6B,MAAQW,EACrBH,EAASG,GACX,MAGGX,CACT,EC7CaY,EAAqCxQ,EAAAA,mBAAoBqC,GAI/D,SAASoO,IACd,MAAMC,EAAgB1Q,EAAAA,WAAiBwQ,GACvC,QAAsBnO,IAAlBqO,EACF,MAAM,IAAIC,MAAM,CAAC,qDAAsD,oHAAqH,gFAAgF/B,KAAK,OAEnR,OAAO8B,CACT,C,eCTIE,EAAY,YAgFT,IAAIC,EAAuB,SAA8B3B,EAAGC,GACjE,OAAOD,IAAMC,CACf,EAqBO,SAAS2B,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCN,EAAuBM,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKjD,SAAWkD,EAAKlD,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASiD,EAAKjD,OAETmD,EAAI,EAAGA,EAAInD,EAAQmD,IAC1B,IAAKR,EAAcM,EAAKE,GAAID,EAAKC,IAC/B,OAAO,EAIX,OAAO,CACT,CACF,CAYmBC,CAAyBT,GACtCU,EAAoB,IAAZP,EA/Gd,SAA8BrB,GAC5B,IAAI6B,EACJ,MAAO,CACLC,IAAK,SAAavK,GAChB,OAAIsK,GAAS7B,EAAO6B,EAAMtK,IAAKA,GACtBsK,EAAME,MAGRnB,CACT,EACAoB,IAAK,SAAazK,EAAKwK,GACrBF,EAAQ,CACNtK,IAAKA,EACLwK,MAAOA,EAEX,EACAE,WAAY,WACV,OAAOJ,EAAQ,CAACA,GAAS,EAC3B,EACAK,MAAO,WACLL,OAAQxP,CACV,EAEJ,CAwF8B8P,CAAqBZ,GAtFnD,SAAwBF,EAASrB,GAC/B,IAAIoC,EAAU,GAEd,SAASN,EAAIvK,GACX,IAAI8K,EAAaD,EAAQE,WAAU,SAAUT,GAC3C,OAAO7B,EAAOzI,EAAKsK,EAAMtK,IAC3B,IAEA,GAAI8K,GAAc,EAAG,CACnB,IAAIR,EAAQO,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQX,IAGXA,EAAME,KACf,CAGA,OAAOnB,CACT,CAwBA,MAAO,CACLkB,IAAKA,EACLE,IAxBF,SAAazK,EAAKwK,GACZD,EAAIvK,KAASqJ,IAEfwB,EAAQI,QAAQ,CACdjL,IAAKA,EACLwK,MAAOA,IAGLK,EAAQ7D,OAAS8C,GACnBe,EAAQK,MAGd,EAaER,WAXF,WACE,OAAOG,CACT,EAUEF,MARF,WACEE,EAAU,EACZ,EAQF,CAmCiEM,CAAerB,EAASE,GAEvF,SAASoB,IACP,IAAIZ,EAAQH,EAAME,IAAIxD,WAEtB,GAAIyD,IAAUnB,EAAW,CAIvB,GAFAmB,EAAQhB,EAAK6B,MAAM,KAAMtE,WAErBgD,EAAqB,CACvB,IACIuB,EADUjB,EAAMK,aACQa,MAAK,SAAUjB,GACzC,OAAOP,EAAoBO,EAAME,MAAOA,EAC1C,IAEIc,IACFd,EAAQc,EAAcd,MAE1B,CAEAH,EAAMI,IAAI1D,UAAWyD,EACvB,CAEA,OAAOA,CACT,CAMA,OAJAY,EAASI,WAAa,WACpB,OAAOnB,EAAMM,OACf,EAEOS,CACT,CChIO,SAASK,EAAsBC,GACpC,IAAK,IAAIC,EAAO5E,UAAUC,OAAQ4E,EAAyB,IAAIzE,MAAMwE,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAK9E,UAAU8E,GAiF/C,OA9EqB,WACnB,IAAK,IAAIC,EAAQ/E,UAAUC,OAAQ+E,EAAQ,IAAI5E,MAAM2E,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACrFD,EAAMC,GAASjF,UAAUiF,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBtR,GAGduR,EAAaN,EAAMb,MAQvB,GAN0B,kBAAfmB,IACTF,EAAwBE,EAExBA,EAAaN,EAAMb,OAGK,oBAAfmB,EACT,MAAM,IAAIjD,MAAM,qFAAuFiD,EAAa,KAKtH,IACIC,EADwBH,EACuBC,eAC/CA,OAA4C,IAA3BE,EAAoCV,EAAyBU,EAM9EC,EAAsBpF,MAAMC,QAAQgF,GAAkBA,EAAiB,CAACA,GACxEI,EA3DR,SAAyBT,GACvB,IAAIS,EAAerF,MAAMC,QAAQ2E,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKS,EAAaC,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CAChB,IAAI,CACF,IAAIC,EAAkBH,EAAaI,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIjY,MAAQ,WAAa,YAAciY,CAC3F,IAAGrF,KAAK,MACR,MAAM,IAAI+B,MAAM,kGAAoGuD,EAAkB,IACxI,CAEA,OAAOH,CACT,CA8CuBK,CAAgBd,GAC/Be,EAAqBpB,EAAQL,WAAM,EAAQ,CAAC,WAG9C,OAFAa,IAEOG,EAAWhB,MAAM,KAAMtE,UAChC,GAAGzR,OAAOiX,IAENrE,EAAWwD,GAAQ,WAIrB,IAHA,IAAIqB,EAAS,GACT/F,EAASwF,EAAaxF,OAEjBmD,EAAI,EAAGA,EAAInD,EAAQmD,IAG1B4C,EAAOC,KAAKR,EAAarC,GAAGkB,MAAM,KAAMtE,YAK1C,OADAkF,EAAca,EAAmBzB,MAAM,KAAM0B,EAE/C,IAeA,OAdAtF,OAAOwF,OAAO/E,EAAU,CACtBmE,WAAYA,EACZS,mBAAoBA,EACpBN,aAAcA,EACdU,WAAY,WACV,OAAOjB,CACT,EACAkB,eAAgB,WACd,OAAOjB,CACT,EACAkB,oBAAqB,WACnB,OAAOlB,EAAkB,CAC3B,IAEKhE,CACT,CAIF,CACO,IAAImF,EAAgC5B,EAAsBlC,GCrGjE,MAAM+D,EAAiB,CACrBjD,MAAO,IAAIkD,SAEoB3G,EAAa,CAAC,4GAA6G,uJAC5J,SAAS4G,EAAchD,GACrB,MAAO,YAAaA,GAAS,eAAgBA,EAAMhE,OACrD,CACA,MAAMiH,EAAsB,CAC1BC,GAAI,WAEOL,EAAiB,SAAC1F,EAAGC,EAAG+F,EAAGvR,EAAGwR,EAAGC,GAC5C,IAAI9G,UAAAC,QAAA,IAAAD,UAAAC,OAAA,GAAc,EAChB,MAAM,IAAIoC,MAAM,mCAElB,IAAIlB,EACJ,GAAIP,GAAKC,GAAK+F,GAAKvR,GAAKwR,GAAKC,EAC3B3F,EAAWA,CAAC4F,EAAeC,KACzB,MAAMC,EAAWR,EAAcM,GACzBG,EAAgC,MAAnBF,EAA0BA,EAAkBC,EAAWF,EAActH,QAAQyH,WAAaR,EACvGpF,EAAQ2F,EAAWF,EAActH,QAAQ6B,MAAQyF,EACjDI,EAAKvG,EAAEU,EAAO4F,GACdE,EAAKvG,EAAES,EAAO4F,GACdG,EAAKT,EAAEtF,EAAO4F,GACdI,EAAKjS,EAAEiM,EAAO4F,GACdK,EAAKV,EAAEvF,EAAO4F,GACpB,OAAOJ,EAAEK,EAAIC,EAAIC,EAAIC,EAAIC,EAAG,OAEzB,GAAI3G,GAAKC,GAAK+F,GAAKvR,GAAKwR,EAC7B1F,EAAWA,CAAC4F,EAAeC,KACzB,MAAMC,EAAWR,EAAcM,GACzBG,EAAgC,MAAnBF,EAA0BA,EAAkBC,EAAWF,EAActH,QAAQyH,WAAaR,EACvGpF,EAAQ2F,EAAWF,EAActH,QAAQ6B,MAAQyF,EACjDI,EAAKvG,EAAEU,EAAO4F,GACdE,EAAKvG,EAAES,EAAO4F,GACdG,EAAKT,EAAEtF,EAAO4F,GACdI,EAAKjS,EAAEiM,EAAO4F,GACpB,OAAOL,EAAEM,EAAIC,EAAIC,EAAIC,EAAG,OAErB,GAAI1G,GAAKC,GAAK+F,GAAKvR,EACxB8L,EAAWA,CAAC4F,EAAeC,KACzB,MAAMC,EAAWR,EAAcM,GACzBG,EAAgC,MAAnBF,EAA0BA,EAAkBC,EAAWF,EAActH,QAAQyH,WAAaR,EACvGpF,EAAQ2F,EAAWF,EAActH,QAAQ6B,MAAQyF,EACjDI,EAAKvG,EAAEU,EAAO4F,GACdE,EAAKvG,EAAES,EAAO4F,GACdG,EAAKT,EAAEtF,EAAO4F,GACpB,OAAO7R,EAAE8R,EAAIC,EAAIC,EAAG,OAEjB,GAAIzG,GAAKC,GAAK+F,EACnBzF,EAAWA,CAAC4F,EAAeC,KACzB,MAAMC,EAAWR,EAAcM,GACzBG,EAAgC,MAAnBF,EAA0BA,EAAkBC,EAAWF,EAActH,QAAQyH,WAAaR,EACvGpF,EAAQ2F,EAAWF,EAActH,QAAQ6B,MAAQyF,EACjDI,EAAKvG,EAAEU,EAAO4F,GACdE,EAAKvG,EAAES,EAAO4F,GACpB,OAAON,EAAEO,EAAIC,EAAG,MAEb,KAAIxG,IAAKC,EASd,MAAM,IAAIwB,MAAM,qBARhBlB,EAAWA,CAAC4F,EAAeC,KACzB,MAAMC,EAAWR,EAAcM,GACzBG,EAAgC,MAAnBF,EAA0BA,EAAkBC,EAAWF,EAActH,QAAQyH,WAAaR,EACvGpF,EAAQ2F,EAAWF,EAActH,QAAQ6B,MAAQyF,EACjDI,EAAKvG,EAAEU,EAAO4F,GACpB,OAAOrG,EAAEsG,EAAG,CAIhB,CAKA,OADAhG,EAASC,eAAgB,EAClBD,CACT,EACaqG,EAAyB,WAAa,QAAA5C,EAAA5E,UAAAC,OAATwH,EAAI,IAAArH,MAAAwE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ2C,EAAI3C,GAAA9E,UAAA8E,GAC5C,MAAM3D,EAAW,WACa,IAA5B,IAAIuG,EAAYC,EAAY5C,EAAA/E,UAAAC,OADT2H,EAAY,IAAAxH,MAAA2E,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZ2C,EAAY3C,GAAAjF,UAAAiF,GAE/B,MAAO8B,EAAeG,GAAcU,EAC9BX,EAAWR,EAAcM,GACzBc,EAAWZ,EAAWF,EAActH,QAAQyH,WAA2B,MAAdA,EAAqBA,EAAaR,EAC3FpF,EAAQ2F,EAAWF,EAActH,QAAQ6B,MAAQyF,EAMvD,MAAM,MACJzD,GACEiD,EAEF,IAAIuB,EADN,GAAIxE,EAAME,IAAIqE,IAAmD,OAArCH,EAAapE,EAAME,IAAIqE,KAAsBH,EAAWlE,IAAIiE,GAItF,OAA8C,OAAtCK,EAAcxE,EAAME,IAAIqE,SAAqB,EAASC,EAAYtE,IAAIiE,EAAhBK,CAAsBxG,EAAOuG,GAE7F,MAAME,EAAcC,KAA0BP,GAK9C,OAJKnE,EAAME,IAAIqE,IACbvE,EAAM2E,IAAIJ,EAAU,IAAIK,KAEa,OAAtCP,EAAcrE,EAAME,IAAIqE,KAAsBF,EAAYM,IAAIR,EAAMM,GAC9DA,EAAYzG,EAAOuG,EAC5B,EAKA,OADA1G,EAASC,eAAgB,EAClBD,CACT,EC5GagH,EAAsB7G,GAASA,EAAM8G,QACrCC,EAA2B/B,EAAe6B,GAAqBC,GAAWA,EAAQ3E,QAClF6E,EAA4BhC,EAAe6B,GAAqBC,GAAWA,EAAQG,SCEnFC,EAA2BlH,GAASA,EAAMmH,QAM1CC,EAA2BpC,EAAekC,GAA0BG,GAAgBA,EAAaC,gBAMjGC,EAA2BvC,EAAekC,GAA0BG,GAAgBA,EAAaG,SAMjGC,EAAgCvB,EAAuBkB,EAA0BG,GAA0B,CAACG,EAAWF,IAAWE,EAAUnD,KAAIoD,GAASH,EAAOG,OAOhKC,GAAoC5C,EAAekC,GAA0BG,GAAgBA,EAAaQ,wBAM1GC,GAAuC5B,EAAuBuB,EAA+BG,IAAmC,CAACT,EAASU,IAA0BV,EAAQY,QAAOC,IAAkD,IAAxCH,EAAsBG,EAAOL,WAM1NM,GAAkC/B,EAAuB4B,IAAsCI,GAAkBA,EAAe3D,KAAIyD,GAAUA,EAAOL,UAMrJQ,GAA8BjC,EAAuB4B,IAAsCI,IACtG,MAAME,EAAY,GAClB,IAAIC,EAAkB,EACtB,IAAK,IAAIvG,EAAI,EAAGA,EAAIoG,EAAevJ,OAAQmD,GAAK,EAC9CsG,EAAUzD,KAAK0D,GACfA,GAAmBH,EAAepG,GAAGwG,cAEvC,OAAOF,CAAS,IAOLG,GAAgCvD,EAAe8C,GAAsCK,IAA6B,CAACD,EAAgBE,KAC9I,MAAMI,EAAWN,EAAevJ,OAChC,OAAiB,IAAb6J,EACK,EAEFJ,EAAUI,EAAW,GAAKN,EAAeM,EAAW,GAAGF,aAAa,IAOhEG,GAA0CvC,EAAuBuB,GAA+BN,GAAWA,EAAQY,QAAOW,GAAOA,EAAIC,eAMrIC,GAAqC1C,EAAuBuB,GAA+BN,GAAWA,EAAQ0B,QAAO,CAACC,EAAKJ,KAClIA,EAAIC,aACNG,EAAIJ,EAAIf,OAASe,GAEZI,IACN,CAAC,KChFSC,GAA6B/I,GAASA,EAAMgJ,eAC5CC,GAAyC/C,EAAuB6C,IAA4BC,IACvG,IAAIE,EACJ,OAA4G,OAApGA,EAA0C,MAAlBF,OAAyB,EAASA,EAAeG,wBAAkCD,EAAwB,CAAC,CAAC,IAElIE,GAAiClD,EAAuB6C,IAA4BC,IAC/F,IAAIK,EACJ,OAA4F,OAApFA,EAA0C,MAAlBL,OAAyB,EAASA,EAAexB,QAAkB6B,EAAwB,CAAC,CAAC,IAElHC,GAA0CpD,EAAuB6C,IAA4BC,IACxG,IAAIO,EACJ,OAAqG,OAA7FA,EAA0C,MAAlBP,OAAyB,EAASA,EAAeQ,iBAA2BD,EAAwB,EAAE,IAE3HE,GAAyCzE,EAAe+D,IAA4BC,IAC/F,IAAIU,EACJ,OAA8F,OAAtFA,EAA0C,MAAlBV,OAAyB,EAASA,EAAeW,UAAoBD,EAAwB,CAAC,ICnB1HE,GAAwB5J,GAASA,EAAM6J,KAChCC,GAAuB9E,EAAe4E,IAAuBC,GAAQA,EAAKE,gBAC1EC,GAA0BhF,EAAe4E,IAAuBC,GAAQA,EAAKI,UAC7EC,GAA+BlF,EAAe4E,IAAuBC,GAAQA,EAAKM,wBAGlFC,GAAyBpF,EAAe4E,IAAuBC,GAAQA,EAAKQ,yBAC5EC,GAAsCtF,EAAe4E,IAAuBC,GAAQA,EAAKU,sBACzFC,GAAsBxF,EAAe4E,IAAuBC,GAAQA,EAAKY,OACzEC,GAA8B1F,EAAe4E,IAAuBC,GAAQA,EAAKc,eACjFC,GAA4B5F,EAAe4E,IAAuBC,GAAQA,EAAKgB,aAC/EC,GAAkC5E,EAAuB0D,IAAuBC,IAC3F,MAAMrH,EAAUpD,OAAOoD,QAAQqH,EAAKgB,YACpC,OAAuB,IAAnBrI,EAAQ7D,OACH,EAEF6D,EAAQuF,QAAOxX,IAAA,IAAE,CAAEwa,GAAUxa,EAAA,OAAKwa,EAAY,CAAC,IAAExG,KAAI9T,IAAA,IAAEua,GAAMva,EAAA,OAAK8B,OAAOyY,EAAM,IAAEC,MAAK,CAAC3L,EAAGC,IAAMA,EAAID,IAAG,GAAK,CAAC,IAEzG4L,GAAyBlG,EAAe4E,IAAuBC,GAAQA,EAAKsB,aAU5EC,GAAyBlF,EALSlB,EAAe4E,IAAuBC,GAAgB,MAARA,OAAe,EAASA,EAAKwB,uBAK5BA,IAC5F,IAAIC,EAAuBC,EAC3B,MAAMC,EAAuC,MAAvBH,OAA8B,EAASA,EAAoBI,WACjF,MAAO,CACLxb,OAAyB,MAAjBub,GAA2E,OAAjDF,EAAwBE,EAAcvb,aAAkB,EAASqb,EAAsB/G,KAAImH,IAC3H,IAAIC,EACJ,MAAO,CACLtG,GAAIqG,EAASrG,GACbuG,MAA6C,OAArCD,EAAkBD,EAASE,OAAiBD,EAAkB,CAAC,EACxE,IAEH/b,IAAsB,MAAjB4b,GAAqE,OAA3CD,EAAqBC,EAAc5b,UAAe,EAAS2b,EAAmBhH,KAAImH,IAC/G,IAAIG,EACJ,MAAO,CACLxG,GAAIqG,EAASrG,GACbuG,MAA8C,OAAtCC,EAAmBH,EAASE,OAAiBC,EAAmB,CAAC,EAC1E,IAEJ,IAMUC,GAA8B9G,EAAeoG,IAAwBK,IAChF,IAAIM,EAAiBC,EACrB,QAAuB,MAAdP,GAA4D,OAArCM,EAAkBN,EAAW7b,UAAe,EAASmc,EAAgBpN,SAAW,KAAqB,MAAd8M,GAAkE,OAA3CO,EAAqBP,EAAWxb,aAAkB,EAAS+b,EAAmBrN,SAAW,EAAE,ICjD9NsN,GAAwBA,KACnC,IAAIC,EACJ,MAAMtM,EAASiB,IACT1N,GAAYgZ,EAAAA,EAAAA,KACZjE,EAAiB7H,EAAgBT,EAAQkI,IACzCiC,EAAgB1J,EAAgBT,EAAQkK,IACxCsC,EAAyB/L,EAAgBT,EAAQ6J,IACjD4C,EAAkBhM,EAAgBT,EAAQkM,IAChD,IAAIQ,EAAO,OAIX,OAHgE,OAA3DJ,EAAwB/Y,EAAUoZ,uBAAiCL,EAAsBM,QAAUrZ,EAAUsZ,WAChHH,EAAO,YAEF,CACLA,OACA,gBAAiBpE,EAAevJ,OAChC,gBAAiByN,EAAyB,EAAIC,EAAkBtC,EAChE,wBAAyB5W,EAAUuZ,4BACpC,E,gBCrBH,MAAMzgB,GAAY,CAAC,WAAY,aAwBzB0gB,GAAwBvc,EAAAA,YAAiB,SAAkB9D,EAAOgE,GACtE,IAAI4b,EACJ,MAAM/Y,GAAYgZ,EAAAA,EAAAA,MACZ,SACFhb,EAAQ,UACRJ,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASiB,IACT+L,EAAevM,EAAgBT,EAAQmH,GACvC8F,EAAmBzc,EAAAA,OAAa,MAChC0c,GAAYC,EAAAA,EAAAA,GAAWF,EAAkBvc,GACzC0c,EAAgF,OAA3Dd,EAAwB/Y,EAAUoZ,uBAAiCL,EAAsBM,OAClH,KAAOP,GACHgB,EAA8C,oBAAtBD,EAAmCA,IAAsB,KACjFlgB,GAAaa,EAAAA,EAAAA,GAAS,CAAC,EAAGwF,EAAW,CACzC2T,QAAS8F,IAELla,EA7BkB5F,KACxB,MAAM,WACJ8L,EAAU,QACVkO,EAAO,QACPpU,GACE5F,EACE6E,EAAQ,CACZnF,KAAM,CAAC,OAAQoM,GAAc,aAAc,gBAAF3L,QAAkBC,EAAAA,EAAAA,GAAW4Z,IAAY,oBAEpF,OAAOnU,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAoB9CE,CAAkB9F,GAClC8S,EAAOzB,QAAQ+O,SAAS,SAAU,CAChCC,eAAgBN,IAIlB,MAAOO,EAAcC,GAAmBjd,EAAAA,UAAe,GAIvD,OAHAkd,EAAAA,EAAAA,IAAkB,KAChBD,GAAgB,EAAK,GACpB,IACED,GAGevZ,EAAAA,GAAAA,KAAK8E,GAAgBhL,EAAAA,EAAAA,GAAS,CAChD2C,IAAKwc,EACL/b,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW2B,EAAQlG,MACnCM,WAAYA,GACXmgB,EAAgBlb,EAAO,CACxBZ,SAAUA,KAPH,IASX,IC3DO,SAASoc,KACd,IAAIC,EAAsBC,EAC1B,MAAMta,GAAYgZ,EAAAA,EAAAA,KAClB,OAAoBvY,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CACxCe,SAAU,EAAc0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM+b,kBAAkB/f,EAAAA,EAAAA,GAAS,CAAC,EAAmD,OAA/C6f,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBE,mBAAoBva,EAAUxB,MAAMgc,UAAwB9Z,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMgc,SAAShgB,EAAAA,EAAAA,GAAS,CAAC,EAAoD,OAAhD8f,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBE,YAEnW,C,gBCHA,MASMC,IAAwBzhB,EAAAA,GAAAA,GAAO,MAAO,CAC1CC,KAAM,cACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOkD,MAHjBtD,EAI3B,KAAM,CACPM,SAAU,WACVohB,SAAU,EACVnhB,QAAS,OACTkB,cAAe,SACfoO,SAAU,aAEC8R,GAAiC1d,EAAAA,YAAiB,CAAC9D,EAAOgE,KACrE,IAAI4b,EACJ,MAAM/Y,GAAYgZ,EAAAA,EAAAA,KACZzZ,EAvBkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,SAEoB0L,EAAyBxF,EAAQ,EAgB9CE,CAAkBO,GAC5B6Z,EAAgF,OAA3Dd,EAAwB/Y,EAAUoZ,uBAAiCL,EAAsBM,OAClHP,GAAwB,KACpBgB,EAA8C,oBAAtBD,EAAmCA,IAAsB,KACvF,OAAoBnZ,EAAAA,GAAAA,KAAK+Z,IAAuBjgB,EAAAA,EAAAA,GAAS,CACvD2C,IAAKA,EACLS,UAAW2B,EAAQlG,KACnBM,WAAYqG,GACX8Z,EAAgB,CACjB9b,SAAU7E,EAAM6E,WACf,IClCC4c,GAA2B/N,GAASA,EAAMgO,QAMnCC,GAA2BjJ,EAAe+I,IAA0BG,GAAgBA,EAAaC,aAMjGC,GAA+BlI,EAAuB+H,GAA0B7D,IAE7F,CAACiE,EAAWC,IAAiBD,EAAU9J,KAAIc,IACzC,IAAIkJ,EACJ,MAAO,CACLlJ,KACAuG,MAAgD,OAAxC2C,EAAmBD,EAAajJ,IAAekJ,EAAmB,CAAC,EAC5E,MAOUC,GAAwBxJ,EAAe+I,IAA0BC,GAAWA,EAAQS,YAKpFC,GAA+BxI,EAAuBsI,IAAuBC,GACzEA,EAAU5F,QAAO,CAAC8F,EAAKC,EAAUC,KAC9CF,EAAIC,EAASjH,OAAS,CACpBmH,cAAeF,EAAS3D,KACxB8D,UAAWN,EAAU9P,OAAS,EAAIkQ,EAAQ,OAAIpc,GAEzCkc,IACN,CAAC,KCrCAK,GAA0BhP,GAASA,EAAM+H,OAMlCkH,GAA0BjK,EAAegK,IAAyBE,GAAeA,EAAYC,cAkB7FC,IAZgCpK,EAAeiK,IAAyBE,GAAeA,EAAYE,oBAYlErK,EAAegK,IAAyBE,GAAeA,EAAYI,sBAapGC,IAP4CvK,EAAegK,IAAyBE,GAAeA,EAAYM,gCAOxEtJ,GAnBPlG,GAASA,EAAMyP,mBAmB8CrB,IAA8B,CAACqB,EAAmBtB,IAAeA,EAAWpG,QAAO/N,IAAqC,IAA9ByV,EAAkBzV,EAAIqL,SAO7MqK,GAAmCxJ,EAAuBqJ,IAAsCI,GAA2BA,EAAwBpL,KAAIvK,GAAOA,EAAIqL,OAOlKuK,GAAuC1J,EAAuBkJ,GAAgChB,IAA8B,CAACkB,EAAoBnB,IAAeA,EAAWpG,QAAO/N,IAAsC,IAA/BsV,EAAmBtV,EAAIqL,QAOhNwK,GAAmC3J,EAAuB0J,IAAsCE,GAA4BA,EAAyBvL,KAAIvK,GAAOA,EAAIqL,OAMpK0K,GAA+C7J,EAAuBqJ,GAAsC/E,GAAqBM,IAAiC,CAACkF,EAAmBC,EAASC,IACtMA,EAAe,EACVF,EAEFA,EAAkBjI,QAAO/N,IAC9B,IAAImW,EACJ,OAA0F,KAA3C,OAAtCA,EAAkBF,EAAQjW,EAAIqL,UAAe,EAAS8K,EAAgBnF,MAAY,MAQlFoF,GAA+BpL,EAAeuK,IAAsCS,GAAqBA,EAAkBrR,SAM3H0R,GAAuCrL,EAAe+K,IAA8CO,GAA6BA,EAA0B3R,SAM3J4R,GAAgCrK,EAAuB+I,GAAyB1H,GAA0B,CAAC4H,EAAaqB,KACnI,IAAIC,EACJ,OAAmD,OAA3CA,EAAqBtB,EAAYuB,YAAiB,EAASD,EAAmB1I,QAAO4I,IAC3F,IAAIC,EAAuBC,EAC3B,IAAKF,EAAKhJ,MACR,OAAO,EAET,MAAMK,EAASwI,EAAaG,EAAKhJ,OACjC,GAAgB,MAAVK,IAAkBA,EAAO8I,iBAA6I,KAA9G,MAAV9I,GAAsE,OAAnD4I,EAAwB5I,EAAO8I,sBAA2B,EAASF,EAAsBjS,QAC9J,OAAO,EAET,MAAMoS,EAAiB/I,EAAO8I,gBAAgB5N,MAAK8N,GAAYA,EAAS7O,QAAUwO,EAAKK,WACvF,QAAKD,KAGGA,EAAeE,gBAAgC,MAAdN,EAAKxO,OAA4F,MAA5C,OAA7B0O,EAAcF,EAAKxO,YAAiB,EAAS0O,EAAYK,YAAkB,GAC5I,IAMSC,GAAsCjL,EAAuBqK,IAA+Ba,GACxFA,EAAcvI,QAAO,CAAC8F,EAAK0C,KACnC1C,EAAI0C,EAAW1J,OAGlBgH,EAAI0C,EAAW1J,OAAOhD,KAAK0M,GAF3B1C,EAAI0C,EAAW1J,OAAS,CAAC0J,GAIpB1C,IACN,CAAC,KC/HO2C,GAAyBtR,GAASA,EAAMuR,MACxCC,GAAwBxM,EAAesM,IAAwBG,GAAcA,EAAW1Y,OACxF2Y,GAAgC1M,EAAesM,IAAwBG,GAAcA,EAAWnY,eAMhGqY,IAH+C3M,EAAesM,IAAwBG,GAAcA,EAAWG,qBAGjE5M,EAAesM,IAAwBG,GAAcA,EAAWI,qBAC9GC,GAA4B9R,GAASA,EAAM+R,SAC3CC,GAA2BhN,EAAe8M,IAA2B9R,GAASA,EAAMjH,OACpFkZ,GAAmCjN,EAAe8M,IAA2B9R,GAASA,EAAM1G,eAM5F4Y,IAHkDlN,EAAe8M,IAA2B9R,GAASA,EAAM4R,qBAG1D5M,EAAe8M,IAA2B9R,GAASA,EAAM6R,qBClB1GM,GAAyBnS,GAASA,EAAMoS,WCiBrD,SAASC,GAAS/lB,GAChB,MAAM,yBACJgmB,EAAwB,mBACxBC,EAAkB,SAClBphB,GACE7E,EACEsT,EAASiB,IACT1N,GAAYgZ,EAAAA,EAAAA,KACZqG,EAAUpiB,EAAAA,OAAa,MACvB8X,EAAiB7H,EAAgBT,EAAQkI,IACzC2K,EAAqBpS,EAAgBT,EAAQuR,IAC7CuB,EAAmBrS,EAAgBT,EAAQ8O,IAC3CiE,EAAkBtS,EAAgBT,EAAQuI,IAC1CyK,EAA4BvS,EAAgBT,EAAQqS,IACpDY,EAAoBxS,EAAgBT,EAAQoS,IAC5Cc,EAAiCzS,EAAgBT,EAAQsS,IACzDa,EAAoB1S,EAAgBT,EAAQ8R,IAC5CsB,EAAyB3S,EAAgBT,EAAQ+R,IACjDsB,EAAgB5S,EAAgBT,EAAQoH,GACxCoF,EAAyB/L,EAAgBT,EAAQ6J,IACjDyJ,EAAkB7S,EAAgBT,EAAQuS,IAC1CgB,EAAmB9S,EAAgBT,EAAQgI,IAC3CwL,EAA8B/S,EAAgBT,EAAQ0J,IACtD+J,IAAoE,OAAnCP,GAAyE,OAA9BF,GAA4D,OAAtBC,IACxHvF,EAAAA,EAAAA,IAAkB,KAChB1N,EAAOzB,QAAQmV,mCACf,MAAMC,EAAmBf,EAAQrU,QACjC,GAA8B,qBAAnBqV,eACT,MAAO,OAET,IAAIC,EACJ,MAAMC,EAAW,IAAIF,gBAAe,KAElCC,EAAiBE,uBAAsB,KACrC/T,EAAOzB,QAAQmV,kCAAkC,GACjD,IAKJ,OAHIC,GACFG,EAASE,QAAQL,GAEZ,KACDE,GACFI,OAAOC,qBAAqBL,GAE1BF,GACFG,EAASK,UAAUR,EACrB,CACD,GACA,CAAC3T,IACJ,MAAMoU,EAAmB5jB,EAAAA,OAAa,MAChC6jB,EAAsB7jB,EAAAA,OAAa,MACnC8jB,EAAqB9jB,EAAAA,OAAa,MACxCwP,EAAOzB,QAAQ+O,SAAS,UAAW,CACjCiH,iCAAkCF,EAClCG,wBAAyBJ,EACzBE,qBACAG,eAAgB7B,IAElB,MAAM8B,IAAkB1U,EAAOzB,QAAQoW,oBACvC,OAAoB3gB,EAAAA,GAAAA,MAAMka,GAAmB,CAC3Cxd,IAAKkiB,EACLrhB,SAAU,EAAc0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMgL,eAAehP,EAAAA,EAAAA,GAAS,CACnE2C,IAAK2jB,EACLO,SAAUR,EACV9L,eAAgBA,EAChBuK,mBAAoBA,EACpBC,iBAAkBA,EAClBC,gBAAiBA,EACjBC,0BAA2BA,EAC3BE,+BAAgCA,EAChCC,kBAAmBA,EACnBC,uBAAwBA,EACxBC,cAAeA,EACf7G,uBAAwBA,EACxB8G,gBAAiBA,EACjBC,iBAAkBA,EAClBC,4BAA6BA,EAC7BC,6BAA8BA,GAC7Bd,IAAsB+B,IAA8BzgB,EAAAA,GAAAA,KAAKye,EAM1D,CACAhiB,IAAK4jB,IACH/iB,IAER,CCrGO,SAASsjB,KACd,IAAIjH,EACJ,MAAMra,GAAYgZ,EAAAA,EAAAA,KAClB,OAAIhZ,EAAUuhB,WACL,MAEW7gB,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMgjB,QAAQhnB,EAAAA,EAAAA,GAAS,CAAC,EAAmD,OAA/C6f,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBmH,QACrJ,CCVO,MAAMC,GAA8BxkB,EAAAA,mBAAoBqC,G,gBCIxD,SAASoiB,GAAmBtkB,GAIhC,IAJiC,cAClCuQ,EAAa,MACbxU,EAAK,SACL6E,GACDZ,EACC,MAAMqP,EAASxP,EAAAA,OAAa0Q,EAAc3C,QAAQ2W,gBAClD,OAAoBjhB,EAAAA,GAAAA,KAAKkhB,GAAAA,EAAqBC,SAAU,CACtD7S,MAAO7V,EACP6E,UAAuB0C,EAAAA,GAAAA,KAAK+M,EAAsBoU,SAAU,CAC1D7S,MAAOrB,EACP3P,UAAuB0C,EAAAA,GAAAA,KAAK+gB,GAAeI,SAAU,CACnD7S,MAAOvC,EACPzO,SAAUA,OAIlB,CClBO,SAAS8jB,GAAW9S,GACzB,MAAwB,oBAAVA,CAChB,CACO,SAAS+S,GAAS/S,GACvB,MAAwB,kBAAVA,GAAgC,OAAVA,CACtC,CAcO,SAASgT,GAAahT,GAC3B,OAAOA,EAAMiT,QAAQ,2BAA4B,OACnD,CAMO,MAAMC,GAAQA,CAAClT,EAAOmT,EAAK/jB,IAAQgkB,KAAKhkB,IAAI+jB,EAAKC,KAAKD,IAAI/jB,EAAK4Q,IA6B/D,SAASqT,GAAYlW,EAAGC,GAC7B,GAAID,IAAMC,EACR,OAAO,EAET,GAAID,GAAKC,GAAkB,kBAAND,GAA+B,kBAANC,EAAgB,CAC5D,GAAID,EAAEmW,cAAgBlW,EAAEkW,YACtB,OAAO,EAET,GAAI3W,MAAMC,QAAQO,GAAI,CACpB,MAAMX,EAASW,EAAEX,OACjB,GAAIA,IAAWY,EAAEZ,OACf,OAAO,EAET,IAAK,IAAImD,EAAI,EAAGA,EAAInD,EAAQmD,GAAK,EAC/B,IAAK0T,GAAYlW,EAAEwC,GAAIvC,EAAEuC,IACvB,OAAO,EAGX,OAAO,CACT,CACA,GAAIxC,aAAasH,KAAOrH,aAAaqH,IAAK,CACxC,GAAItH,EAAE/K,OAASgL,EAAEhL,KACf,OAAO,EAET,MAAMmhB,EAAW5W,MAAM6W,KAAKrW,EAAEkD,WAC9B,IAAK,IAAIV,EAAI,EAAGA,EAAI4T,EAAS/W,OAAQmD,GAAK,EACxC,IAAKvC,EAAEqW,IAAIF,EAAS5T,GAAG,IACrB,OAAO,EAGX,IAAK,IAAIA,EAAI,EAAGA,EAAI4T,EAAS/W,OAAQmD,GAAK,EAAG,CAC3C,MAAM+T,EAASH,EAAS5T,GACxB,IAAK0T,GAAYK,EAAO,GAAItW,EAAE2C,IAAI2T,EAAO,KACvC,OAAO,CAEX,CACA,OAAO,CACT,CACA,GAAIvW,aAAawW,KAAOvW,aAAauW,IAAK,CACxC,GAAIxW,EAAE/K,OAASgL,EAAEhL,KACf,OAAO,EAET,MAAMiO,EAAU1D,MAAM6W,KAAKrW,EAAEkD,WAC7B,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAQ7D,OAAQmD,GAAK,EACvC,IAAKvC,EAAEqW,IAAIpT,EAAQV,GAAG,IACpB,OAAO,EAGX,OAAO,CACT,CACA,GAAIiU,YAAYC,OAAO1W,IAAMyW,YAAYC,OAAOzW,GAAI,CAClD,MAAMZ,EAASW,EAAEX,OACjB,GAAIA,IAAWY,EAAEZ,OACf,OAAO,EAET,IAAK,IAAImD,EAAI,EAAGA,EAAInD,EAAQmD,GAAK,EAC/B,GAAIxC,EAAEwC,KAAOvC,EAAEuC,GACb,OAAO,EAGX,OAAO,CACT,CACA,GAAIxC,EAAEmW,cAAgBQ,OACpB,OAAO3W,EAAE4W,SAAW3W,EAAE2W,QAAU5W,EAAE6W,QAAU5W,EAAE4W,MAEhD,GAAI7W,EAAE8W,UAAYhX,OAAOiX,UAAUD,QACjC,OAAO9W,EAAE8W,YAAc7W,EAAE6W,UAE3B,GAAI9W,EAAE4R,WAAa9R,OAAOiX,UAAUnF,SAClC,OAAO5R,EAAE4R,aAAe3R,EAAE2R,WAE5B,MAAMoF,EAAOlX,OAAOkX,KAAKhX,GACnBX,EAAS2X,EAAK3X,OACpB,GAAIA,IAAWS,OAAOkX,KAAK/W,GAAGZ,OAC5B,OAAO,EAET,IAAK,IAAImD,EAAI,EAAGA,EAAInD,EAAQmD,GAAK,EAC/B,IAAK1C,OAAOiX,UAAUE,eAAeC,KAAKjX,EAAG+W,EAAKxU,IAChD,OAAO,EAGX,IAAK,IAAIA,EAAI,EAAGA,EAAInD,EAAQmD,GAAK,EAAG,CAClC,MAAMnK,EAAM2e,EAAKxU,GACjB,IAAK0T,GAAYlW,EAAE3H,GAAM4H,EAAE5H,IACzB,OAAO,CAEX,CACA,OAAO,CACT,CAIA,OAAO2H,IAAMA,GAAKC,IAAMA,CAC1B,CAcO,SAASkX,GAAoBC,EAAMpB,EAAK/jB,GAC7C,MAAMolB,GAZYrX,EAYQoX,EAXnB,KAEL,IAAIE,EAAItX,GAAK,WAGb,OAFAsX,EAAIrB,KAAKsB,KAAKD,EAAIA,IAAM,GAAQ,EAAJA,GAC5BA,GAAKA,EAAIrB,KAAKsB,KAAKD,EAAIA,IAAM,EAAO,GAAJA,KACvBA,EAAIA,IAAM,MAAQ,GAAK,UAAU,GAN9C,IAAoBtX,EAalB,MAAO,IAAMgW,GAAO/jB,EAAM+jB,GAAOqB,GACnC,CACO,SAASG,GAAUC,GACxB,MAA+B,oBAApBC,gBACFA,gBAAgBD,GAElBE,KAAKC,MAAMD,KAAKE,UAAUJ,GACnC,CC9KO,SAASK,GAAiBtW,EAAeuW,EAAY/e,GAC1D,MAAMgf,EAAgBlnB,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACdknB,EAAcnZ,SAAU,EACxB2C,EAAc3C,QAAQ+O,SAAS5U,EAAY+e,EAAW,GACrD,CAACvW,EAAexI,EAAY+e,IAC3BC,EAAcnZ,SAChB2C,EAAc3C,QAAQ+O,SAAS5U,EAAY+e,EAE/C,CCPA,MAAME,GFMC,WACL,IAIE,MAAM5f,EAAM,+CAGZ,OAFAkc,OAAO2D,aAAaC,QAAQ9f,EAAKA,GACjCkc,OAAO2D,aAAaE,WAAW/f,IACxB,CACT,CAAE,MAAOggB,GACP,OAAO,CACT,CACF,CElBmBC,IAAmE,MAAxC/D,OAAO2D,aAAaK,QAAQ,SACpEC,GAAOA,OACPC,GAAa,CACjBC,MAAOF,GACPG,KAAMH,GACN5Y,KAAM4Y,GACN/gB,MAAO+gB,IAEHI,GAAa,CAAC,QAAS,OAAQ,OAAQ,SAC7C,SAASC,GAAY/rB,EAAMgsB,GAA8B,IAApBC,EAAQ3Z,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAGO,QAC9C,MAAMqZ,EAAiBJ,GAAWK,QAAQH,GAC1C,IAAwB,IAApBE,EACF,MAAM,IAAIvX,MAAM,kBAAD9T,OAAmBmrB,EAAQ,qBAE5C,MAAMI,EAASN,GAAWrP,QAAO,CAAC4P,EAAWC,EAAQC,KAEjDF,EAAUC,GADRC,GAAOL,EACW,WAAa,QAAAhV,EAAA5E,UAAAC,OAATwH,EAAI,IAAArH,MAAAwE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ2C,EAAI3C,GAAA9E,UAAA8E,GAC1B,MAAOhF,KAAYzM,GAASoU,EAC5BkS,EAASK,GAAQ,QAADzrB,OAASb,EAAI,OAAAa,OAAMuR,MAAczM,EACnD,EAEoB+lB,GAEfW,IACN,CAAC,GACJ,OAAOD,CACT,CC7BO,MAAMI,GACX,aAAO3pB,CAAOkT,GACZ,OAAO,IAAIyW,GAAMzW,EACnB,CACAsT,WAAAA,CAAYoD,GACVC,KAAK3W,WAAQ,EACb2W,KAAKC,eAAY,EACjBD,KAAKpY,UAAYpC,IACfwa,KAAKC,UAAUC,IAAI1a,GACZ,KACLwa,KAAKC,UAAUE,OAAO3a,EAAG,GAG7Bwa,KAAKI,YAAc,IACVJ,KAAK3W,MAEd2W,KAAKK,OAAShX,IACZ2W,KAAK3W,MAAQA,EACb2W,KAAKC,UAAUrhB,SAAQ0hB,GAAKA,EAAEjX,IAAO,EAEvC2W,KAAK3W,MAAQ0W,EACbC,KAAKC,UAAY,IAAIjD,GACvB,ECpBK,MAAMuD,GACX5D,WAAAA,GAAiD,IAArC6D,EAAO5a,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAFa,IAG9Boa,KAAKS,SAAW,IAAI3S,IACpBkS,KAAKU,eAJyB,IAK9BV,KAAKU,eAAiBF,CACxB,CACApM,QAAAA,CAASuM,EAAQC,EAAaC,GACvBb,KAAKS,WACRT,KAAKS,SAAW,IAAI3S,KAEtB,MAAM0S,EAAUM,YAAW,KACE,oBAAhBF,GACTA,IAEFZ,KAAKS,SAASN,OAAOU,EAAgBE,aAAa,GACjDf,KAAKU,gBACRV,KAAKS,SAAS5S,IAAIgT,EAAgBE,aAAcP,EAClD,CACAQ,UAAAA,CAAWH,GACT,MAAML,EAAUR,KAAKS,SAASrX,IAAIyX,EAAgBE,cAC9CP,IACFR,KAAKS,SAASN,OAAOU,EAAgBE,cACrCE,aAAaT,GAEjB,CACAU,KAAAA,GACMlB,KAAKS,WACPT,KAAKS,SAAS7hB,SAAQ,CAACyK,EAAOxK,KAC5BmhB,KAAKgB,WAAW,CACdD,aAAcliB,GACd,IAEJmhB,KAAKS,cAAW9mB,EAEpB,ECpCK,MAAMwnB,GACXxE,WAAAA,GACEqD,KAAKoB,SAAW,IAAIC,sBAAqBT,IACZ,oBAAhBA,GACTA,GACF,GAEJ,CACAxM,QAAAA,CAASuM,EAAQC,EAAaC,GAC5Bb,KAAKoB,SAAShN,SAASuM,EAAQC,EAAaC,EAC9C,CACAG,UAAAA,CAAWH,GACTb,KAAKoB,SAASJ,WAAWH,EAC3B,CAGAK,KAAAA,GAAS,ECTX,IAAII,GAA6B,SAAUA,GAGzC,OAFAA,EAAwB,SAAI,WAC5BA,EAA2B,YAAI,cACxBA,CACT,CAJiC,CAI/BA,IAAiB,CAAC,GAEpB,MAAMC,IAmEN,MAAMC,GAAoB,CACxBJ,SAAU,MAUCK,GA1EN,SAAsCD,GAC3C,IAAIE,EAAuB,EAC3B,OAAO,SAAgC5a,EAAQ6a,EAAWC,EAASC,GAC9B,OAA/BL,EAAkBJ,WACpBI,EAAkBJ,SAA2C,qBAAzBC,qBAAuC,IAAIF,GAA6C,IAAIZ,IAElI,MAAOuB,GAAyBxqB,EAAAA,SAAe,IAAIiqB,IAC7CQ,EAAezqB,EAAAA,OAAa,MAC5B0qB,EAAa1qB,EAAAA,SACnB0qB,EAAW3c,QAAUuc,EACrB,MAAMK,EAAkB3qB,EAAAA,OAAa,MACrC,IAAKyqB,EAAa1c,SAAW2c,EAAW3c,QAAS,CAC/C,MAAM6c,EAAkBA,CAACtW,EAAQuW,EAAOC,KAEpC,IAAIC,EADDF,EAAMG,sBAEqC,OAA7CD,EAAsBL,EAAW3c,UAAoBgd,EAAoB3E,KAAKsE,EAAYpW,EAAQuW,EAAOC,GAC5G,EAEFL,EAAa1c,QAAUyB,EAAOzB,QAAQkd,eAAeZ,EAAWO,EAAiBL,GACjFH,GAAwB,EACxBO,EAAgB5c,QAAU,CACxB0b,aAAcW,GAEhBF,EAAkBJ,SAAShN,SAAS0N,GAEpC,KACE,IAAIU,EAC8C,OAAjDA,EAAwBT,EAAa1c,UAAoBmd,EAAsB9E,KAAKqE,GACrFA,EAAa1c,QAAU,KACvB4c,EAAgB5c,QAAU,IAAI,GAC7B4c,EAAgB5c,QACrB,MAAY2c,EAAW3c,SAAW0c,EAAa1c,UAC7C0c,EAAa1c,UACb0c,EAAa1c,QAAU,KACnB4c,EAAgB5c,UAClBmc,EAAkBJ,SAASJ,WAAWiB,EAAgB5c,SACtD4c,EAAgB5c,QAAU,OAG9B/N,EAAAA,WAAgB,KACd,IAAKyqB,EAAa1c,SAAW2c,EAAW3c,QAAS,CAC/C,MAAM6c,EAAkBA,CAACtW,EAAQuW,EAAOC,KAEpC,IAAIK,EADDN,EAAMG,sBAEsC,OAA9CG,EAAuBT,EAAW3c,UAAoBod,EAAqB/E,KAAKsE,EAAYpW,EAAQuW,EAAOC,GAC9G,EAEFL,EAAa1c,QAAUyB,EAAOzB,QAAQkd,eAAeZ,EAAWO,EAAiBL,EACnF,CAOA,OANII,EAAgB5c,SAAWmc,EAAkBJ,WAG/CI,EAAkBJ,SAASJ,WAAWiB,EAAgB5c,SACtD4c,EAAgB5c,QAAU,MAErB,KACL,IAAIqd,EAC+C,OAAlDA,EAAyBX,EAAa1c,UAAoBqd,EAAuBhF,KAAKqE,GACvFA,EAAa1c,QAAU,IAAI,CAC5B,GACA,CAACyB,EAAQ6a,EAAWE,GACzB,CACF,CAYsCc,CAA6BnB,IAC7DoB,GAA2B,CAC/BC,SAAS,GAEJ,SAASC,GAAwBhc,EAAQ6a,EAAWC,GAEzDH,GAAuB3a,EAAQ6a,EAAWC,EAASgB,GACrD,CC/FO,MAAMG,GACXpG,WAAAA,GACEqD,KAAKgD,aAAe,GACpBhD,KAAKiD,UAAW,EAChBjD,KAAKkD,OAAS,CAAC,CACjB,CACAC,EAAAA,CAAGxB,EAAWyB,GAAwB,IAAdvB,EAAOjc,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7Byd,EAAarD,KAAKkD,OAAOvB,GACxB0B,IACHA,EAAa,CACXC,aAAc,IAAIxV,IAClByV,QAAS,IAAIzV,KAEfkS,KAAKkD,OAAOvB,GAAa0B,GAEvBxB,EAAQgB,QACVQ,EAAWC,aAAazV,IAAIuV,GAAU,GAEtCC,EAAWE,QAAQ1V,IAAIuV,GAAU,EASrC,CACAI,cAAAA,CAAe7B,EAAWyB,GACpBpD,KAAKkD,OAAOvB,KACd3B,KAAKkD,OAAOvB,GAAW4B,QAAQpD,OAAOiD,GACtCpD,KAAKkD,OAAOvB,GAAW2B,aAAanD,OAAOiD,GAE/C,CACAK,kBAAAA,GACEzD,KAAKkD,OAAS,CAAC,CACjB,CACAQ,IAAAA,CAAK/B,GACH,MAAM0B,EAAarD,KAAKkD,OAAOvB,GAC/B,IAAK0B,EACH,OAEF,MAAMM,EAAwB3d,MAAM6W,KAAKwG,EAAWC,aAAa9F,QAC3DoG,EAAmB5d,MAAM6W,KAAKwG,EAAWE,QAAQ/F,QAAQ,QAAAhT,EAAA5E,UAAAC,OAN9CwH,EAAI,IAAArH,MAAAwE,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ2C,EAAI3C,EAAA,GAAA9E,UAAA8E,GAOrB,IAAK,IAAI1B,EAAI2a,EAAsB9d,OAAS,EAAGmD,GAAK,EAAGA,GAAK,EAAG,CAC7D,MAAMoa,EAAWO,EAAsB3a,GACnCqa,EAAWC,aAAaxG,IAAIsG,IAC9BA,EAASlZ,MAAM8V,KAAM3S,EAEzB,CACA,IAAK,IAAIrE,EAAI,EAAGA,EAAI4a,EAAiB/d,OAAQmD,GAAK,EAAG,CACnD,MAAMoa,EAAWQ,EAAiB5a,GAC9Bqa,EAAWE,QAAQzG,IAAIsG,IACzBA,EAASlZ,MAAM8V,KAAM3S,EAEzB,CACF,CACAwW,IAAAA,CAAKlC,EAAWyB,GAEd,MAAMU,EAAO9D,KACbA,KAAKmD,GAAGxB,GAAW,SAASoC,IAC1BD,EAAKN,eAAe7B,EAAWoC,GAAiB,QAAApZ,EAAA/E,UAAAC,OADHwH,EAAI,IAAArH,MAAA2E,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJwC,EAAIxC,GAAAjF,UAAAiF,GAEjDuY,EAASlZ,MAAM4Z,EAAMzW,EACvB,GACF,EC9DF,MAAM2W,GAAqBC,OAAO,mBAOlC,IAAIC,GAAW,EA0DR,SAASC,GAAyBC,EAAa5wB,GACpD,MAAM6wB,EAAe/sB,EAAAA,SACf0Q,EAAgB1Q,EAAAA,SACjB0Q,EAAc3C,UACjB2C,EAAc3C,QA7DlB,SAA0Bgf,GACxB,IAAIC,EACJ,MAAMC,EAAuE,OAAjDD,EAAwBD,EAAahf,cAAmB,EAASif,EAAsBN,IACnH,GAAIO,EACF,OAAOA,EAET,MAAMrd,EAAQ,CAAC,EACTsd,EAAa,CACjBtd,QACAS,MAAOmY,GAAM3pB,OAAO+Q,GACpB4F,WAAY,CACVP,GAAI2X,KA6BR,OA1BAA,IAAY,EACZM,EAAWxI,aAAe,IAAMqI,EAAahf,QAC7Cmf,EAAWpQ,SAAW,CAAC5U,EAAYilB,KACjCne,OAAOkX,KAAKiH,GAAS7lB,SAAQ8lB,IAC3B,MAAM9E,EAAS6E,EAAQC,GACjBC,EAAuBH,EAAWE,GAMxC,IAL8E,KAAjD,MAAxBC,OAA+B,EAASA,EAAqBC,QAChED,EAAqBE,OAASjF,EAE9B4E,EAAWE,GAAc9E,EAER,WAAfpgB,EAAyB,CAC3B,MAAMslB,EAAYT,EAAahf,QACzB0f,EAAsBD,EAAUJ,IACsC,KAAhD,MAAvBK,OAA8B,EAASA,EAAoBH,QAC9DG,EAAoBF,OAASjF,EAE7BkF,EAAUJ,GAAc9E,CAE5B,IACA,EAEJ4E,EAAWpQ,SAAS,UAAW,CAC7B4Q,OAAQ,CAAC,EACTC,aAAc,IAAIlC,KAEbyB,CACT,CAoB4BU,CAAiBb,IAEtCA,EAAahf,UAChBgf,EAAahf,QAtBjB,SAAyB2C,GAavB,MAZkB,CAChB,SAAId,GACF,OAAOc,EAAc3C,QAAQ6B,KAC/B,EACA,SAAIS,GACF,OAAOK,EAAc3C,QAAQsC,KAC/B,EACA,cAAImF,GACF,OAAO9E,EAAc3C,QAAQyH,UAC/B,EACA,CAACkX,IAAqBhc,EAAc3C,QAGxC,CAQ2B8f,CAAgBnd,IAEzC,MAAMod,EAAe9tB,EAAAA,aAAkB,WAAa,QAAAkT,EAAA5E,UAAAC,OAATwH,EAAI,IAAArH,MAAAwE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ2C,EAAI3C,GAAA9E,UAAA8E,GAC7C,MAAOpX,EAAMsY,EAAQuW,EAAQ,CAAC,GAAK9U,EAEnC,GADA8U,EAAMG,qBAAsB,EA3EPH,SACexoB,IAA/BwoB,EAAMkD,qBA2EPC,CAAiBnD,IAAUA,EAAMkD,uBACnC,OAEF,MAAMjD,EAAU5uB,EAAM+xB,YAAcjE,GAAckE,YAAc,CAC9DC,IAAKzd,EAAc3C,QAAQ2W,gBACzB,CAAC,EACLhU,EAAc3C,QAAQ4f,aAAavB,KAAKpwB,EAAMsY,EAAQuW,EAAOC,EAC/D,GAAG,CAACpa,EAAexU,EAAM+xB,YACnBhD,EAAiBjrB,EAAAA,aAAkB,CAAC6qB,EAAOP,EAASC,KACxD7Z,EAAc3C,QAAQ4f,aAAa9B,GAAGhB,EAAOP,EAASC,GACtD,MAAM4D,EAAMzd,EAAc3C,QAC1B,MAAO,KACLogB,EAAIR,aAAazB,eAAerB,EAAOP,EAAQ,CAChD,GACA,CAAC5Z,IAYJ,OAXAsW,GAAiBtW,EAAe,CAC9Bua,iBACA6C,gBACC,UACH9tB,EAAAA,oBAA0B8sB,GAAa,IAAMC,EAAahf,SAAS,CAACgf,IACpE/sB,EAAAA,WAAgB,KACd,MAAMmuB,EAAMzd,EAAc3C,QAC1B,MAAO,KACLogB,EAAIL,aAAa,UAAU,CAC5B,GACA,CAACpd,IACGA,CACT,C,gBC5EO,MC7BM0d,GAAwB,OACxBC,GAA6B,CACxCC,gBAAiB,UACjBC,UAAW,UACX3Q,QAAS,UACT4Q,0BAA2B,WCChBC,GAAwBA,CAAC3B,EAAa5wB,KACjD,MAAMwU,EAAgBmc,GAAyBC,EAAa5wB,GAS5D,MTUkCwyB,EAAClf,EAAQtT,KAU3C8qB,GAAiBxX,EAAQ,CACvBmf,UAVgB3uB,EAAAA,aAAkBhE,GAC9BmrB,GACKY,GAAY/rB,EAAM,QAASE,EAAMksB,QAErClsB,EAAM8rB,SAGJD,GAAY/rB,EAAME,EAAM8rB,SAASlH,WAAY5kB,EAAMksB,QAFjDT,IAGR,CAACzrB,EAAM8rB,SAAU9rB,EAAMksB,UAGvB,UAAU,ES9BbsG,CAAqBhe,EAAexU,GCPI0yB,EAACpf,EAAQtT,KACjD,MAAM2yB,EAAqB7uB,EAAAA,OAAa,CAAC,IAClC,CAAE8uB,GAAkB9uB,EAAAA,WACrB+uB,EAAuB/uB,EAAAA,aAAkBgvB,IAC7CH,EAAmB9gB,QAAQihB,EAAiBC,SAAWD,CAAgB,GACtE,IACG5e,EAAWpQ,EAAAA,aAAkB,CAAC4P,EAAOsf,KACzC,IAAI3e,EAMJ,GAJEA,EADEsU,GAAWjV,GACFA,EAAMJ,EAAOzB,QAAQ6B,OAErBA,EAETJ,EAAOzB,QAAQ6B,QAAUW,EAC3B,OAAO,EAET,IAAI4e,GAAiB,EAGrB,MAAMC,EAAyB,GAkB/B,GAjBApgB,OAAOkX,KAAK2I,EAAmB9gB,SAASzG,SAAQ2nB,IAC9C,MAAMI,EAAeR,EAAmB9gB,QAAQkhB,GAC1CK,EAAcD,EAAaE,cAAc/f,EAAOzB,QAAQ6B,MAAOJ,EAAOzB,QAAQyH,YAC9Ega,EAAcH,EAAaE,cAAchf,EAAUf,EAAOzB,QAAQyH,YACpEga,IAAgBF,IAGpBF,EAAuB7a,KAAK,CAC1B0a,QAASI,EAAaJ,QACtBQ,eAAgBD,IAAgBH,EAAaK,iBAIhBrtB,IAA3BgtB,EAAaK,WAA2BF,IAAgBH,EAAaK,YACvEP,GAAiB,GACnB,IAEEC,EAAuB7gB,OAAS,EAIlC,MAAM,IAAIoC,MAAM,0FAAD9T,OAA2FuyB,EAAuB,GAAGH,QAAO,8CAAApyB,OAA6CuyB,EAAuBjb,KAAIwb,GAAMA,EAAGV,UAASrgB,KAAK,MAAK,8BAUjP,GARKugB,IAEH3f,EAAOzB,QAAQ6B,MAAQW,EACnBf,EAAOzB,QAAQ+f,cACjBte,EAAOzB,QAAQ+f,aAAa,cAAevd,GAE7Cf,EAAOzB,QAAQsC,MAAM0Y,OAAOxY,IAEQ,IAAlC6e,EAAuB7gB,OAAc,CACvC,MAAM,QACJ0gB,EAAO,eACPQ,GACEL,EAAuB,GACrBC,EAAeR,EAAmB9gB,QAAQkhB,GAC1CzT,EAAQ6T,EAAaE,cAAchf,EAAUf,EAAOzB,QAAQyH,YAClE,GAAI6Z,EAAaO,cAAgBH,EAAgB,CAC/C,MAAM3E,EAAU5uB,EAAM+xB,YAAcjE,GAAckE,YAAc,CAC9DC,IAAK3e,EAAOzB,QACZmhB,UACE,CACFA,UAEFG,EAAaO,aAAapU,EAAOsP,EACnC,CACKqE,GACH3f,EAAOzB,QAAQ+f,aAAauB,EAAaQ,YAAarU,EAAO,CAC3D0T,UAGN,CACA,OAAQC,CAAc,GACrB,CAAC3f,EAAQtT,EAAM+xB,YACZ6B,EAAqB9vB,EAAAA,aAAkB,CAACuH,EAAKqI,EAAOsf,IACjD1f,EAAOzB,QAAQqC,UAAS2f,IACtBxyB,EAAAA,EAAAA,GAAS,CAAC,EAAGwyB,EAAe,CACjC,CAACxoB,GAAMqI,EAAMmgB,EAAcxoB,OAE5B2nB,IACF,CAAC1f,IACEwgB,EAAchwB,EAAAA,aAAkB,IAAM8uB,GAAe,IAAMtf,EAAOzB,QAAQ6B,SAAQ,CAACJ,IAKnFygB,EAAkB,CACtBH,qBACAf,wBAEF/H,GAAiBxX,EARM,CACrBY,WACA4f,eAMuC,UACzChJ,GAAiBxX,EAAQygB,EAAiB,UAAU,EDpFpDrB,CAA2Ble,EAAexU,GFoBPsT,KACnC,MAAM0gB,EAAkBlwB,EAAAA,OAAa,CAAC,GAChCmwB,EAAYnwB,EAAAA,QAAa,GACzBowB,EAAcpwB,EAAAA,aAAkBqwB,KAChCF,EAAUpiB,SAAYsiB,IAG1BF,EAAUpiB,SAAU,EACpBiB,OAAOshB,OAAOD,EAAWE,UAAUjpB,SAAQkpB,IACzCA,GAAU,IAEZL,EAAUpiB,SAAU,EAAK,GACxB,IACG0iB,EAAwBzwB,EAAAA,aAAkB,CAAC0wB,EAAOzb,EAAI0b,KACrDT,EAAgBniB,QAAQ2iB,KAC3BR,EAAgBniB,QAAQ2iB,GAAS,CAC/BE,WAAY,IAAIpa,IAChB+Z,SAAU,CAAC,IAGf,MAAMF,EAAaH,EAAgBniB,QAAQ2iB,GAM3C,OALqBL,EAAWO,WAAW9e,IAAImD,KAC1B0b,IACnBN,EAAWO,WAAWra,IAAItB,EAAI0b,GAC9BP,EAAYC,IAEP,KACLH,EAAgBniB,QAAQ2iB,GAAOE,WAAWra,IAAItB,EAAI,KAAK,CACxD,GACA,CAACmb,IACES,EAAsB7wB,EAAAA,aAAkB,CAAC0wB,EAAOzb,EAAI6b,KACnDZ,EAAgBniB,QAAQ2iB,KAC3BR,EAAgBniB,QAAQ2iB,GAAS,CAC/BE,WAAY,IAAIpa,IAChB+Z,SAAU,CAAC,IAGfL,EAAgBniB,QAAQ2iB,GAAOH,SAAStb,GAAM6b,EACvC,KACL,MAAMC,EAAYb,EAAgBniB,QAAQ2iB,GAAOH,SAC/CS,GAAgBpvB,EAAAA,EAAAA,GAA8BmvB,EAAW,CAAC9b,GAAId,IAAI8c,GAAAA,IACpEf,EAAgBniB,QAAQ2iB,GAAOH,SAAWS,CAAa,IAExD,IACGE,EAAmClxB,EAAAA,aAAkB0wB,IACzD,MAAML,EAAaH,EAAgBniB,QAAQ2iB,GAC3CN,EAAYC,EAAW,GACtB,CAACD,IAmBEe,EAAyB,CAC7BC,6BAnB0BpxB,EAAAA,aAAkB,WAAa,QAAAkT,EAAA5E,UAAAC,OAATwH,EAAI,IAAArH,MAAAwE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ2C,EAAI3C,GAAA9E,UAAA8E,GACpD,MAAOsd,EAAO3e,EAAOsf,GAAWtb,EAChC,OAAKma,EAAgBniB,QAAQ2iB,GAGPhiB,MAAM6W,KAAK2K,EAAgBniB,QAAQ2iB,GAAOE,WAAWN,UACtD7X,QAAO,CAACC,EAAK4Y,IAC3BA,EAGEA,EAAa5Y,EAAK2Y,GAFhB3Y,GAGR3G,GARMA,CASX,GAAG,KASHiV,GAAiBxX,EARe,CAC9BihB,wBACAI,sBACAK,oCAKgD,WAClDlK,GAAiBxX,EAAQ2hB,EAAwB,SAAS,EEzF1DI,CAAsB7gB,GDqCiBlB,KACvC,MAAMgiB,EAAsBxxB,EAAAA,OAAa,IAAIwW,KACvCib,EAAkBzxB,EAAAA,OAAa,CAAC,GAChC0xB,EAA4B1xB,EAAAA,aAAkB,CAAC2xB,EAAcC,EAAejB,KAChF,MAAMkB,EAAUA,KACd,MAAM1xB,EAAOsxB,EAAgB1jB,QAAQ6jB,GACnCE,GAAkBlwB,EAAAA,EAAAA,GAA8BzB,EAAM,CAACwxB,GAAcxd,IAAI8c,GAAAA,IAC3EQ,EAAgB1jB,QAAQ6jB,GAAiBE,CAAe,EAErDL,EAAgB1jB,QAAQ6jB,KAC3BH,EAAgB1jB,QAAQ6jB,GAAiB,CAAC,GAE5C,MAAMG,EAAqBN,EAAgB1jB,QAAQ6jB,GAC7CI,EAAoBD,EAAmBJ,GAE7C,OADAI,EAAmBJ,GAAgBhB,EAC9BqB,GAAqBA,IAAsBrB,GAG5CgB,IAAiBniB,EAAOzB,QAAQkkB,kBAAkB5D,GAA2BuD,KAC/EpiB,EAAOzB,QAAQ+f,aAAa,gCAAiC8D,GAExDC,GALEA,CAKK,GACb,CAACriB,IACE0iB,EAAyBlyB,EAAAA,aAAkB,CAAC4xB,EAAetd,KAC/D,MAAM6d,EAAiB3iB,EAAOzB,QAAQkkB,kBAAkB5D,GAA2BuD,IACnF,GAAsB,MAAlBO,EACF,MAAM,IAAIxhB,MAAM,uEAElB,MAAM0f,EAAaoB,EAAgB1jB,QAAQ6jB,GAC3C,IAAKvB,IAAeA,EAAW8B,GAC7B,MAAM,IAAIxhB,MAAM,qCAAD9T,OAAsC+0B,EAAa,mBAAA/0B,OAAkBs1B,EAAc,MAGpG,OAAOxB,EADWN,EAAW8B,IACZ7d,EAAO,GACvB,CAAC9E,IACEyiB,EAAoBjyB,EAAAA,aAAkBoyB,IAC1C,IAAIC,EACJ,MACMC,EADkB5jB,MAAM6W,KAAKiM,EAAoBzjB,QAAQqE,WAChBU,MAAKzS,IAAkB,IAAhB,CAAEkyB,GAASlyB,EAC/D,OAAIkyB,EAAS7B,QAAU0B,GAGhBG,EAASC,aAAa,IAE/B,OAAwG,OAAhGH,EAAkD,MAA1BC,OAAiC,EAASA,EAAuB,IAAcD,EAAwBjE,EAAqB,GAC3J,IACGqE,EAA0BzyB,EAAAA,aAAkB,CAACoyB,EAAeT,EAAca,KAC9EhB,EAAoBzjB,QAAQwI,IAAIob,EAAc,CAC5CjB,MAAO0B,EACPI,gBAEFhjB,EAAOzB,QAAQ+f,aAAa,6BAA6B,GACxD,CAACte,IAOJwX,GAAiBxX,EANa,CAC5BkiB,4BACAQ,yBACAD,oBACAQ,2BAE8C,UAAU,EC/F1DC,CAA0BhiB,GEdKiiB,EAACnjB,EAAQtT,KACxC,MAAM02B,EAAgB5yB,EAAAA,aAAkBuH,IACtC,GAA6B,MAAzBrL,EAAM22B,WAAWtrB,GACnB,MAAM,IAAIoJ,MAAM,+BAAD9T,OAAgC0K,EAAG,MAEpD,OAAOrL,EAAM22B,WAAWtrB,EAAI,GAC3B,CAACrL,EAAM22B,aACVrjB,EAAOzB,QAAQ+O,SAAS,SAAU,CAChC8V,iBACA,EFMFD,CAAkBjiB,EAAexU,GACjCwU,EAAc3C,QAAQ+O,SAAS,UAAW,CACxC/Z,UAAW7G,IAENwU,CAAa,EGnBToiB,GAAyBA,CAACC,EAAariB,EAAexU,KACjE,MAAM82B,EAAgBhzB,EAAAA,QAAa,GAC9BgzB,EAAcjlB,UACjB2C,EAAc3C,QAAQ6B,MAAQmjB,EAAYriB,EAAc3C,QAAQ6B,MAAO1T,EAAOwU,GAC9EsiB,EAAcjlB,SAAU,EAC1B,ECLK,SAASklB,GAAcviB,EAAe1U,GAC3C,MAAMosB,EAASpoB,EAAAA,OAAa,MAC5B,GAAIooB,EAAOra,QACT,OAAOqa,EAAOra,QAEhB,MAAMmlB,EAAYxiB,EAAc3C,QAAQ4gB,UAAU3yB,GAElD,OADAosB,EAAOra,QAAUmlB,EACVA,CACT,CCNO,MCHMC,GAAc5rB,GAAe,WAARA,EACrB6rB,GAAa7rB,GAAe,UAARA,EACpB8rB,GAAW9rB,GAAe,QAARA,EAElB+rB,GAAa/rB,GAAe,MAARA,EAa1B,SAASgsB,GAAe1I,GAC7B,OAA4B,IAArBA,EAAMtjB,IAAIgH,SAAiBsc,EAAM2I,UAAY3I,EAAM4I,OAC5D,CACO,MAOMC,GAAkBnsB,GArBAA,IAAe,SAARA,GAA0B,QAARA,EAqBlBosB,CAAgBpsB,IAtB3BA,IAAgC,IAAzBA,EAAI4gB,QAAQ,SAsBgByL,CAAYrsB,IApBhDA,IAA+B,IAAxBA,EAAI4gB,QAAQ,QAoBqC0L,CAAWtsB,IAAQ+rB,GAAW/rB,GCzBzG,SAASusB,KACd,MAAMtkB,EAASxP,EAAAA,WAAiBwkB,IAChC,QAAeniB,IAAXmN,EACF,MAAM,IAAImB,MAAM,CAAC,6CAA8C,oHAAqH,gFAAgF/B,KAAK,OAE3Q,OAAOY,CACT,CCNA,MAAM3T,GAAY,CAAC,QAAS,KAAM,QAAS,iBAAkB,MAAO,UAAW,SAAU,aAAc,WAAY,WAAY,WAAY,OA2J9Hk4B,GAzImC/zB,EAAAA,YAAiB,SAAkC9D,EAAOgE,GACxG,IAAIkd,EACJ,MAAM,MACF7F,EAAK,GACLtC,EACAlD,MAAOiiB,EAAS,QAChBC,EAAO,SACPC,EAAQ,SACRvS,GACEzlB,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KAIZzZ,EAzBkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,kBAEoB0L,EAAyBxF,EAAQ,EAkB9CE,CAHG,CACjBF,QAASS,EAAUT,UAGf6xB,EAAkBn0B,EAAAA,OAAa,MAC/Bo0B,EAAYp0B,EAAAA,OAAa,MACzB0c,GAAYC,EAAAA,EAAAA,GAAWwX,EAAiBj0B,GACxCm0B,EAAU7kB,EAAOzB,QAAQumB,eAAerf,EAAIsC,GAQlDvX,EAAAA,iBAAsB,KACH,IAAb2hB,GAAkB0S,IACpBA,EAAQ1S,UAAY,EACtB,GACC,CAAC0S,EAAS1S,IACb3hB,EAAAA,WAAgB,KACd,GAAIk0B,EAAU,CACZ,IAAIK,EACJ,MAAMC,EAA6D,OAApDD,EAAwBJ,EAAgBpmB,cAAmB,EAASwmB,EAAsBE,cAAc,SAC9G,MAATD,GAAiBA,EAAMrT,MAAM,CAC3BuT,eAAe,GAEnB,MAAWN,EAAUrmB,SAEnBqmB,EAAUrmB,QAAQ4mB,KAAK,CAAC,EAC1B,GACC,CAACT,IACJ,MAAMU,EAAgB50B,EAAAA,aAAkB6qB,IAClCyI,GAAWzI,EAAMtjB,MAGnBsjB,EAAMgK,iBACR,GACC,IACH,GAAqB,WAAjBZ,EAAQluB,MAAsC,cAAjBkuB,EAAQluB,KACvC,OAAO,KAET,MAAM+uB,EAAetlB,EAAOzB,QAAQgnB,gBAAgB9f,GAC9C9O,EAAQqJ,EAAOzB,QAAQ6kB,cAAcoB,EAAY,+BAAiC,8BACxF,OAAoBvwB,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMyzB,cAAcz3B,EAAAA,EAAAA,GAAS,CAC9D2C,IAAKwc,EACLiF,SAAUA,EACV7c,QAASkvB,EACTiB,SAxCmBpK,IACnB,MAAMvW,EAAS,CACbvC,MAAO8Y,EAAM0C,OAAOzoB,QACpBmQ,MAEFzF,EAAOzB,QAAQ+f,aAAa,6BAA8BxZ,EAAQuW,EAAM,EAoCxElqB,UAAW2B,EAAQlG,KACnByJ,WAAY,CACV,aAAcM,GAEhB+uB,UAAWN,EACX7vB,UAAW+vB,EACXK,eAAgBf,GACiC,OAA/ChX,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB4X,aAAcrzB,GACxG,ICxFayzB,GAAgCxlB,GAASA,EAAMylB,aAC/CC,GAAgC1gB,EAAewgB,IAA+BG,GAAaA,EAAUhnB,SACrGinB,GAA2B1f,EAAuBsf,GAA+Bpb,IAAwB,CAACyb,EAAcC,IAAe,IAAIlf,IAAIif,EAAathB,KAAIc,GAAM,CAACA,EAAIygB,EAAWzgB,SACtL0gB,GAA4B7f,EAAuBsf,IAA+BG,GAAaA,EAAU9c,QAAO,CAACrB,EAAQwe,KACpIxe,EAAOwe,GAASA,EACTxe,IACN,CAAC,KCJSye,GAAeA,CAACC,EAAUC,IACjCA,EAAW,GAAKD,EAAW,EACtB3Q,KAAK6Q,KAAKF,EAAWC,GAEvB,EAGIE,IADyB9nB,EAAa,CAAC,4EAA6E,6FAA8F,SAClL+nB,IAAgB,CAC3DC,KAAM,EACNJ,SAAUG,EAAe,EAAI,OAQlBE,GAAiCA,CAACL,EAAUM,KACvD,GAAIA,IAAkBrM,GAAcsM,UAAYP,EApB5B,IAqBlB,MAAM,IAAIplB,MAAM,CAAC,wEAAyE,2FAA2F/B,KAAK,MAC5L,ECfW2nB,GAAyB3mB,GAASA,EAAM4mB,WAMxCC,GAA8B7hB,EAAe2hB,IAAwBC,GAAcA,EAAWE,kBAM9FC,GAAmB/hB,EAAe6hB,IAA6BC,GAAmBA,EAAgBP,OAMlGS,GAAuBhiB,EAAe6hB,IAA6BC,GAAmBA,EAAgBX,WAYtGc,IANwBjiB,EAAe6hB,GAA6BxW,IAAsC,CAACyW,EAAiBI,IAA4BjB,GAAaiB,EAAyBJ,EAAgBX,YAM7KjgB,EAAuB2gB,GAA6Brc,GAAqBM,GAAiCyE,GAAsCQ,IAA8C,CAAC+W,EAAiB7W,EAASC,EAAcP,EAAyBwX,KAC5S,MAAMD,EAA0BC,EAAgCxoB,OAC1DyoB,EAAwB7R,KAAKD,IAAIwR,EAAgBX,SAAWW,EAAgBP,KAAMW,EAA0B,GAC5GG,EAAuB9R,KAAKD,IAAI8R,EAAwBN,EAAgBX,SAAW,EAAGe,EAA0B,GAGtH,IAA+B,IAA3BE,IAA0D,IAA1BC,EAClC,OAAO,KAIT,GAAInX,EAAe,EACjB,MAAO,CACLoX,cAAeF,EACfG,aAAcF,GAGlB,MAAMG,EAAmBL,EAAgCC,GACnDK,EAAiCJ,EAAuBD,EAAwB,EAChFE,EAAgB3X,EAAwBjN,WAAU1I,GAAOA,EAAIqL,KAAOmiB,EAAiBniB,KAC3F,IAAIkiB,EAAeD,EACfI,EAAmB,EACvB,KAAOH,EAAe5X,EAAwBhR,QAAU+oB,GAAoBD,GAAgC,CAC1G,IAAItX,EACJ,MACMnF,EAA+C,OAAtCmF,EAAkBF,EADrBN,EAAwB4X,GACSliB,UAAe,EAAS8K,EAAgBnF,WACvEvY,IAAVuY,EACFuc,GAAgB,IAEZG,EAAmBD,GAAkCzc,EAAQ,KAC/Duc,GAAgB,GAEJ,IAAVvc,IACF0c,GAAoB,GAG1B,CACA,MAAO,CACLJ,gBACAC,aAAcA,EAAe,EAC9B,KAOUI,GAAmDzhB,EAAuBqJ,GAAsC0X,IAAgC,CAACtX,EAAyBiY,IAChLA,EAGEjY,EAAwBkY,MAAMD,EAAgBN,cAAeM,EAAgBL,aAAe,GAF1F,KASEO,GAA+C5hB,EAAuBwJ,GAAkCuX,IAAgC,CAACc,EAAqBH,IACpKA,EAGEG,EAAoBF,MAAMD,EAAgBN,cAAeM,EAAgBL,aAAe,GAFtF,KCjGLt7B,GAAY,CAAC,QAAS,UAsBtB+7B,GAAkC53B,EAAAA,YAAiB,SAA4B9D,EAAOgE,GAC1F,IAAIkd,EACJ,MAAMzb,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,KAC5C,CAAEm0B,GAAehwB,EAAAA,UAAe,GACjCwP,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KAIZzZ,EAlBkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,kBAEoB0L,EAAyBxF,EAAQ,EAW9CE,CAHG,CACjBF,QAASS,EAAUT,UAGfu1B,EAAgB5nB,EAAgBT,EAAQqS,IACxC0T,EAAYtlB,EAAgBT,EAAQ4lB,IACpC0C,EAAgB7nB,EAAgBT,EAAQ8P,IACxCyY,EAAyB9nB,EAAgBT,EAAQkoB,IACjDM,EAAoBh4B,EAAAA,SAAc,IACG,oBAA9B+C,EAAUgyB,gBACZQ,EAEFA,EAAU5d,QAAO1C,KAEjBzF,EAAOzB,QAAQkqB,OAAOhjB,IAGpBlS,EAAUgyB,gBAAgBvlB,EAAOzB,QAAQmqB,aAAajjB,OAE9D,CAACzF,EAAQzM,EAAUgyB,gBAAiBQ,IAGjC4C,EAAsBn4B,EAAAA,SAAc,KACxB+C,EAAUyzB,YAAezzB,EAAUq1B,6BAA+CL,EAAhBD,GAIpErf,QAAO,CAACC,EAAKzD,KACzByD,EAAIzD,IAAM,EACHyD,IACN,CAAC,IACH,CAAC3V,EAAUyzB,WAAYzzB,EAAUq1B,6BAA8BL,EAAwBD,IAGpFO,EAAuBr4B,EAAAA,SAAc,IAAMg4B,EAAkBrgB,QAAO1C,GAAMkjB,EAAoBljB,KAAK1G,QAAQ,CAACypB,EAAmBG,IAC/HG,EAAkBD,EAAuB,GAAKA,EAAuBrpB,OAAOkX,KAAKiS,GAAqB5pB,OACtGylB,EAAYqE,EAAuB,EAOnC1W,EAA6B,OAAlBkW,GAA0BA,EAActgB,QAAUrb,EAAMqb,MAAQ,GAAK,EACtFvX,EAAAA,iBAAsB,KACpB,MAAMq0B,EAAU7kB,EAAOzB,QAAQwqB,uBAAuBr8B,EAAMqb,OAC3C,IAAboK,GAAkB0S,IACpBA,EAAQ1S,UAAY,EACtB,GACC,CAACA,EAAUnS,EAAQtT,EAAMqb,QAC5B,MAAMqd,EAAgB50B,EAAAA,aAAkB6qB,IACpB,MAAdA,EAAMtjB,KAERiI,EAAOzB,QAAQ+f,aAAa,gCAAiC,CAC3D/b,OAAQiiB,GAEZ,GACC,CAACxkB,EAAQwkB,IACNwE,EAAwBx4B,EAAAA,aAAkB,KAC9CgwB,GAAYyI,IAAMA,GAAE,GACnB,IACHz4B,EAAAA,WAAgB,IACPwP,EAAOzB,QAAQkd,eAAe,qBAAsBuN,IAC1D,CAAChpB,EAAQgpB,IACZ,MAAMryB,EAAQqJ,EAAOzB,QAAQ6kB,cAAcoB,EAAY,mCAAqC,kCAC5F,OAAoBvwB,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMyzB,cAAcz3B,EAAAA,EAAAA,GAAS,CAC9D2C,IAAKA,EACLgE,cAAeo0B,EACfxzB,QAASkvB,EACTiB,SAhCmBpK,IACnB,MAAMvW,EAAS,CACbvC,MAAO8Y,EAAM0C,OAAOzoB,SAEtB0K,EAAOzB,QAAQ+f,aAAa,gCAAiCxZ,EAAO,EA6BpE3T,UAAW2B,EAAQlG,KACnByJ,WAAY,CACV,aAAcM,GAEhBwb,SAAUA,EACVuT,UAAWN,GACsC,OAA/CxX,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB4X,aAAcrzB,GACxG,I,gBCzGA,MAAM9F,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,eAAgB,aAAc,oBAAqB,iBAmB/L68B,IAAwB38B,EAAAA,EAAAA,IAAO48B,GAAAA,GAAW,CAC9C38B,KAAM,cACNN,KAAM,gBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOy8B,eAHjB78B,EAI3BoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,OAAK5C,EAAAA,EAAAA,GAAS,CAAC,EAAGD,EAAMS,WAAWuN,MAAO,CACzC/M,QAAS,QACT,UAAW,CACTA,QAAS,SACTC,OAAQ,SAEV,IACIq6B,GAAiC74B,EAAAA,YAAiB,CAAC9D,EAAOgE,KAC9D,MAAM6C,GAAYgZ,EAAAA,EAAAA,MACZ,GACF9G,EAAE,MACFlD,EAAK,MACLwF,EAAK,OACLuhB,EAAM,SACN5E,EAAQ,WACR6E,EAAa,IAAG,kBAChBC,EAAiB,cACjBC,GACE/8B,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACToF,EAAWl5B,EAAAA,UACVm5B,EAAYC,GAAiBp5B,EAAAA,SAAe+R,GAC7CzP,EAtCkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,kBAEoB0L,EAAyBxF,EAAQ,EA+B9CE,CAAkBO,GAC5Bs2B,EAAer5B,EAAAA,aAAkBs5B,UACrC,MAAMC,EAAW1O,EAAM0C,OAAOxb,MAC1BknB,SACIA,EAAcpO,EAAO0O,GAE7B,MAAM3hB,EAASpI,EAAOzB,QAAQyrB,UAAUjiB,GACxC,IAAIkiB,EAAcF,EACd3hB,EAAO8hB,cACTD,EAAc7hB,EAAO8hB,YAAYH,EAAU/pB,EAAOzB,QAAQ4rB,cAAc1kB,EAAIsC,KAE9E6hB,EAAcK,GACdjqB,EAAOzB,QAAQ6rB,iBAAiB,CAC9B3kB,KACAsC,QACAxF,MAAO0nB,EACPV,aACAc,0BAA0B,GACzBhP,EAAM,GACR,CAACrb,EAAQupB,EAAYxhB,EAAOtC,EAAIgkB,IAC7Ba,EAAOtqB,EAAOzB,QAAQgsB,yBAAyB9kB,EAAIsC,GAWzD,OAVAvX,EAAAA,WAAgB,KACsC,+BAAvC,MAAR85B,OAAe,EAASA,EAAKE,eAChCZ,EAAcrnB,EAChB,GACC,CAAC+nB,EAAM/nB,KACVmL,EAAAA,EAAAA,IAAkB,KACZgX,GACFgF,EAASnrB,QAAQoT,OACnB,GACC,CAAC+S,KACgBzwB,EAAAA,GAAAA,KAAKi1B,IAAuBn7B,EAAAA,EAAAA,GAAS,CACvD2C,IAAKA,EACLg5B,SAAUA,EACVv4B,UAAW2B,EAAQlG,KACnBM,WAAYqG,EACZk3B,WAAW,EACXl0B,KAAsB,WAAhB+yB,EAAO/yB,KAAoB+yB,EAAO/yB,KAAO,OAC/CgM,MAAqB,MAAdonB,EAAqBA,EAAa,GACzClE,SAAUoE,EACVa,aAAclB,GAAiCv1B,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM44B,SAAU,CAC5Ej8B,SAAU,QACVf,MAAO,gBACJkF,GACJV,GAAO,IC5FNy4B,GAA6CjsB,EAAa,CAAC,sHAAuH,yFAA0F,SACrQksB,GAAoBA,CAAC7e,EAAO8e,IACnCA,GAAiC9e,EAAMjN,OAAS,GAClD6rB,KACO,CAAC5e,EAAM,KAETA,EAEI+e,GAA0BA,CAAClc,EAAWic,IAAkC1qB,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CAChHgO,SAASrgB,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMgO,QAAS,CACnCS,UAAWgc,GAAkBhc,EAAWic,OAkE/BE,GAA2BA,CAACC,EAAc1sB,KACrD,MAAM2sB,EAAaD,EAAatS,QAAQpa,GACxC,OAAKA,IAA2B,IAAhB2sB,GAAqBA,EAAa,IAAMD,EAAalsB,OAG9DksB,EAAaC,EAAa,GAFxBD,EAAa,EAEa,EAE/BE,GAAqBA,CAACC,EAAIC,IACpB,MAAND,GAAoB,MAANC,GACR,EAEA,MAANA,GAAoB,MAAND,EACT,EAEC,MAANA,GAAoB,MAANC,EACT,EAEF,KAEHC,GAAW,IAAIC,KAAKC,SAWbC,GAAuBA,CAACC,EAAQC,KAC3C,MAAMC,EAAaT,GAAmBO,EAAQC,GAC9C,OAAmB,OAAfC,EACKA,EAEFj5B,OAAO+4B,GAAU/4B,OAAOg5B,EAAO,EAE3BE,GAAqBA,CAACH,EAAQC,KACzC,MAAMC,EAAaT,GAAmBO,EAAQC,GAC9C,OAAmB,OAAfC,EACKA,EAELF,EAASC,EACJ,EAELD,EAASC,GACH,EAEH,CAAC,E,eC5HV,MAAMG,GACJjW,WAAAA,GACEqD,KAAK6S,UAAY,EACjB7S,KAAKxW,MAAQ,KACY,IAAnBwW,KAAK6S,YACP5R,aAAajB,KAAK6S,WAClB7S,KAAK6S,UAAY,EACnB,EAEF7S,KAAK8S,cAAgB,IACZ9S,KAAKxW,KAEhB,CACA,aAAOrT,GACL,OAAO,IAAIy8B,EACb,CACAG,KAAAA,CAAMC,EAAOxtB,GACXwa,KAAKxW,QACLwW,KAAK6S,UAAY/R,WAAWtb,EAAIwtB,EAClC,EAEK,SAASC,KACd,MAAMzS,EAAUtb,EAAW0tB,GAAQz8B,QAAQkP,QAE3C,OADAE,EAAWib,EAAQsS,eACZtS,CACT,CCzBA,MAAMrtB,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,WAAY,WAAY,iBAAkB,cAAe,cAOvI,SAAS+/B,GAAqB1/B,GAC5B,IAAIukB,EAAarD,EACjB,MAAM,KACFmD,EAAI,WACJsb,EAAU,KACV91B,EAAI,OACJyJ,EAAM,gBACNssB,EAAe,SACfna,EAAQ,SACR5c,EAAQ,YACRg3B,EAAW,WACXC,GACE9/B,EACJ+/B,GAASr6B,EAAAA,EAAAA,GAA8B1F,EAAOL,IAC1CqgC,EAAgBP,MACfQ,EAAkBC,GAAuBp8B,EAAAA,SAA6C,OAA7BygB,EAAcF,EAAKxO,OAAiB0O,EAAc,KAC3G4b,EAAUC,GAAiBt8B,EAAAA,UAAe,GAC3CiV,GAAKsnB,EAAAA,GAAAA,KACLx5B,GAAYgZ,EAAAA,EAAAA,KACZygB,EAAiBx8B,EAAAA,aAAkB6qB,IACvC,MAAM,MACJ9Y,GACE8Y,EAAM0C,OACV6O,EAAoBK,OAAO1qB,IAC3BuqB,GAAc,GACdJ,EAAcT,MAAM14B,EAAU25B,kBAAkB,KAC9C,MAAMC,GAAUp/B,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CACjCxO,QACA6qB,UAAW3nB,IAEb4mB,EAAWc,GACXL,GAAc,EAAM,GACpB,GACD,CAACrnB,EAAI4mB,EAAYtb,EAAMxd,EAAU25B,iBAAkBR,IAQtD,OAPAl8B,EAAAA,WAAgB,KAGZ,IAAI68B,EAFctc,EACJqc,YAAc3nB,GAE5BmnB,EAAoBK,OAAsC,OAA9BI,EAAetc,EAAKxO,OAAiB8qB,EAAe,IAClF,GACC,CAAC5nB,EAAIsL,KACY9c,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMu7B,eAAev/B,EAAAA,EAAAA,GAAS,CAC/D0X,GAAIA,EACJ9O,MAAOqJ,EAAOzB,QAAQ6kB,cAAc,yBACpCmK,YAAavtB,EAAOzB,QAAQ6kB,cAAc,+BAC1C7gB,MAAOoqB,EACPlH,SAAUuH,EACV5/B,QAAS,WACTmJ,KAAMA,GAAQ,OACdi2B,YAAYz+B,EAAAA,EAAAA,GAAS,CAAC,EAAG8+B,GAAYN,EAAc,CACjD7B,aAAcmC,GAAwB54B,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM44B,SAAU,CACnEj8B,SAAU,QACVf,MAAO,WACJ4+B,GACH,CAAC,EAAG,CACNh3B,YACCi3B,EAAY,CACbn2B,YAAYtI,EAAAA,EAAAA,GAAS,CACnBokB,YACe,MAAdqa,OAAqB,EAASA,EAAWn2B,cAE9Cm3B,gBAAiB,CACfC,QAAQ,GAEV/D,SAAU4C,GACTG,EAAwD,OAA/C7e,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB0f,eAClG,C,gBCzEA,MAAMjhC,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,QAAS,QAAS,aAAc,OAAQ,WAOtH,SAASqhC,GAA6BhhC,GACpC,MAAM,KACFqkB,EAAI,WACJsb,EAAU,KACV91B,EAAI,OACJyJ,EAAM,gBACNssB,EAAe,MACf3+B,EAAK,MACLwJ,EAAK,WACLw2B,EAAU,KACVh5B,EAAI,QACJvH,GACEV,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCuhC,EAAiB,CACrBjgC,QACAwJ,QACAw2B,aACAh5B,OACAvH,YAEKu/B,EAAkBC,GAAuBp8B,EAAAA,SAAeugB,EAAKxO,OAAS,IACvEkD,GAAKsnB,EAAAA,GAAAA,KACLx5B,GAAYgZ,EAAAA,EAAAA,KAClB/b,EAAAA,WAAgB,KACd,IAAIygB,EACJ,MAAM4c,EAA0C,OAA7B5c,EAAcF,EAAKxO,OAAiB0O,EAAc,GACrE2b,EAAoBiB,EAAUlpB,IAAIsoB,QAAQ,GACzC,CAAClc,EAAKxO,QACT,MAAMsnB,EAAer5B,EAAAA,aAAkB,CAAC6qB,EAAO9Y,KAC7CqqB,EAAoBrqB,EAAMoC,IAAIsoB,SAC9BZ,GAAWt+B,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CAC5BxO,MAAO,IAAIA,KACV,GACF,CAAC8pB,EAAYtb,IAChB,OAAoB9c,EAAAA,GAAAA,KAAK65B,GAAAA,GAAc//B,EAAAA,EAAAA,GAAS,CAC9CggC,UAAU,EACVC,UAAU,EACVjT,QAAS,GACTkT,cAAeA,CAAClT,EAASjW,KACvB,MAAM,WACJopB,GACEppB,EACJ,OAAqB,MAAdopB,GAAqC,KAAfA,EAAoB,GAAK,CAACA,EAAW,EAEpEzoB,GAAIA,EACJlD,MAAOoqB,EACPlH,SAAUoE,EACVsE,WAAYA,CAAC5rB,EAAO6rB,IAAgB7rB,EAAMoC,KAAI,CAAC0pB,EAAQpf,KAAuBhb,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMu8B,UAAUvgC,EAAAA,EAAAA,GAAS,CACpHX,QAAS,WACTuH,KAAM,QACNgC,MAAO03B,GACND,EAAY,CACbnf,cAEFsf,YAAazpB,IACX,IAAI8I,EACJ,OAAoB3Z,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMu7B,eAAev/B,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAQ,CAC3EnO,MAAOqJ,EAAOzB,QAAQ6kB,cAAc,yBACpCmK,YAAavtB,EAAOzB,QAAQ6kB,cAAc,+BAC1CoK,iBAAiBz/B,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAO0oB,gBAAiB,CACpDC,QAAQ,IAEV/D,SAAU4C,EACV/1B,KAAMA,GAAQ,QACbq3B,EAAgE,OAA/ChgB,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB0f,eAAe,GAExHn7B,GACL,CCzEO,MAAMq8B,GAAiB,CAC5BjwB,QAAS,MASJ,SAASkwB,GAAkB/vB,GAEhC,OADAA,EAAGgwB,YAAa,EACThwB,CACT,CACO,SAASiwB,GAAiBjwB,GAC/B,YAAc7L,IAAP6L,IAAsC,IAAlBA,EAAGgwB,UAChC,CAYO,SAASE,GAAuBC,GACrC,OAAOA,EAAIlqB,KAAImqB,IACb,OAAO/gC,EAAAA,EAAAA,GAAS,CAAC,EAAG+gC,EAAI,CACtBC,kBAdkCrwB,EAcQowB,EAAGE,mBAb1CP,IAAkB,CAAChd,EAAYrJ,KACpC,MAAM6mB,EAAWvwB,EAAG+S,EAAYrJ,GAChC,OAAK6mB,EAGEC,GACED,EAASC,EAAW3sB,MAAO2sB,EAAW90B,IAAKgO,EAAQomB,GAAejwB,SAHlE0wB,CAIR,KAOCD,mBAAoBP,GAAkBK,EAAGE,sBAfxC,IAAiCtwB,CAgBlC,GAEN,CACO,SAASywB,GAA6BzwB,GAC3C,OAAO+vB,IAAkB,CAAChd,EAAYrJ,EAAQpI,KAC5C,MAAMivB,EAAWvwB,EAAG+S,EAAYrJ,EAAQpI,GACxC,OAAKivB,EAGEC,GACED,EAASC,EAAW3sB,MAAO2sB,EAAW90B,IAAKgO,EAAQpI,GAHnDivB,CAIR,GAEL,CC7CA,IAAIG,GAAiC,SAAUA,GAG7C,OAFAA,EAAuB,IAAI,MAC3BA,EAAsB,GAAI,KACnBA,CACT,CAJqC,CAInCA,IAAqB,CAAC,GCRjB,MAAMC,GAA4BA,KAAA,CACvCve,MAAO,GACPwe,cAAeF,GAAkBG,IACjC9f,kBAAmB,GACnB+f,yBAA0BJ,GAAkBG,MCLvC,SAASE,GAAgBzvB,GAC9B,MAAO,CACLzB,QAASyB,EAAOzB,QAAQ2W,eAE5B,CCKA,MACMwa,IADgC,qBAAXzb,OAAyB0b,WAAa1b,QACpC2b,KAAK,aAClC,IAAIC,GACJ,IACEA,GAAUH,GAAS,OACrB,CAAE,MAAO5vB,IACP+vB,IAAU,CACZ,CAQO,MAAMC,GAAkBA,CAAC/e,EAAM/Q,KACpC,MAAM+vB,GAAYhiC,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,GAI/B,GAHoB,MAAhBgf,EAAUtqB,KACZsqB,EAAUtqB,GAAKkQ,KAAKqa,MAAsB,IAAhBra,KAAKoB,WAEP,MAAtBgZ,EAAU3e,SAAkB,CAG9B,MAAMhJ,EAAST,EAAyB3H,GAAQ+vB,EAAUhoB,OAC1DgoB,EAAU3e,SAAWhJ,GAAUA,EAAO8I,gBAAgB,GAAG3O,KAC3D,CACA,OAAOwtB,CAAS,EAEZE,GAAiDtxB,EAAa,CAAC,0HAA2H,yFAA0F,SACpRuxB,GAAkCvxB,EAAa,wFAAyF,SACxIwxB,GAAwCxxB,EAAa,+HAAgI,SAC9KyxB,GAAsBA,CAACpkB,EAAOqkB,EAAiCrwB,KAC1E,MAAMswB,EAAkBtkB,EAAM8E,MAAM/R,OAAS,EAC7C,IAAI+R,EACAwf,GAAmBD,GACrBJ,KACAnf,EAAQ,CAAC9E,EAAM8E,MAAM,KAErBA,EAAQ9E,EAAM8E,MAEhB,MAAMyf,EAAqBD,GAAmBxf,EAAM0f,MAAKzf,GAAmB,MAAXA,EAAKtL,KAChEgrB,EAAyB3f,EAAM0f,MAAKzf,GAAyB,MAAjBA,EAAKK,WAOvD,OANImf,GACFL,KAEEO,GACFN,KAEEM,GAA0BF,GACrBxiC,EAAAA,EAAAA,GAAS,CAAC,EAAGie,EAAO,CACzB8E,MAAOA,EAAMnM,KAAIoM,GAAQ+e,GAAgB/e,EAAM/Q,OAG/CgM,EAAM8E,QAAUA,GACX/iB,EAAAA,EAAAA,GAAS,CAAC,EAAGie,EAAO,CACzB8E,UAGG9E,CAAK,EAED0kB,GAA4BA,CAACnhB,EAAa8gB,EAAiCrwB,IAAW2wB,IAAkB5iC,EAAAA,EAAAA,GAAS,CAAC,EAAG4iC,EAAgB,CAChJphB,YAAa6gB,GAAoB7gB,EAAa8gB,EAAiCrwB,KAEpE4wB,GAAmBruB,GACT,kBAAVA,EACFA,EAAMsuB,UAAU,OAAOrb,QAAQ,mBAAoB,IAErDjT,EAEHuuB,GAA4BA,CAACrf,EAAYzR,KAC7C,IAAKyR,EAAW1J,QAAU0J,EAAWL,SACnC,OAAO,KAET,MAAMhJ,EAASpI,EAAOzB,QAAQyrB,UAAUvY,EAAW1J,OACnD,IAAKK,EACH,OAAO,KAET,IAAI6hB,EACJ,GAAI7hB,EAAO8hB,YAAa,CACtB,IAAI6G,EACJ,MAAMC,EAAS5oB,EAAO8hB,YACtBD,EAAc/qB,MAAMC,QAAQsS,EAAWlP,OAAmD,OAAzCwuB,EAAoBtf,EAAWlP,YAAiB,EAASwuB,EAAkBpsB,KAAIssB,GAAKD,EAAOC,KAAMD,EAAOvf,EAAWlP,MACtK,MACE0nB,EAAcxY,EAAWlP,MAE3B,MAAM,iBACJ2uB,GACElxB,EAAOzB,QAAQhL,UACf29B,IACFjH,EAAc2G,GAAiB3G,IAEjC,MAAMkH,GAAgBpjC,EAAAA,EAAAA,GAAS,CAAC,EAAG0jB,EAAY,CAC7ClP,MAAO0nB,IAEH/Y,EAAkB9I,EAAO8I,gBAC/B,GAAyB,MAAnBA,IAA2BA,EAAgBnS,OAC/C,MAAM,IAAIoC,MAAM,8CAAD9T,OAA+C+a,EAAOL,MAAK,OAE5E,MAAMoJ,EAAiBD,EAAgB5N,MAAK8N,GAAYA,EAAS7O,QAAU4uB,EAAc/f,WACzF,IAAKD,EACH,MAAM,IAAIhQ,MAAM,6CAAD9T,OAA8C+a,EAAOL,MAAK,0BAAA1a,OAAyB8jC,EAAc/f,SAAQ,OAE1H,MAAMggB,GAAyBzC,GAAiBxd,EAAe4d,kBACzDsC,GAAqB1C,GAAiBxd,EAAe6d,oBACrDzR,EAAekS,GAAgBzvB,GACrC,GAAImR,EAAe6d,sBAAwBoC,GAA0BC,GAAoB,CACvF,MAAMC,EAAmBngB,EAAe6d,mBAAmBmC,EAAe/oB,GAC1E,MAAgC,oBAArBkpB,EACF,KAEF,CACLC,IAAI,EACJxgB,KAAMogB,EACNzyB,GAAItE,IACF,IAAImI,EAAQvC,EAAOzB,QAAQizB,YAAYp3B,EAAKgO,GAI5C,OAHI8oB,IACF3uB,EAAQquB,GAAiBruB,IAEpB+uB,EAAiB/uB,EAAOnI,EAAKgO,EAAQmV,EAAa,EAG/D,CACA,MAAM+T,EAAmBngB,EAAe4d,iBAAiBoC,EAAe/oB,GACxE,MAAgC,oBAArBkpB,EACF,KAEF,CACLC,IAAI,EACJxgB,KAAMogB,EACNzyB,GAAI0nB,IACF,MAAMthB,EAAS9E,EAAOzB,QAAQ4rB,cAAc/D,EAAO+K,EAAcppB,OACjEymB,GAAejwB,QAAUgf,EACrB2T,IACFpsB,EAAOvC,MAAQquB,GAAiB9rB,EAAOvC,QAEzC,MAAMkvB,EAASH,EAAiBxsB,GAEhC,OADA0pB,GAAejwB,QAAU,KAClBkzB,CAAM,EAEhB,EAEH,IAAIC,GAAuB,EAQ3B,MAkJaC,GAA+BA,CAACpiB,EAAavP,EAAQ4xB,KAChE,MAAMC,EAnJkCC,EAACviB,EAAavP,EAAQ4xB,KAC9D,MAAM,MACJ9gB,GACEvB,EACEwR,EAAWjQ,EAAMnM,KAAIoM,GAAQ+f,GAA0B/f,EAAM/Q,KAASmI,QAAO6Y,KAAcA,IACjG,GAAwB,IAApBD,EAAShiB,OACX,OAAO,KAET,IAAK8wB,IAAW+B,EAEd,MAAO,CAACx3B,EAAK23B,KACX,MAAMC,EAAkB,CAAC,EACzB,IAAK,IAAI9vB,EAAI,EAAGA,EAAI6e,EAAShiB,OAAQmD,GAAK,EAAG,CAC3C,MAAMof,EAAUP,EAAS7e,GACpB6vB,IAAqBA,EAAkBzQ,EAAQvQ,KAAKhJ,SACvDiqB,EAAgB1Q,EAAQvQ,KAAKtL,IAAM6b,EAAQiQ,GAAKjQ,EAAQ5iB,GAAGtE,GAAOknB,EAAQ5iB,GAAGsB,EAAOzB,QAAQ0zB,SAAS73B,IAEzG,CACA,OAAO43B,CAAe,EAM1B,MAAME,EAAqB,+EAAH7kC,OAClB0zB,EAASpc,KAAI,CAAC2c,EAASpf,IAAM,oBAAL7U,OAAyB6U,EAAC,+CAAA7U,OAA8CgqB,KAAKE,UAAU+J,EAAQvQ,KAAKhJ,OAAM,QAAM3I,KAAK,MAAK,wCAAA/R,OAGlJ0zB,EAASpc,KAAI,CAAC2c,EAASpf,IAAM,GAAL7U,OAAQgqB,KAAKE,UAAU0V,OAAO3L,EAAQvQ,KAAKtL,KAAI,6BAAApY,OACvD6U,EAAC,yCAAA7U,OAEXi0B,EAAQiQ,GAAK,YAAHlkC,OAAe6U,EAAC,yBAAA7U,OAA0B6U,EAAC,uBAAqB,eAC/E9C,KAAK,MAAK,wCAIX+yB,EAAiBzC,GAASwC,EAAmBE,WAAW,KAAMnF,OAAOyE,MAK3E,OADAA,IAAwB,EAHLjgB,CAACrX,EAAKi4B,IAChBF,EAAenyB,EAAOzB,QAAQ0zB,SAAUlR,EAAU3mB,EAAKi4B,EAG/C,EA0GgBP,CAAkCviB,EAAavP,EAAQ4xB,GAClFU,EAlGkCC,EAAChjB,EAAavP,KACtD,IAAIwyB,EAAuBC,EAAwBC,EACnD,MAAMjjB,EAAoK,OAA/I+iB,EAAoF,OAA3DC,EAAyBljB,EAAYE,wBAA6B,EAASgjB,EAAuBtqB,OAAOwqB,UAAoBH,EAAwB,GACzM,GAAiC,IAA7B/iB,EAAkB1Q,OACpB,OAAO,KAET,MACM6zB,EAD4G,OAAzEF,EAAyBnjB,EAAYsjB,kCAA2CH,EAClErqB,GAAgCrI,GAAUwH,EAAyBxH,GACpH8yB,EAAmB,IACnB,iBACJ5B,GACElxB,EAAOzB,QAAQhL,UACbgqB,EAAekS,GAAgBzvB,GA+BrC,OA9BA4yB,EAAa96B,SAAQiQ,IACnB,MAAMK,EAASpI,EAAOzB,QAAQyrB,UAAUjiB,GAClCgrB,EAAkC,MAAV3qB,OAAiB,EAASA,EAAO2qB,sBACzDC,EAAoC,MAAV5qB,OAAiB,EAASA,EAAO4qB,wBAC3D5B,GAAyBzC,GAAiBoE,GAC1C1B,GAAqB1C,GAAiBqE,IACxCA,GAA6B5B,IAA0BC,EAWhD0B,GACTD,EAAiB/tB,KAAK,CACpBqD,SACA2Y,SAAUtR,EAAkB9K,KAAIsuB,IAC9B,MAAM1wB,EAAQ2uB,EAAmBN,GAAiBqC,GAAoBA,EACtE,MAAO,CACL1B,IAAI,EACJ7yB,GAAIq0B,EAAsBxwB,EAAO6F,EAAQmV,GAC1C,MAlBLuV,EAAiB/tB,KAAK,CACpBqD,SACA2Y,SAAUtR,EAAkB9K,KAAIsuB,IAC9B,MAAM1wB,EAAQ2uB,EAAmBN,GAAiBqC,GAAoBA,EACtE,MAAO,CACL1B,IAAI,EACJ7yB,GAAIs0B,EAAwBzwB,EAAO6F,EAAQmV,GAC5C,KAcP,IAEK,SAAkCnjB,EAAK23B,GAC5C,MAAMN,EAAS,CAAC,EACVyB,EAAiB,CAAC,EAGxBC,EAAO,IAAK,IAAIC,EAAI,EAAGA,EAAI3jB,EAAkB1Q,OAAQq0B,GAAK,EAAG,CAC3D,MAAMC,EAAc5jB,EAAkB2jB,GACtC,IAAK,IAAIlxB,EAAI,EAAGA,EAAI4wB,EAAiB/zB,OAAQmD,GAAK,EAAG,CACnD,MAAM,OACJkG,EAAM,SACN2Y,GACE+R,EAAiB5wB,IACf,MACJ6F,GACEK,EACJ,GAAI2pB,IAAsBA,EAAkBhqB,GAC1C,SAEF,MAAMuZ,EAAUP,EAASqS,GACzB,IAAI7wB,EAAQvC,EAAOzB,QAAQizB,YAAYp3B,EAAKgO,GAC5C,GAAmB,OAAfkZ,EAAQ5iB,GAGZ,GAAI4iB,EAAQiQ,IAKV,GAJIL,IACF3uB,EAAQquB,GAAiBruB,IAER+e,EAAQ5iB,GAAG6D,EAAOnI,EAAKgO,EAAQmV,GAClC,CACdkU,EAAO4B,IAAe,EACtB,SAASF,CACX,MACK,CACL,IAAIG,EACJ,MAAMpE,EAAgE,OAAlDoE,EAAwBJ,EAAenrB,IAAkBurB,EAAwBtzB,EAAOzB,QAAQ4rB,cAAcnqB,EAAOzB,QAAQ0zB,SAAS73B,GAAM2N,GAMhK,GALImpB,IACFhC,EAAW3sB,MAAQquB,GAAiB1B,EAAW3sB,QAEjD2wB,EAAenrB,GAASmnB,EACL5N,EAAQ5iB,GAAGwwB,GACd,CACduC,EAAO4B,IAAe,EACtB,SAASF,CACX,CACF,CACF,CACA1B,EAAO4B,IAAe,CACxB,CAGA,OAAO5B,CACT,CAAC,EAIgCc,CAAkChjB,EAAavP,GAChF,OAAO,SAA8B5F,EAAK23B,EAAmBN,GAC3D,IAAI8B,EAAuBC,EAC3B/B,EAAOgC,mBAA+I,OAAzHF,EAAoD,MAA5B1B,OAAmC,EAASA,EAAyBz3B,EAAK23B,IAA8BwB,EAAwB,KACrL9B,EAAOiC,yBAAqJ,OAAzHF,EAAoD,MAA5BlB,OAAmC,EAASA,EAAyBl4B,EAAK23B,IAA8ByB,EAAwB,IAC7L,CAAC,EAEGG,GAAYlC,GAAoB,MAAVA,EAOfmC,GAAkBA,CAACC,EAAsBC,EAAuBvkB,EAAavP,EAAQoC,KAChG,MAAM2xB,EAPiBC,EAAC5xB,EAAOpC,EAAQ8Q,KAClC1O,EAAM2xB,qBACT3xB,EAAM2xB,mBAAqBjjB,EAAM3I,QAAO4I,GAAoD,OAA5C+f,GAA0B/f,EAAM/Q,MAE3EoC,EAAM2xB,oBAGcC,CAAiB5xB,EAAOpC,EAAQuP,EAAYuB,OACjEmjB,EAA2BJ,EAAqB1rB,OAAOwrB,IACvDO,EAA4BJ,EAAsB3rB,OAAOwrB,IAG/D,GAAIM,EAAyBl1B,OAAS,EAAG,CACvC,IAAIo1B,EAEJ,MAAMC,EAAsBrjB,GACnBkjB,EAAyBzD,MAAK6D,GAAoBA,EAAiBtjB,EAAKtL,MAGjF,IAD6E,OAAtD0uB,EAAwB5kB,EAAY+f,eAAyB6E,EAAwB9E,KAA4BC,iBAClHF,GAAkBG,IAAK,CAE3C,IADyBwE,EAAmBvvB,MAAM4vB,GAEhD,OAAO,CAEX,KAAO,CAEL,IAD0BL,EAAmBvD,KAAK4D,GAEhD,OAAO,CAEX,CACF,CAGA,GAAIF,EAA0Bn1B,OAAS,GAAsC,MAAjCwQ,EAAYE,kBAA2B,CACjF,IAAI6kB,EAEJ,MAAMC,EAA4BhyB,GACzB2xB,EAA0B1D,MAAKgE,GAA0BA,EAAuBjyB,KAGzF,IADoG,OAAlE+xB,EAAyB/kB,EAAYigB,0BAAoC8E,EAAyBjF,KAA4BG,4BAC/HJ,GAAkBG,IAAK,CAEtD,IADmChgB,EAAYE,kBAAkBjL,MAAM+vB,GAErE,OAAO,CAEX,KAAO,CAEL,IADoChlB,EAAYE,kBAAkB+gB,KAAK+D,GAErE,OAAO,CAEX,CACF,CACA,OAAO,CAAI,ECzWAE,GAA6BhG,IAAkBlsB,IAC1D,IAAKA,EACH,OAAO,KAET,MAAMmyB,EAAc,IAAIre,OAAOd,GAAahT,GAAQ,KACpD,MAAO,CAACzC,EAAG1F,EAAKgO,EAAQpI,KACtB,IAAI20B,EAAc30B,EAAOzB,QAAQq2B,qBAAqBx6B,EAAKgO,GAI3D,OAHIpI,EAAOzB,QAAQ2yB,mBACjByD,EAAc/D,GAAiB+D,IAEX,MAAfA,GAAsBD,EAAYG,KAAKF,EAAYrjB,WAAmB,CAC9E,ICRUwjB,GAAsB,CACjCn8B,MAAO,IACP/J,SAAU,GACVmmC,SAAUC,IACVC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXpsB,YAAY,EACZqsB,WAAW,EACXC,UAAU,EAEVC,YAAY,EACZC,UAAU,EACVC,eV6E0CC,CAAC/J,EAAQC,KACnD,MAAMC,EAAaT,GAAmBO,EAAQC,GAC9C,OAAmB,OAAfC,EACKA,EAEa,kBAAXF,EACFJ,GAASoK,QAAQhK,EAAOpa,WAAYqa,EAAOra,YAE7Coa,EAASC,CAAM,EUpFtBp1B,KAAM,SACNo/B,MAAO,OACPzkB,gBDNoC,eAAC0kB,EAAW92B,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,IAAAA,UAAA,GAAQ,OAAK8vB,GAAuB,CAAC,CACrFrsB,MAAO,WACPysB,mBAAoBvd,IAClB,IAAKA,EAAWlP,MACd,OAAO,KAET,MAAMszB,EAAkBD,EAAcnkB,EAAWlP,MAAQkP,EAAWlP,MAAMuzB,OACpEpB,EAAc,IAAIre,OAAOd,GAAasgB,GAAkB,KAC9D,OAAOtzB,GACW,MAATA,GAAgBmyB,EAAYG,KAAK5H,OAAO1qB,GAChD,EAEH8O,eAAgB+a,IACf,CACD7pB,MAAO,SACPysB,mBAAoBvd,IAClB,IAAKA,EAAWlP,MACd,OAAO,KAET,MAAMszB,EAAkBD,EAAcnkB,EAAWlP,MAAQkP,EAAWlP,MAAMuzB,OACpExK,EAAW,IAAIC,KAAKC,cAAS34B,EAAW,CAC5CkjC,YAAa,OACbC,MAAO,WAET,OAAOzzB,GACW,MAATA,GAAwE,IAAxD+oB,EAASoK,QAAQG,EAAiBtzB,EAAM+O,WAChE,EAEHD,eAAgB+a,IACf,CACD7pB,MAAO,aACPysB,mBAAoBvd,IAClB,IAAKA,EAAWlP,MACd,OAAO,KAET,MAAMszB,EAAkBD,EAAcnkB,EAAWlP,MAAQkP,EAAWlP,MAAMuzB,OACpEpB,EAAc,IAAIre,OAAO,IAADhpB,OAAKkoB,GAAasgB,GAAgB,OAAO,KACvE,OAAOtzB,GACW,MAATA,GAAgBmyB,EAAYG,KAAKtyB,EAAM+O,WAC/C,EAEHD,eAAgB+a,IACf,CACD7pB,MAAO,WACPysB,mBAAoBvd,IAClB,IAAKA,EAAWlP,MACd,OAAO,KAET,MAAMszB,EAAkBD,EAAcnkB,EAAWlP,MAAQkP,EAAWlP,MAAMuzB,OACpEpB,EAAc,IAAIre,OAAO,KAADhpB,OAAMkoB,GAAasgB,GAAgB,KAAK,KACtE,OAAOtzB,GACW,MAATA,GAAgBmyB,EAAYG,KAAKtyB,EAAM+O,WAC/C,EAEHD,eAAgB+a,IACf,CACD7pB,MAAO,UACPysB,mBAAoBA,IACXzsB,GACY,KAAVA,GAAyB,MAATA,EAG3B0zB,qBAAqB,GACpB,CACD1zB,MAAO,aACPysB,mBAAoBA,IACXzsB,GACY,KAAVA,GAAyB,MAATA,EAG3B0zB,qBAAqB,GACpB,CACD1zB,MAAO,UACPysB,mBAAoBvd,IAClB,IAAKvS,MAAMC,QAAQsS,EAAWlP,QAAsC,IAA5BkP,EAAWlP,MAAMxD,OACvD,OAAO,KAET,MAAM82B,EAAkBD,EAAcnkB,EAAWlP,MAAQkP,EAAWlP,MAAMoC,KAAIuxB,GAAOA,EAAIJ,SACnFxK,EAAW,IAAIC,KAAKC,cAAS34B,EAAW,CAC5CkjC,YAAa,OACbC,MAAO,WAET,OAAOzzB,GAAkB,MAATA,GAAgBszB,EAAgBrF,MAAK6C,GACc,IAA1D/H,EAASoK,QAAQrC,EAAa9wB,EAAM+O,YAAc,KACjD,EAEZD,eAAgBqc,KACf,CCjFgByI,GACjBC,eX0IiCtxB,IAAuB7Q,EAAAA,GAAAA,KAAKo1B,IAAmBt7B,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,IWzI7FiuB,sBAAuB5D,GAA6BsF,IACpDzB,wBAAyByB,ICxBd4B,GAAqB,iCACrBC,GAAwBnZ,OAAO,wBAyBrC,MAAMoZ,GAAuBA,CAACC,EAAUvE,EAAUwE,KACvD,MAAMhxB,EAAKwsB,EAAWA,EAASuE,GAAYA,EAAS/wB,GAEpD,OARK,SAA+BA,EAAIrL,GACxC,GAAU,MAANqL,EACF,MAAM,IAAItE,MAAM,CAAC,iFAAkF,sFAFtCrC,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,kDAE8IuY,KAAKE,UAAUnd,IAAMgF,KAAK,MAE5O,CAGEs3B,CAAsBjxB,EAAI+wB,EAAUC,GAC7BhxB,CAAE,EAEEkxB,GAA0BhmC,IAKjC,IALkC,KACtCsZ,EAAI,SACJgoB,EAAQ,QACR5nB,EAAO,SACPic,GACD31B,EACC,MAAMimC,EAAU,CACdrgC,KAAM,OACN0T,KAAM,IAEFQ,EAAyB,CAAC,EAC1BE,EAAsB,CAAC,EAC7B,IAAK,IAAIzI,EAAI,EAAGA,EAAI+H,EAAKlL,OAAQmD,GAAK,EAAG,CACvC,MAAM8J,EAAQ/B,EAAK/H,GACbuD,EAAK8wB,GAAqBvqB,EAAOimB,GACvCxnB,EAAuBhF,GAAMuG,EAC7BrB,EAAoBlF,GAAMA,EAC1BmxB,EAAQ3sB,KAAKlF,KAAKU,EACpB,CACA,MAAO,CACLoxB,yBAA0B5sB,EAC1B6sB,gCAAiCzsB,EACjC0sB,iCAAkCzQ,EAClCsQ,UACAjsB,sBACAF,yBACD,EAEUusB,GAAsBnmC,IAG7B,IAH8B,KAClCga,EAAI,aACJosB,EAAe,GAChBpmC,EACC,MAAMqmC,EAAgBrsB,EAAKwrB,IAC3B,OAAO1gB,KAAKhkB,IAAIslC,EAAcC,EAAc3lC,SAASwN,QAAoC,MAA1Bm4B,EAAcC,SAAmB,EAAI,GAAG,EAE5FC,GAAwBvpC,IAM/B,IANgC,OACpCmS,EAAM,aACNi3B,EAAe,EAAC,YAChBI,EAAW,aACXC,EAAY,mBACZC,GACD1pC,EACC,MAAMuU,EAAQpC,EAAOzB,QAAQ2f,OAAOjU,MAIlCY,KAAM2sB,EACNvsB,WAAYwsB,EACZlsB,WAAYmsB,EAAqB,aACjC3sB,GACE/K,EAAOzB,QAAQmkB,uBAAuB,kBAAmB,CAC3D4U,eACAC,qBACAX,QAASx0B,EAAMw0B,QACfjsB,oBAAqBvI,EAAMuI,oBAC3BF,uBAAwBrI,EAAMqI,yBAI1BktB,EAAgC33B,EAAOzB,QAAQqjB,6BAA6B,cAAe,CAC/F/W,KAAM2sB,EACNvsB,WAAYwsB,EACZ9sB,oBAAqBvI,EAAMuI,oBAC3BY,WAAYmsB,EACZjtB,uBAAwBrI,EAAMqI,yBAahC,OATAzK,EAAOzB,QAAQ2f,OAAOjU,KAAK2sB,QAAU,CACnCrgC,KAAM,UACNqhC,QAAS,CACPC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,IAEVC,iBAAkB,CAAC,IAEdjqC,EAAAA,EAAAA,GAAS,CAAC,EAAG4pC,EAA+B,CACjDxtB,cAAewL,KAAKhkB,IAAIslC,EAAcU,EAA8BpsB,WAAWxM,QAC/EwL,sBAAuBysB,GAAoB,CACzCnsB,KAAM8sB,EAA8B9sB,KACpCosB,iBAEFlsB,eACAV,QAASgtB,GACT,EAESY,GAAqBxT,GAA4B,gBAAjBA,EAAQluB,MAA2C,WAAjBkuB,EAAQluB,MAAsC,UAAjBkuB,EAAQluB,MAAoBkuB,EAAQyT,iBAAoC,cAAjBzT,EAAQluB,MAAwBkuB,EAAQyT,gBAC9LC,GAAyBA,CAACttB,EAAMutB,EAAUC,KACrD,MAAMC,EAAOztB,EAAKutB,GAClB,GAAkB,UAAdE,EAAK/hC,KACP,MAAO,GAET,MAAMgiC,EAAmB,GACzB,IAAK,IAAIr2B,EAAI,EAAGA,EAAIo2B,EAAK/mC,SAASwN,OAAQmD,GAAK,EAAG,CAChD,MAAMs2B,EAAQF,EAAK/mC,SAAS2Q,GACvBm2B,GAA0BJ,GAAmBptB,EAAK2tB,KACrDD,EAAiBxzB,KAAKyzB,GAExBD,EAAiBxzB,QAAQozB,GAAuBttB,EAAM2tB,EAAOH,GAC/D,CAIA,OAHKA,GAA0C,MAAjBC,EAAKnB,UACjCoB,EAAiBxzB,KAAKuzB,EAAKnB,UAEtBoB,CAAgB,EA6HlB,SAASE,GAA0Bz4B,GACxC,IAAImM,EAAiBC,EACrB,MAAMP,EAAaL,GAAuBxL,GAS1C,MAAO,CACLhQ,KATyC,MAAd6b,GAA4D,OAArCM,EAAkBN,EAAW7b,UAAe,EAASmc,EAAgBlD,QAAO,CAACC,EAAK3G,IACpI2G,GAAOlJ,EAAOzB,QAAQm6B,sBAAsBn2B,EAAMkD,KAEjD,KAAO,EAORpV,QAN4C,MAAdwb,GAAkE,OAA3CO,EAAqBP,EAAWxb,aAAkB,EAAS+b,EAAmBnD,QAAO,CAACC,EAAK3G,IAChJ2G,GAAOlJ,EAAOzB,QAAQm6B,sBAAsBn2B,EAAMkD,KAEjD,KAAO,EAKZ,CACO,SAASkzB,GAAwB34B,EAAQ44B,GAC9C,MAAMvlB,EAAgBjM,EAA0BpH,GAChD,MAAO,iCAAP3S,OAAwC,EAAIsoB,KAAKkjB,MAAMD,EAAYvlB,GAAc,MACnF,CCxRA,MAAMhnB,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,YAkBtI,SAASysC,GAAmBpsC,GAC1B,MAAM,MACF6V,GACE7V,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KAIZzZ,EAnBkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,gBAEoB0L,EAAyBxF,EAAQ,EAY9CE,CAHG,CACjBF,QAASS,EAAUT,UAGfimC,EAAOvoC,EAAAA,SAAc,IAAM+R,EAAQhP,EAAUxB,MAAMinC,oBAAsBzlC,EAAUxB,MAAMknC,sBAAsB,CAAC1lC,EAAUxB,MAAMknC,qBAAsB1lC,EAAUxB,MAAMinC,oBAAqBz2B,IACjM,OAAoBtO,EAAAA,GAAAA,KAAK8kC,GAAMhrC,EAAAA,EAAAA,GAAS,CACtCW,SAAU,QACVyC,UAAW2B,EAAQlG,KACnBssC,YAAal5B,EAAOzB,QAAQ6kB,cAAc7gB,EAAQ,uBAAyB,yBAC3E,aAAcowB,QAAQpwB,IACrBpQ,GACL,CAkEA,MAAMgnC,GAA+B3oC,EAAAA,KAAWsoC,ICtG1CzsC,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,YAAa,WAAY,eAAgB,oBAAqB,QAAS,iBAkB7M,SAAS+sC,GAAoB1sC,GAC3B,IAAIkhB,EACJ,MACInI,GAAI4zB,EAAM,MACV92B,EAAK,MACLwF,EAAK,UACL5W,EAAS,SACTuzB,EAAQ,cACR+E,GACE/8B,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACToF,EAAWl5B,EAAAA,OAAa,MACxBiV,GAAKsnB,EAAAA,GAAAA,MACJpD,EAAYC,GAAiBp5B,EAAAA,SAAe+R,GAC7ChP,GAAYgZ,EAAAA,EAAAA,KAIZzZ,EA5BkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,oBAEoB0L,EAAyBxF,EAAQ,EAqB9CE,CAHG,CACjBF,QAASS,EAAUT,UAGf+2B,EAAer5B,EAAAA,aAAkBs5B,UACrC,MAAMC,EAAW1O,EAAM0C,OAAOzoB,QAC1Bm0B,SACIA,EAAcpO,EAAO0O,GAE7BH,EAAcG,SACR/pB,EAAOzB,QAAQ6rB,iBAAiB,CACpC3kB,GAAI4zB,EACJtxB,QACAxF,MAAOwnB,GACN1O,EAAM,GACR,CAACrb,EAAQ+H,EAAOsxB,EAAQ5P,IAS3B,OARAj5B,EAAAA,WAAgB,KACdo5B,EAAcrnB,EAAM,GACnB,CAACA,KACJmL,EAAAA,EAAAA,IAAkB,KACZgX,GACFgF,EAASnrB,QAAQoT,OACnB,GACC,CAAC+S,KACgBzwB,EAAAA,GAAAA,KAAK,SAASlG,EAAAA,EAAAA,GAAS,CACzCurC,QAAS7zB,EACTtU,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,IAC7BgB,EAAO,CACRZ,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMyzB,cAAcz3B,EAAAA,EAAAA,GAAS,CACjE0X,GAAIA,EACJikB,SAAUA,EACVp0B,QAASq9B,QAAQhJ,GACjBlE,SAAUoE,EACVl1B,KAAM,SAC2C,OAA/CiZ,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB4X,iBAE5F,CAmEO,MCzIDn5B,GAAY,CAAC,OAAQ,aAAc,SAAU,kBAAmB,iBAAkB,cAAe,WAAY,QAAS,mBAQtHktC,IAA2BhtC,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAC7CO,QAAS,OACTsB,WAAY,SACZuK,MAAO,OACP,WAAc,CACZ6gC,OAAQ,sBAGZ,SAASC,GAAuB/sC,GAC9B,IAAIkhB,EAAsB8rB,EAAuB7rB,EAAuB8rB,EACxE,MAAM,KACF5oB,EAAI,WACJsb,EAAU,OACVrsB,EAAM,gBACNssB,EAAe,YACfC,EAAW,SACXpa,EACAxb,MAAOa,GACL9K,EACJ+/B,GAASr6B,EAAAA,EAAAA,GAA8B1F,EAAOL,KACzCsgC,EAAkBC,GAAuBp8B,EAAAA,SAAeugB,EAAKxO,OAAS,IACvEhP,GAAYgZ,EAAAA,EAAAA,KACZqtB,GAAU7M,EAAAA,GAAAA,KACV8M,GAAW9M,EAAAA,GAAAA,KACX+M,GAAmE,OAA/ClsB,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBmsB,aAAe,CAAC,EACxHC,EAAqE,OAAnDN,EAAwBI,EAAgBG,SAAkBP,EAC5EQ,GAA0E,OAAhDrsB,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBssB,mBAAqB,CAAC,EACtInN,EAAiBx8B,EAAAA,aAAkB6qB,IACvC,MAAM9Y,EAAQ8Y,EAAM0C,OAAOxb,MAC3BqqB,EAAoBrqB,GACpB8pB,GAAWt+B,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CAC5BxO,UACC,GACF,CAAC8pB,EAAYtb,IAChBvgB,EAAAA,WAAgB,KACdo8B,EAAoB7b,EAAKxO,OAAS,GAAG,GACpC,CAACwO,EAAKxO,QACT,MAAM5L,EAAqB,MAAba,EAAoBA,EAAYwI,EAAOzB,QAAQ6kB,cAAc,yBAC3E,OAAoBpvB,EAAAA,GAAAA,MAAMulC,GAA0B,CAClDhoC,SAAU,EAAcyC,EAAAA,GAAAA,MAAMT,EAAUxB,MAAMqoC,gBAAiB,CAC7D3P,WAAW,EACXl5B,SAAU,EAAc0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMsoC,gBAAgBtsC,EAAAA,EAAAA,GAAS,CAAC,EAAoD,OAAhD4rC,EAAwBpmC,EAAUvB,gBAAqB,EAAS2nC,EAAsBU,eAAgB,CAC/K50B,GAAIm0B,EACJnM,QAAQ,EACRrgC,QAAS,WACTmE,SAAUoF,MACM3C,EAAAA,GAAAA,MAAMT,EAAUxB,MAAMgoC,YAAYhsC,EAAAA,EAAAA,GAAS,CAC3D6rC,QAASA,EACTn0B,GAAIo0B,EACJljC,MAAOA,EACP4L,MAAOoqB,EACPlH,SAAUuH,EACV5/B,QAAS,WACT6sC,OAAQD,EACRM,cAAc,EACdjkC,WAAY,CACV3F,IAAK47B,EACLna,aAEDsa,EAAQqN,EAAiB,CAC1BvoC,SAAU,EAAc0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMooC,kBAAkBpsC,EAAAA,EAAAA,GAAS,CAAC,EAAGmsC,EAAuB,CACjGD,OAAQD,EACRz3B,MAAO,GACPhR,SAAUyO,EAAOzB,QAAQ6kB,cAAc,sBACvBnvB,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMooC,kBAAkBpsC,EAAAA,EAAAA,GAAS,CAAC,EAAGmsC,EAAuB,CAC3FD,OAAQD,EACRz3B,MAAO,OACPhR,SAAUyO,EAAOzB,QAAQ6kB,cAAc,uBACvBnvB,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMooC,kBAAkBpsC,EAAAA,EAAAA,GAAS,CAAC,EAAGmsC,EAAuB,CAC3FD,OAAQD,EACRz3B,MAAO,QACPhR,SAAUyO,EAAOzB,QAAQ6kB,cAAc,8BAGzCmJ,IAER,CC1EA,MAgBagO,IAAuBxsC,EAAAA,EAAAA,GAAS,CAAC,EAAG+mC,GAAqB,CACpEv+B,KAAM,UACNo/B,MAAO,SACP6E,YAAa,SACbC,WH0E+B31B,GAC3BmzB,GAAmBnzB,EAAO2f,SACrB,IAEWxwB,EAAAA,GAAAA,KAAKklC,IAAiBprC,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,IG7EvDsxB,eF0GmCtxB,IAAuB7Q,EAAAA,GAAAA,KAAKmlC,IAAqBrrC,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,IEzGjG0wB,eAAgB/J,GAChBiP,eA7BF,SAA6B/pC,GAG1B,IAH2B,MAC5B4R,EAAK,IACLoc,GACDhuB,EACC,OAAO4R,EAAQoc,EAAIyE,cAAc,wBAA0BzE,EAAIyE,cAAc,wBAC/E,EAyBElS,gBClC2C0d,GAAuB,CAAC,CACnErsB,MAAO,KACPysB,mBAAoBvd,IAClB,IAAKA,EAAWlP,MACd,OAAO,KAET,MAAMo4B,EAAsC,SAArBlpB,EAAWlP,MAClC,OAAOA,GACEowB,QAAQpwB,KAAWo4B,CAC3B,EAEHtpB,eAAgBooB,MDwBhB1G,2BAAuBlgC,EACvBmgC,6BAAyBngC,EAEzByiC,YAAY,EAEZsF,kBAAmBr4B,GA9BGA,KACtB,OAAQA,EAAMs4B,cAAc/E,QAC1B,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAO,EACT,IAAK,QACL,IAAK,KACL,IAAK,IACL,IAAK,OACL,IAAK,YACH,OAAO,EACT,QACE,OACJ,EAgB4BgF,CAAgBv4B,KEnCjCw4B,GAAgC,YAChCC,IAAkCjtC,EAAAA,EAAAA,GAAS,CAAC,EAAGwsC,GAAsB,CAChFxyB,MAAOgzB,GACPxkC,KAAM,oBACNoC,MAAO,GACPw8B,WAAW,EACXD,UAAU,EACVnsB,YAAY,EAEZusB,YAAY,EACZ2F,mBAAmB,EACnBC,gBAAgB,EAChBC,eAAe,EACfpI,2BAAuBlgC,EACvBmgC,6BAAyBngC,EACzBuoC,YAAat2B,QAE2BjS,IADdszB,GAA0BrhB,EAAO6Z,IAAIve,MAAO0E,EAAO6Z,IAAI3Y,YACxDlB,EAAOW,IAEhC41B,aAAcv2B,IAAuB7Q,EAAAA,GAAAA,KAAKm0B,IAAoBr6B,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,IAC3E21B,WAAY31B,IAAuB7Q,EAAAA,GAAAA,KAAKswB,IAA0Bx2B,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,MCzBjF,SAASw2B,GAAkB/4B,EAAOg5B,GAChC,MAAqB,kBAAVh5B,GAEL,CAACg5B,EAAoB,KAAM,KAAM,KAAK/K,MAAKgL,GAAaj5B,EAAMk5B,SAASD,KAClE,IAAPnuC,OAAWkV,EAAMiT,QAAQ,KAAM,MAAK,KAIjCjT,CACT,CACO,MAAMm5B,GAAqBA,CAACxM,EAAYnU,KAC7C,MAAM,mBACJwgB,EAAkB,qBAClBI,GACE5gB,EACJ,IAAIxY,EACJ,GAAIo5B,EAAsB,CACxB,IAAIC,EACJ,MAAMC,EAAa3M,EAAW5F,OAAO/yB,KACrC,GAAmB,WAAfslC,EACFt5B,EAAQ0qB,OAAOiC,EAAW3sB,YACrB,GAAmB,SAAfs5B,GAAwC,aAAfA,EAA2B,CAC7D,IAAIC,EACJv5B,EAAkD,OAAzCu5B,EAAoB5M,EAAW3sB,YAAiB,EAASu5B,EAAkBC,aACtF,MACEx5B,EAD6G,oBAAjD,OAA1Cq5B,EAAqB1M,EAAW3sB,YAAiB,EAASq5B,EAAmBtqB,UACvF4d,EAAW3sB,MAAM+O,WAEjB4d,EAAW3sB,KAEvB,MACEA,EAAQ2sB,EAAW8M,eAErB,OAAOV,GAAkB/4B,EAAOg5B,EAAmB,EAEjB58B,EAAa,CAAC,mIAAoI,gFACtL,MAAMs9B,GACJpmB,WAAAA,CAAYkF,GACV7B,KAAK6B,aAAU,EACf7B,KAAKgjB,UAAY,GACjBhjB,KAAKijB,SAAU,EACfjjB,KAAK6B,QAAUA,CACjB,CACAqhB,QAAAA,CAAS75B,GACF2W,KAAKijB,UACRjjB,KAAKgjB,WAAahjB,KAAK6B,QAAQwgB,oBAEnB,OAAVh5B,QAA4B1P,IAAV0P,EACpB2W,KAAKgjB,WAAa,GACiC,oBAAnChjB,KAAK6B,QAAQugB,kBAC7BpiB,KAAKgjB,WAAahjB,KAAK6B,QAAQugB,kBAAkB/4B,EAAO2W,KAAK6B,QAAQwgB,oBAErEriB,KAAKgjB,WAAa35B,EAEpB2W,KAAKijB,SAAU,CACjB,CACAE,YAAAA,GACE,OAAOnjB,KAAKgjB,SACd,EA0BK,SAASI,GAASvhB,GACvB,MAAM,QACJxT,EAAO,OACPg1B,EAAM,mBACNhB,EAAkB,eAClBiB,EAAc,2BACdC,EAA0B,qBAC1Bd,EAAoB,OACpB37B,GACE+a,EACE2hB,EAAUH,EAAOtzB,QAAO,CAACC,EAAKzD,IAAO,GAALpY,OAAQ6b,GAAG7b,OAlC9BsD,KAMf,IANgB,GACpB8U,EAAE,QACF8B,EAAO,cACP4iB,EAAa,mBACboR,EAAkB,qBAClBI,GACDhrC,EACC,MAAMyJ,EAAM,IAAI6hC,GAAO,CACrBV,uBAcF,OAZAh0B,EAAQzP,SAAQsQ,IACd,MAAM8mB,EAAa/E,EAAc1kB,EAAI2C,EAAOL,OAM5C3N,EAAIgiC,SAASV,GAAmBxM,EAAY,CAC1CqM,qBACAI,yBACC,IAEEvhC,EAAIiiC,cAAc,EAY2BM,CAAa,CAC/Dl3B,KACA8B,UACA4iB,cAAenqB,EAAOzB,QAAQ4rB,cAC9BoR,qBACAI,yBACA,SAAQ,IAAI7F,OACd,IAAK0G,EACH,OAAOE,EAET,MAAME,EAAkBr1B,EAAQY,QAAOC,GAAUA,EAAOL,QAAUizB,GAAgCjzB,QAC5F80B,EAAa,GACnB,GAAIJ,EAA4B,CAC9B,MAAMK,EAAoB98B,EAAOzB,QAAQw+B,8BACzC,IAAIC,EAAuB,EAC3B,MAAMC,EAAyBL,EAAgB3zB,QAAO,CAACC,EAAKd,KAC1D,MAAM80B,EAAkBl9B,EAAOzB,QAAQ4+B,4BAA4B/0B,EAAOL,OAG1E,OAFAmB,EAAId,EAAOL,OAASm1B,EACpBF,EAAuBrnB,KAAKhkB,IAAIqrC,EAAsBE,EAAgBn+B,QAC/DmK,CAAG,GACT,CAAC,GACJ,IAAK,IAAIhH,EAAI,EAAGA,EAAI86B,EAAsB96B,GAAK,EAAG,CAChD,MAAMk7B,EAAiB,IAAInB,GAAO,CAChCV,qBACAD,uBAEFuB,EAAW93B,KAAKq4B,GAChBR,EAAgB9kC,SAAQsQ,IACtB,MAAMi1B,GAAiBJ,EAAuB70B,EAAOL,QAAU,IAAI7F,GAC7Do7B,EAAcR,EAAkBO,GACtCD,EAAehB,SAASkB,EAAcA,EAAYC,YAAcD,EAAYE,QAAU,GAAG,GAE7F,CACF,CACA,MAAMC,EAAgB,IAAIxB,GAAO,CAC/BV,qBACAD,uBAEFsB,EAAgB9kC,SAAQsQ,IACtBq1B,EAAcrB,SAASh0B,EAAOm1B,YAAcn1B,EAAOL,MAAM,IAE3D80B,EAAW93B,KAAK04B,GAChB,MAAMC,EAAU,GAAHrwC,OAAMwvC,EAAWl4B,KAAIvK,GAAOA,EAAIiiC,iBAAgBj9B,KAAK,QAAO,QACzE,MAAO,GAAA/R,OAAGqwC,GAAOrwC,OAAGqvC,GAAU5G,MAChC,CCvIA,SAAS6H,GAAyBC,GAChC,MAAMC,EAAOC,SAASC,cAAc,QACpCF,EAAKG,MAAM3hC,WAAa,MACxBwhC,EAAKG,MAAM5gC,WAAa,MACxBygC,EAAKG,MAAMxhC,QAAU,MACrBqhC,EAAKI,YAAcL,EACnBE,SAASI,KAAKC,YAAYN,GAC1B,MAAMO,EAAQN,SAASO,cACvBD,EAAME,WAAWT,GACjB,MAAM9X,EAAY9R,OAAOsqB,eACzBxY,EAAUyY,kBACVzY,EAAU0Y,SAASL,GACnB,IACEN,SAASY,YAAY,OACvB,CAAE,QACAZ,SAASI,KAAKS,YAAYd,EAC5B,CACF,CA8BO,MAAMe,GAAmBA,CAAC5+B,EAAQtT,KACvC,MAAMmyC,EAA2BnyC,EAAMoyC,0CACjCnD,GAA4D,kBAA7BkD,EAAoE,MAA5BA,OAAmC,EAASA,EAAyBE,gBAAkBF,KAA6B,EAC3LG,EAA6BtyC,EAAMsyC,2BACnCC,EAAazuC,EAAAA,aAAkB6qB,IACnC,IAAOA,EAAM2I,UAAW3I,EAAM4I,SAA0B,MAAd5I,EAAMtjB,IAC9C,OAIF,GA9BJ,SAA4B8sB,GAC1B,IAAIqa,EAEJ,QAAsD,OAAjDA,EAAuBjrB,OAAOsqB,kBAA2BW,EAAqB5tB,gBAO/EuT,IAAYA,EAAQsa,cAAgB,IAAMta,EAAQua,gBAAkB,GAAK,EAI/E,CAgBQC,CAAmBhkB,EAAM0C,QAC3B,OAEF,IAAIuhB,EAAa,GAEjB,GADqBt/B,EAAOzB,QAAQghC,kBACnB5qC,KAAO,EACtB2qC,EAAat/B,EAAOzB,QAAQihC,aAAa,CACvChD,gBAAgB,EAEhBhB,UAAWwD,QAER,CACL,MAAMS,EAAc7tB,GAAsB5R,GAC1C,GAAIy/B,EAAa,CACf,MAAMvQ,EAAalvB,EAAOzB,QAAQ4rB,cAAcsV,EAAYh6B,GAAIg6B,EAAY13B,OAC5Eu3B,EAAa5D,GAAmBxM,EAAY,CAC1CqM,mBAAoByD,EACpBrD,wBAEJ,CACF,CA3DJ,IAAyBiC,EA4DrB0B,EAAat/B,EAAOzB,QAAQqjB,6BAA6B,gBAAiB0d,GACtEA,IA7DiB1B,EA8DH0B,EA7DhBI,UAAUC,UACZD,UAAUC,UAAUC,UAAUhC,GAAMiC,OAAM,KACxClC,GAAyBC,EAAK,IAGhCD,GAAyBC,GAyDvB59B,EAAOzB,QAAQ+f,aAAa,gBAAiBghB,GAC/C,GACC,CAACt/B,EAAQ27B,EAAsBqD,I5BpFMc,EAAC9/B,EAAQtP,EAAKmqB,EAAWC,EAASC,KAC1E,MAAMnC,EAAS6K,GAAczjB,EAAQ,2BAC9B+/B,EAAOC,GAAYxvC,EAAAA,UAAe,GACnC0qB,EAAa1qB,EAAAA,OAAasqB,GAC1BmlB,EAAczvC,EAAAA,aAAkB6qB,GAC7BH,EAAW3c,SAAW2c,EAAW3c,QAAQ8c,IAC/C,IACH7qB,EAAAA,WAAgB,KACd0qB,EAAW3c,QAAUuc,CAAO,GAC3B,CAACA,IACJtqB,EAAAA,WAAgB,KACd,IAAI0vC,EAMJ,GAJEA,EADE7qB,GAAW3kB,GACGA,IAEAA,GAAOA,EAAI6N,QAAU7N,EAAI6N,QAAU,KAEjD2hC,GAAiBrlB,IAAcklB,EAAO,CACxCnnB,EAAOR,MAAM,kBAAD/qB,OAAmBwtB,EAAS,WACxCqlB,EAAcC,iBAAiBtlB,EAAWolB,EAAallB,GACvD,MAAMqlB,EAAYF,EAClBF,GAAS,GACT,MAAMlmB,EAAcA,KAClBlB,EAAOR,MAAM,mBAAD/qB,OAAoBwtB,EAAS,WACzCulB,EAAUC,oBAAoBxlB,EAAWolB,EAAallB,EAAQ,EAEhE/a,EAAOzB,QAAQkd,eAAe,UAAW3B,EAC3C,IACC,CAACppB,EAAKuvC,EAAaplB,EAAWklB,EAAOnnB,EAAQmC,EAAS/a,GAAQ,E4ByDjE8/B,CAA2B9/B,EAAQA,EAAOzB,QAAQgP,eAAgB,UAAW0xB,GAC7EjjB,GAAwBhc,EAAQ,gBAAiBtT,EAAM4zC,gBAAgB,ECpF5DC,GAA6BngC,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACrEoS,WAAY,CACVguB,MAAM,KCNGC,GAAiBzf,IAC5B,MAAMtJ,EAAgBlnB,EAAAA,QAAa,GAC/BknB,EAAcnZ,UAChBmZ,EAAcnZ,SAAU,EACxByiB,IACF,ECJW0f,GAA+BA,CAAC1gC,EAAQkhB,EAAOF,KAC1D,MAAMqB,EAAU7xB,EAAAA,SACViV,EAAKjV,EAAAA,OAAa,OAADnD,OAAQsoB,KAAKqa,MAAsB,IAAhBra,KAAKoB,YACzC4pB,EAAuBnwC,EAAAA,aAAkB,KAC7C6xB,EAAQ9jB,QAAUyB,EAAOzB,QAAQ0iB,sBAAsBC,EAAOzb,EAAGlH,QAASyiB,EAAS,GAClF,CAAChhB,EAAQghB,EAAUE,IACtBuf,IAAe,KACbE,GAAsB,IAExB,MAAMjpB,EAAgBlnB,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACVknB,EAAcnZ,QAChBmZ,EAAcnZ,SAAU,EAExBoiC,IAEK,KACDte,EAAQ9jB,UACV8jB,EAAQ9jB,UACR8jB,EAAQ9jB,QAAU,KACpB,IAED,CAACoiC,GAAsB,ECtBfC,GAA6BA,CAAC5gC,EAAQkhB,EAAOF,KACxD,MAAMqB,EAAU7xB,EAAAA,SACViV,EAAKjV,EAAAA,OAAa,OAADnD,OAAQsoB,KAAKqa,MAAsB,IAAhBra,KAAKoB,YACzC4pB,EAAuBnwC,EAAAA,aAAkB,KAC7C6xB,EAAQ9jB,QAAUyB,EAAOzB,QAAQ8iB,oBAAoBH,EAAOzb,EAAGlH,QAASyiB,EAAS,GAChF,CAAChhB,EAAQghB,EAAUE,IACtBuf,IAAe,KACbE,GAAsB,IAExB,MAAMjpB,EAAgBlnB,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACVknB,EAAcnZ,QAChBmZ,EAAcnZ,SAAU,EAExBoiC,IAEK,KACDte,EAAQ9jB,UACV8jB,EAAQ9jB,UACR8jB,EAAQ9jB,QAAU,KACpB,IAED,CAACoiC,GAAsB,ECrBtBE,GAAoBt+B,GACX,MAATA,EACK,KAEF5P,OAAO4P,GAEHu+B,GAA8BrS,IAAkBlsB,GAC9C,MAATA,GAAiB5P,OAAOouC,MAAMx+B,IAAoB,KAAVA,EACnC,KAEFoyB,GACEkM,GAAkBlM,KAAiBkM,GAAkBt+B,KCRnDy+B,IAAuBjzC,EAAAA,EAAAA,GAAS,CAAC,EAAG+mC,GAAqB,CACpEv+B,KAAM,SACNo/B,MAAO,QACP6E,YAAa,QACbhF,eAAgB/J,GAChBvB,YAAa3nB,GAAmB,KAAVA,EAAe,KAAO5P,OAAO4P,GACnDm4B,eAAgB/pC,IAAA,IAAC,MACf4R,GACD5R,EAAA,OlDdI,SAAkB4R,GACvB,MAAwB,kBAAVA,IAAuB5P,OAAOouC,MAAMx+B,EACpD,CkDYQ0+B,CAAS1+B,GAASA,EAAM2+B,iBAAmB3+B,GAAS,EAAE,EAC5D2O,gBDE2C0d,GAAuB,CAAC,CACnErsB,MAAO,IACPysB,mBAAoBvd,GACM,MAApBA,EAAWlP,OAAiB5P,OAAOouC,MAAMtvB,EAAWlP,OAC/C,KAEFA,GACEs+B,GAAkBt+B,KAAWkP,EAAWlP,MAGnD8O,eAAgB+a,GAChB+U,oBAAqB,CACnB5qC,KAAM,WAEP,CACDgM,MAAO,KACPysB,mBAAoBvd,GACM,MAApBA,EAAWlP,OAAiB5P,OAAOouC,MAAMtvB,EAAWlP,OAC/C,KAEFA,GACEs+B,GAAkBt+B,KAAWkP,EAAWlP,MAGnD8O,eAAgB+a,GAChB+U,oBAAqB,CACnB5qC,KAAM,WAEP,CACDgM,MAAO,IACPysB,mBAAoBvd,GACM,MAApBA,EAAWlP,OAAiB5P,OAAOouC,MAAMtvB,EAAWlP,OAC/C,KAEFA,GACQ,MAATA,GAGGs+B,GAAkBt+B,GAASkP,EAAWlP,MAGjD8O,eAAgB+a,GAChB+U,oBAAqB,CACnB5qC,KAAM,WAEP,CACDgM,MAAO,KACPysB,mBAAoBvd,GACM,MAApBA,EAAWlP,OAAiB5P,OAAOouC,MAAMtvB,EAAWlP,OAC/C,KAEFA,GACQ,MAATA,GAGGs+B,GAAkBt+B,IAAUkP,EAAWlP,MAGlD8O,eAAgB+a,GAChB+U,oBAAqB,CACnB5qC,KAAM,WAEP,CACDgM,MAAO,IACPysB,mBAAoBvd,GACM,MAApBA,EAAWlP,OAAiB5P,OAAOouC,MAAMtvB,EAAWlP,OAC/C,KAEFA,GACQ,MAATA,GAGGs+B,GAAkBt+B,GAASkP,EAAWlP,MAGjD8O,eAAgB+a,GAChB+U,oBAAqB,CACnB5qC,KAAM,WAEP,CACDgM,MAAO,KACPysB,mBAAoBvd,GACM,MAApBA,EAAWlP,OAAiB5P,OAAOouC,MAAMtvB,EAAWlP,OAC/C,KAEFA,GACQ,MAATA,GAGGs+B,GAAkBt+B,IAAUkP,EAAWlP,MAGlD8O,eAAgB+a,GAChB+U,oBAAqB,CACnB5qC,KAAM,WAEP,CACDgM,MAAO,UACPysB,mBAAoBA,IACXzsB,GACW,MAATA,EAGX0zB,qBAAqB,GACpB,CACD1zB,MAAO,aACPysB,mBAAoBA,IACXzsB,GACW,MAATA,EAGX0zB,qBAAqB,GACpB,CACD1zB,MAAO,UACPysB,mBAAoBvd,GACbvS,MAAMC,QAAQsS,EAAWlP,QAAsC,IAA5BkP,EAAWlP,MAAMxD,OAGlDwD,GACW,MAATA,GAAiBkP,EAAWlP,MAAMk5B,SAAS9oC,OAAO4P,IAHlD,KAMX8O,eAAgBqc,GAChByT,oBAAqB,CACnB5qC,KAAM,aC7HRw8B,sBAAuB5D,GAA6B2R,IACpD9N,wBAAyB8N,KCfrBz0C,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,aAAc,iBAAkB,cAAe,WAAY,YAOzI,SAAS+0C,GAAoB10C,GAC3B,IAAIukB,EAAarD,EACjB,MAAM,KACFmD,EAAI,WACJsb,EAAU,KACV91B,EAAI,OACJyJ,EAAM,gBACNssB,EAAe,WACfE,EAAU,YACVD,EAAW,SACXpa,EAAQ,SACR5c,GACE7I,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCqgC,EAAgBP,MACfQ,EAAkBC,GAAuBp8B,EAAAA,SAA6C,OAA7BygB,EAAcF,EAAKxO,OAAiB0O,EAAc,KAC3G4b,EAAUC,GAAiBt8B,EAAAA,UAAe,GAC3CiV,GAAKsnB,EAAAA,GAAAA,KACLx5B,GAAYgZ,EAAAA,EAAAA,KACZygB,EAAiBx8B,EAAAA,aAAkB6qB,IACvC,MAAM9Y,EAAQ8Y,EAAM0C,OAAOxb,MAC3BqqB,EAAoBK,OAAO1qB,IAC3BuqB,GAAc,GACdJ,EAAcT,MAAM14B,EAAU25B,kBAAkB,KAC9Cb,GAAWt+B,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CAC5BxO,WAEFuqB,GAAc,EAAM,GACpB,GACD,CAACT,EAAYtb,EAAMxd,EAAU25B,iBAAkBR,IAMlD,OALAl8B,EAAAA,WAAgB,KACd,IAAI68B,EACJ,MAAMQ,EAA2C,OAA9BR,EAAetc,EAAKxO,OAAiB8qB,EAAe,GACvET,EAAoBK,OAAOY,GAAW,GACrC,CAAC9c,EAAKxO,SACWtO,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMu7B,eAAev/B,EAAAA,EAAAA,GAAS,CAC/D08B,WAAW,EACXhlB,GAAIA,EACJ9O,MAAOqJ,EAAOzB,QAAQ6kB,cAAc,yBACpCmK,YAAavtB,EAAOzB,QAAQ6kB,cAAc,+BAC1C7gB,MAAOoqB,EACPlH,SAAUuH,EACV5/B,QAAS,WACTmJ,KAAMA,GAAQ,OACdi3B,gBAAiB,CACfC,QAAQ,GAEV/D,SAAU4C,EACVE,YAAYz+B,EAAAA,EAAAA,GAAS,CAAC,EAAG8+B,GAAYN,EAAc,CACjD7B,aAAcmC,GAAwB54B,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM44B,SAAU,CACnEj8B,SAAU,QACVf,MAAO,WACJ4+B,GACH,CAAC,EAAG,CACNh3B,YACCi3B,EAAY,CACbn2B,YAAYtI,EAAAA,EAAAA,GAAS,CACnB4D,IAAc,mBAAT4E,EAA4B,mBAAqB,aACtD4b,YACe,MAAdqa,OAAqB,EAASA,EAAWn2B,eAE7ClE,EAAuD,OAA/Cyb,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB0f,eACjG,CCrEA,MAAM+T,GAAY,oBACZC,GAAgB,gCACtB,SAASC,GAAmB9vB,EAAY+vB,EAAWC,EAAUC,GAC3D,IAAKjwB,EAAWlP,MACd,OAAO,KAET,MAAOo/B,EAAMC,EAAOC,EAAKC,EAAMC,GAAUtwB,EAAWlP,MAAMy/B,MAAMP,EAAWH,GAAgBD,IAAWpZ,MAAM,GAAGtjB,IAAIhS,QAC7GsvC,EAAO,IAAIC,KAAKP,EAAMC,EAAQ,EAAGC,EAAKC,GAAQ,EAAGC,GAAU,GAAGI,UACpE,OAAO5/B,IACL,IAAKA,EACH,OAAO,EAET,GAAIm/B,EACF,OAAOF,EAAUj/B,EAAM4/B,UAAWF,GAIpC,MACMG,EADW,IAAIF,KAAK3/B,GACK8/B,SAASZ,EAAWl/B,EAAM+/B,WAAa,EAAGb,EAAWl/B,EAAMggC,aAAe,EAAG,EAAG,GAC/G,OAAOf,EAAUY,EAAeH,EAAK,CAEzC,CACO,MAAMO,GAAuBf,GAAY7S,GAAuB,CAAC,CACtErsB,MAAO,KACPysB,mBAAoBvd,GACX8vB,GAAmB9vB,GAAY,CAACia,EAAQC,IAAWD,IAAWC,GAAQ8V,GAE/EpwB,eAAgB+vB,GAChBD,oBAAqB,CACnB5qC,KAAMkrC,EAAW,iBAAmB,SAErC,CACDl/B,MAAO,MACPysB,mBAAoBvd,GACX8vB,GAAmB9vB,GAAY,CAACia,EAAQC,IAAWD,IAAWC,GAAQ8V,GAE/EpwB,eAAgB+vB,GAChBD,oBAAqB,CACnB5qC,KAAMkrC,EAAW,iBAAmB,SAErC,CACDl/B,MAAO,QACPysB,mBAAoBvd,GACX8vB,GAAmB9vB,GAAY,CAACia,EAAQC,IAAWD,EAASC,GAAQ8V,GAE7EpwB,eAAgB+vB,GAChBD,oBAAqB,CACnB5qC,KAAMkrC,EAAW,iBAAmB,SAErC,CACDl/B,MAAO,YACPysB,mBAAoBvd,GACX8vB,GAAmB9vB,GAAY,CAACia,EAAQC,IAAWD,GAAUC,GAAQ8V,GAE9EpwB,eAAgB+vB,GAChBD,oBAAqB,CACnB5qC,KAAMkrC,EAAW,iBAAmB,SAErC,CACDl/B,MAAO,SACPysB,mBAAoBvd,GACX8vB,GAAmB9vB,GAAY,CAACia,EAAQC,IAAWD,EAASC,GAAQ8V,GAAWA,GAExFpwB,eAAgB+vB,GAChBD,oBAAqB,CACnB5qC,KAAMkrC,EAAW,iBAAmB,SAErC,CACDl/B,MAAO,aACPysB,mBAAoBvd,GACX8vB,GAAmB9vB,GAAY,CAACia,EAAQC,IAAWD,GAAUC,GAAQ8V,GAE9EpwB,eAAgB+vB,GAChBD,oBAAqB,CACnB5qC,KAAMkrC,EAAW,iBAAmB,SAErC,CACDl/B,MAAO,UACPysB,mBAAoBA,IACXzsB,GACW,MAATA,EAGX0zB,qBAAqB,GACpB,CACD1zB,MAAO,aACPysB,mBAAoBA,IACXzsB,GACW,MAATA,EAGX0zB,qBAAqB,KC3FjB5pC,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,WAAY,aAAc,eAAgB,oBAAqB,iBAU/Lo2C,IAAkBl2C,EAAAA,EAAAA,IAAO48B,GAAAA,GAAP58B,CAAkB,CACxCmC,SAAU,YAWZ,SAASg0C,GAAiBh2C,GACxB,MAAM,GACF+Y,EACAlD,MAAOogC,EAAS,MAChB56B,EAAK,OACLuhB,EAAM,SACN5E,EAAQ,WACRruB,EAAU,cACVozB,GACE/8B,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCu2C,EAA6B,aAAhBtZ,EAAO/yB,KACpByJ,EAASskB,KACToF,EAAWl5B,EAAAA,SACXqyC,EAAmBryC,EAAAA,SAAc,KACrC,IAAIsyC,EAQAC,EACJ,GAPED,EADe,MAAbH,EACW,KACJA,aAAqBT,KACjBS,EAEA,IAAIT,MAAmB,MAAbS,EAAoBA,EAAY,IAAIrxB,YAG3C,MAAdwxB,GAAsBnwC,OAAOouC,MAAM+B,EAAWX,WAChDY,EAAgB,OACX,CAELA,EADkB,IAAIb,KAAKY,EAAWX,UAA6C,GAAjCW,EAAWE,oBAA2B,KAC9DjH,cAAckH,OAAO,EAAGL,EAAa,GAAK,GACtE,CACA,MAAO,CACLM,OAAQJ,EACRK,UAAWJ,EACZ,GACA,CAACJ,EAAWC,KACRjZ,EAAYC,GAAiBp5B,EAAAA,SAAeqyC,GAK7C/vC,EAjDkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,kBAEoB0L,EAAyBxF,EAAQ,EA0C9CE,CAHG,CACjBF,SAFgByZ,EAAAA,EAAAA,KAEGzZ,UAGfswC,EAA6B5yC,EAAAA,QAAa,GAC1C6yC,EAAmB7yC,EAAAA,aAAkB+R,IACzC,GAAc,KAAVA,EACF,OAAO,KAET,MAAO+gC,EAAMrB,GAAQ1/B,EAAMghC,MAAM,MAC1B5B,EAAMC,EAAOC,GAAOyB,EAAKC,MAAM,KAChCT,EAAa,IAAIZ,KAGvB,GAFAY,EAAWU,YAAY7wC,OAAOgvC,GAAOhvC,OAAOivC,GAAS,EAAGjvC,OAAOkvC,IAC/DiB,EAAWT,SAAS,EAAG,EAAG,EAAG,GACzBJ,EAAM,CACR,MAAOwB,EAAOC,GAAWzB,EAAKsB,MAAM,KACpCT,EAAWT,SAAS1vC,OAAO8wC,GAAQ9wC,OAAO+wC,GAAU,EAAG,EACzD,CACA,OAAOZ,CAAU,GAChB,IACGjZ,EAAer5B,EAAAA,aAAkBs5B,UACrC,MAAM6Z,EAAmBtoB,EAAM0C,OAAOxb,MAChCqhC,EAAgBP,EAAiBM,GACnCla,SACIA,EAAcpO,EAAOuoB,GAE7Bha,EAAc,CACZsZ,OAAQU,EACRT,UAAWQ,IAEb3jC,EAAOzB,QAAQ6rB,iBAAiB,CAC9B3kB,KACAsC,QACAxF,MAAOqhC,GACNvoB,EAAM,GACR,CAACrb,EAAQ+H,EAAOtC,EAAIgkB,EAAe4Z,IACtC7yC,EAAAA,WAAgB,KACdo5B,GAAcxpB,IACZ,IAAIyjC,EAAuBC,EAC3B,OAAIjB,EAAiBK,SAAW9iC,EAAM8iC,SAAgE,OAApDW,EAAwBhB,EAAiBK,aAAkB,EAASW,EAAsB1B,cAAkD,OAAjC2B,EAAgB1jC,EAAM8iC,aAAkB,EAASY,EAAc3B,WACnNU,EAEFziC,CAAK,GACZ,GACD,CAACyiC,KACJn1B,EAAAA,EAAAA,IAAkB,KACZgX,GACFgF,EAASnrB,QAAQoT,OACnB,GACC,CAAC+S,IACJ,MAAM4F,EAAOtqB,EAAOzB,QAAQgsB,yBAAyB9kB,EAAIsC,GAkBzD,OAAoB9T,EAAAA,GAAAA,KAAKwuC,IAAiB10C,EAAAA,EAAAA,GAAS,CACjD27B,SAlBqBvJ,IAErB,GADAuJ,EAASnrB,QAAU4hB,EACP,MAARmK,GAAgBA,EAAKyZ,+BAAiCX,EAA2B7kC,QAAS,CAC5F,MAAM2vB,EAAaxE,EAASnrB,QAAQgE,MAC9BugC,EAAaO,EAAiBnV,GACpCtE,EAAc,CACZsZ,OAAQJ,EACRK,UAAWjV,IAEbluB,EAAOzB,QAAQ6rB,iBAAiB,CAC9B3kB,KACAsC,QACAxF,MAAOugC,IAETM,EAA2B7kC,SAAU,CACvC,GAIAksB,WAAW,EACXt5B,UAAW2B,EAAQlG,KACnB2J,KAAMqsC,EAAa,iBAAmB,OACtCvsC,YAAYtI,EAAAA,EAAAA,GAAS,CACnB4D,IAAKixC,EAAa,mBAAqB,cACtCvsC,GACHkM,MAAOonB,EAAWwZ,UAClB1d,SAAUoE,GACT13B,GACL,CAmEO,MAAM6xC,GAAqBl/B,IAAuB7Q,EAAAA,GAAAA,KAAKyuC,IAAkB30C,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,IC1M7F,SAASm/B,GAAoBtzC,GAK1B,IAL2B,MAC5B4R,EAAK,WACLs5B,EAAU,MACVzV,EAAK,MACLre,GACDpX,EACC,KAAM4R,aAAiB2/B,MACrB,MAAM,IAAI/gC,MAAM,CAAC,SAAD9T,OAAWwuC,EAAU,wDAA2D,iEAAkE,WAAFxuC,OAAa+4B,EAAK,cAAA/4B,OAAa0a,EAAK,OAAM3I,KAAK,MAEnN,CAiCO,MAAM8kC,IAAoBn2C,EAAAA,EAAAA,GAAS,CAAC,EAAG+mC,GAAqB,CACjEv+B,KAAM,OACNi/B,eAAgB3J,GAChB6O,eAnCK,SAA0B7pC,GAI9B,IAJ+B,MAChC0R,EAAK,MACLwF,EAAK,GACLtC,GACD5U,EACC,OAAK0R,GAGL0hC,GAAqB,CACnB1hC,QACAs5B,WAAY,OACZzV,MAAO3gB,EACPsC,UAEKxF,EAAM4hC,sBARJ,EASX,EAqBEjzB,gBAAiBsxB,KACjBpM,eAAgB4N,GAEhBpJ,kBAAmBr4B,GAAS,IAAI2/B,KAAK3/B,KAE1B6hC,IAAwBr2C,EAAAA,EAAAA,GAAS,CAAC,EAAG+mC,GAAqB,CACrEv+B,KAAM,WACNi/B,eAAgB3J,GAChB6O,eA5BK,SAA8B7sC,GAIlC,IAJmC,MACpC0U,EAAK,MACLwF,EAAK,GACLtC,GACD5X,EACC,OAAK0U,GAGL0hC,GAAqB,CACnB1hC,QACAs5B,WAAY,WACZzV,MAAO3gB,EACPsC,UAEKxF,EAAM2+B,kBARJ,EASX,EAcEhwB,gBAAiBsxB,IAAqB,GACtCpM,eAAgB4N,GAEhBpJ,kBAAmBr4B,GAAS,IAAI2/B,KAAK3/B,KC5DvC,IAAI8hC,GAAwC,SAAUA,GAKpD,OAJAA,EAAuC,aAAI,eAC3CA,EAA0C,gBAAI,kBAC9CA,EAA2C,iBAAI,mBAC/CA,EAAwC,cAAI,gBACrCA,CACT,CAN4C,CAM1CA,IAA4B,CAAC,GAI3BC,GAAuC,SAAUA,GAMnD,OALAA,EAAsC,aAAI,eAC1CA,EAAuC,cAAI,gBAC3CA,EAAsC,aAAI,eAC1CA,EAAoC,WAAI,aACxCA,EAAyC,gBAAI,kBACtCA,CACT,CAP2C,CAOzCA,IAA2B,CAAC,GCpB1BC,GAA6B,SAAUA,GAGzC,OAFAA,EAAoB,KAAI,OACxBA,EAAmB,IAAI,MAChBA,CACT,CAJiC,CAI/BA,IAAiB,CAAC,GAChBC,GAA6B,SAAUA,GAGzC,OAFAA,EAAoB,KAAI,OACxBA,EAAoB,KAAI,OACjBA,CACT,CAJiC,CAI/BA,IAAiB,CAAC,GAChBC,GAA4B,SAAUA,GAGxC,OAFAA,EAAmB,KAAI,OACvBA,EAAmB,KAAI,OAChBA,CACT,CAJgC,CAI9BA,IAAgB,CAAC,GCdZ,SAASC,GAAqBpb,GACnC,MAAmD,kBAAjC,MAAVA,OAAiB,EAASA,EAAO/yB,KAC3C,CACO,SAASouC,GAAyBpiC,EAAOqiC,EAAcC,GAC5D,QAAqBhyC,IAAjB+xC,EACF,OAEF,MAAMnT,EAASmT,EAAathC,MAAK+qB,IAC/B,MAAMyW,EAAcD,EAAexW,GACnC,OAAOpB,OAAO6X,KAAiB7X,OAAO1qB,EAAM,IAE9C,OAAOsiC,EAAepT,EACxB,CACO,MCXDplC,GAAY,CAAC,KAAM,QAAS,iBAAkB,MAAO,QAAS,MAAO,UAAW,SAAU,WAAY,aAAc,WAAY,YAAa,WAAY,eAAgB,oBAAqB,QAAS,gBAAiB,cAAe,iBAAkB,kBAC7P04C,GAAa,CAAC,aAehB,SAASC,GAAyBt4C,GAChC,IAAIkhB,EAAsB8rB,EAAuB7rB,EACjD,MAAMta,GAAYgZ,EAAAA,EAAAA,MACZ,GACF9G,EACAlD,MAAOogC,EAAS,MAChB56B,EAAK,IACL3N,EAAG,OACHkvB,EAAM,SACN5E,EAAQ,MACRvtB,EAAK,cACLsyB,EAAa,YACbwb,EAAc1xC,EAAU2xC,WAAaX,GAAcY,KACnDC,eAAgBC,EAChBR,eAAgBS,GACd54C,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACT5zB,EAAMF,EAAAA,SACNk5B,EAAWl5B,EAAAA,UACVgwC,EAAM+E,GAAW/0C,EAAAA,SAAey0C,GAEjCjL,EAAqE,OAAnDN,IADiD,OAA/C9rB,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBmsB,aAAe,CAAC,GAC9DE,SAAkBP,EAC5E/oC,GAAyD,OAAhDkd,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBksB,aAAe,CAAC,GACnH,UACEyL,GACE70C,EACJ80C,GAAuBrzC,EAAAA,EAAAA,GAA8BzB,EAAMo0C,IAO7D,IANAr3B,EAAAA,EAAAA,IAAkB,KAEd,IAAIg4B,EADFhhB,IAEwC,OAAzCghB,EAAoBhc,EAASnrB,UAAoBmnC,EAAkB/zB,QACtE,GACC,CAAC+S,KACCggB,GAAqBpb,GACxB,OAAO,KAET,IAAIsb,EAUJ,GAREA,EAD6D,oBAAzC,MAAVtb,OAAiB,EAASA,EAAOsb,cAClB,MAAVtb,OAAiB,EAASA,EAAOsb,aAAa,CAC3Dn/B,KACArL,MACA2N,UAGuB,MAAVuhB,OAAiB,EAASA,EAAOsb,cAE7CA,EACH,OAAO,KAET,MAAMC,EAAiBS,GAAsBhc,EAAOub,eAC9CO,EAAiBC,GAAsB/b,EAAO8b,eAoCpD,OAAKR,GAAiBtb,GAGFr1B,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMgoC,YAAYhsC,EAAAA,EAAAA,GAAS,CAC5D2C,IAAKA,EACLg5B,SAAUA,EACVnnB,MAAOogC,EACPld,SA1CmBqE,UACnB,IAAK4a,GAAqBpb,KAAYsb,EACpC,OAEFW,GAAQ,GACR,MAEMI,EAAuBhB,GAFdtpB,EAAM0C,OAEwCxb,MAAOqiC,EAAcC,GAC9Epb,SACIA,EAAcpO,EAAOsqB,SAEvB3lC,EAAOzB,QAAQ6rB,iBAAiB,CACpC3kB,KACAsC,QACAxF,MAAOojC,GACNtqB,EAAM,EA4BTmlB,KAAMA,EACNoF,OAfiBvqB,KApFrB,SAAyBA,GACvB,QAASA,EAAMtjB,GACjB,EAmFQ8tC,CAAgBxqB,IAAwB,UAAdA,EAAMtjB,KAGpCwtC,GAAQ,EAAK,EAYbC,WAAWz3C,EAAAA,EAAAA,GAAS,CAClB+3C,QA7BgBC,CAAC1qB,EAAOqE,KAC1B,GAAInsB,EAAU2xC,WAAaX,GAAcyB,KAIzC,GAAe,kBAAXtmB,GAA8BiE,GAAYtI,EAAMtjB,KAAM,CACxD,MAAM+M,EAAS9E,EAAOzB,QAAQ4rB,cAAc1kB,EAAIsC,GAChD/H,EAAOzB,QAAQ+f,aAAa,gBAAgBvwB,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAQ,CAC/D4a,OAAQiE,GAAYtI,EAAMtjB,KAAOusC,GAAwB2B,cAAgB3B,GAAwB4B,eAErG,OAREX,GAAQ,EAQV,GAoBGC,GACHruC,MAAOA,EACP8iC,OAAQD,EACRvP,WAAW,GACVt4B,EAAOszC,EAAsB,CAC9Bl0C,SAAUqzC,EAAajgC,KAAIwhC,IACzB,IAAIxM,EACJ,MAAMp3B,EAAQsiC,EAAesB,GAC7B,OAAoBC,EAAAA,EAAAA,eAAe7yC,EAAUxB,MAAMooC,kBAAkBpsC,EAAAA,EAAAA,GAAS,CAAC,GAAqD,OAAhD4rC,EAAwBpmC,EAAUvB,gBAAqB,EAAS2nC,EAAsBQ,mBAAqB,CAAC,EAAG,CACjMF,OAAQD,EACRjiC,IAAKwK,EACLA,MAAOA,IACL6iC,EAAee,GAAa,OAvB3B,IA0BX,CAmFO,MCrND95C,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,iBAAkB,iBAAkB,cAAe,WAAY,QAAS,iBAAkB,cAAe,mBAUjLg6C,GAA4B11C,IAU5B,IATJyX,QAAQ,aACNw8B,EAAY,MACZ78B,GACD,gBACDu+B,EAAe,eACflB,EAAc,eACdP,EAAc,eACd7K,EAAc,sBACdE,GACDvpC,EAIC,OAHqD,oBAAjBi0C,EAA8B,CAAC,MAAOA,EAAa,CACrF78B,WACI,CAAC,MAAQ68B,GAAgB,KACHjgC,KAAI0pB,IAC9B,MAAM9rB,EAAQsiC,EAAexW,GACvB13B,EAAQyuC,EAAe/W,GAC7B,OAAoB+X,EAAAA,EAAAA,eAAeE,GAAiBv4C,EAAAA,EAAAA,GAAS,CAAC,EAAGmsC,EAAuB,CACtFD,OAAQD,EACRjiC,IAAKwK,EACLA,MAAOA,IACL5L,EAAM,GACV,EAEE4vC,IAAgCh6C,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAClDO,QAAS,OACTsB,WAAY,WACZuK,MAAO,OACP,WAAc,CACZ6gC,OAAQ,sBAGZ,SAASgN,GAA4B95C,GACnC,IAAIukB,EAAaw1B,EAAuB74B,EAAsB84B,EAAiBC,EAAkB94B,EAAuB8rB,EAAuBiN,EAC/I,MAAM,KACF71B,EAAI,WACJsb,EAAU,KACV91B,EAAI,OACJyJ,EAAM,gBACNssB,EACA8Y,eAAgBC,EAChBR,eAAgBS,EAAkB,YAClC/X,EAAW,SACXpb,EACAxb,MAAOa,EAAS,YAChB+0B,GACE7/B,EACJ+/B,GAASr6B,EAAAA,EAAAA,GAA8B1F,EAAOL,KACzCsgC,EAAkBC,GAAuBp8B,EAAAA,SAA6C,OAA7BygB,EAAcF,EAAKxO,OAAiB0O,EAAc,IAC5GxL,GAAKsnB,EAAAA,GAAAA,KACL6M,GAAU7M,EAAAA,GAAAA,KACVx5B,GAAYgZ,EAAAA,EAAAA,KACZytB,EAA8M,OAA5LyM,EAAwE,OAA/C74B,EAAuBra,EAAUvB,YAAkF,OAA3D4b,EAAuBA,EAAqBmsB,iBAAsB,EAASnsB,EAAqBqsB,SAAkBwM,EAC3N,IAAII,EAAiB,KACrB,GAAI91B,EAAKhJ,MAAO,CACd,MAAMK,EAASpI,EAAOzB,QAAQyrB,UAAUjZ,EAAKhJ,OACzC28B,GAAqBt8B,KACvBy+B,EAAiBz+B,EAErB,CACA,MAAMy8B,EAAiBS,IAA6D,OAArCoB,EAAkBG,QAA0B,EAASH,EAAgB7B,gBAC9GO,EAAiBC,IAA8D,OAAtCsB,EAAmBE,QAA0B,EAASF,EAAiBvB,gBAChH0B,EAAsBt2C,EAAAA,SAAc,KACxC,GAAKq2C,EAGL,MAA8C,oBAAhCA,EAAejC,aAA8BiC,EAAejC,aAAa,CACrF78B,MAAO8+B,EAAe9+B,QACnB8+B,EAAejC,YAAY,GAC/B,CAACiC,IACE7Z,EAAiBx8B,EAAAA,aAAkB6qB,IACvC,IAAI9Y,EAAQ8Y,EAAM0C,OAAOxb,MAGzBA,EAAQoiC,GAAyBpiC,EAAOukC,EAAqBjC,GAC7DjY,EAAoBK,OAAO1qB,IAC3B8pB,GAAWt+B,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CAC5BxO,UACC,GACF,CAACukC,EAAqBjC,EAAgBxY,EAAYtb,IAmBrD,GAlBAvgB,EAAAA,WAAgB,KACd,IAAIu2C,EACJ,IAAIlZ,EACJ,QAA4Bh7B,IAAxBi0C,GAGF,GADAjZ,EAAY8W,GAAyB5zB,EAAKxO,MAAOukC,EAAqBjC,GAClEhX,IAAc9c,EAAKxO,MAIrB,YAHA8pB,GAAWt+B,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CAC5BxO,MAAOsrB,UAKXA,EAAY9c,EAAKxO,MAEnBsrB,EAAwC,OAA3BkZ,EAAalZ,GAAqBkZ,EAAa,GAC5Dna,EAAoBK,OAAOY,GAAW,GACrC,CAAC9c,EAAM+1B,EAAqBza,EAAYwY,KACtCH,GAAqBmC,GACxB,OAAO,KAET,IAAKnC,GAAqBmC,GACxB,OAAO,KAET,MAAMlwC,EAAqB,MAAba,EAAoBA,EAAYwI,EAAOzB,QAAQ6kB,cAAc,yBAC3E,OAAoBpvB,EAAAA,GAAAA,MAAMuyC,GAA+B,CACvDh1C,SAAU,EAAcyC,EAAAA,GAAAA,MAAMT,EAAUxB,MAAMqoC,gBAAiB,CAC7D7oC,SAAU,EAAc0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMsoC,gBAAgBtsC,EAAAA,EAAAA,GAAS,CAAC,EAAoD,OAAhD8f,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBwsB,eAAgB,CAC/K50B,GAAIm0B,EACJN,QAAS7zB,EACTgoB,QAAQ,EACRrgC,QAAS,WACTmE,SAAUoF,MACM1C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMgoC,YAAYhsC,EAAAA,EAAAA,GAAS,CAC1D0X,GAAIA,EACJ9O,MAAOA,EACPijC,QAASA,EACTr3B,MAAOoqB,EACPlH,SAAUuH,EACV5/B,QAAS,WACTmJ,KAAMA,GAAQ,OACdF,WAAY,CACV8b,WACAzhB,IAAK47B,EACLiB,YAA4B,MAAfA,EAAsBA,EAAcvtB,EAAOzB,QAAQ6kB,cAAc,gCAEhF6W,OAAQD,GACPvN,EAAyD,OAAhDkN,EAAwBpmC,EAAUvB,gBAAqB,EAAS2nC,EAAsBI,WAAY,CAC5GxoC,SAAU80C,GAA0B,CAClCj+B,OAAQy+B,EACRP,gBAAiB/yC,EAAUxB,MAAMooC,iBACjCiL,iBACAP,iBACA7K,iBACAE,sBAAwE,OAAhD0M,EAAwBrzC,EAAUvB,gBAAqB,EAAS40C,EAAsBzM,yBAGhH5N,IAER,C,gBCrJA,MAAMlgC,GAAY,CAAC,OAAQ,aAAc,OAAQ,SAAU,kBAAmB,QAAS,QAAS,aAAc,OAAQ,UAAW,iBAAkB,kBAQ7I8b,IAAS6+B,EAAAA,GAAAA,KACf,SAASC,GAAoCv6C,GAC3C,IAAIg6C,EAAiBC,EACrB,MAAM,KACF51B,EAAI,WACJsb,EAAU,OACVrsB,EAAM,gBACNssB,EAAe,MACf3+B,EAAK,MACLwJ,EAAK,WACLw2B,EAAU,KACVh5B,EAAI,QACJvH,EAAU,WACVg4C,eAAgBC,EAChBR,eAAgBS,GACd54C,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCuhC,EAAiB,CACrBjgC,QACAwJ,QACAw2B,aACAh5B,OACAvH,WAEIqY,GAAKsnB,EAAAA,GAAAA,KACLx5B,GAAYgZ,EAAAA,EAAAA,KAClB,IAAIs6B,EAAiB,KACrB,GAAI91B,EAAKhJ,MAAO,CACd,MAAMK,EAASpI,EAAOzB,QAAQyrB,UAAUjZ,EAAKhJ,OACzC28B,GAAqBt8B,KACvBy+B,EAAiBz+B,EAErB,CACA,MAAMy8B,EAAiBS,IAA6D,OAArCoB,EAAkBG,QAA0B,EAASH,EAAgB7B,gBAC9GO,EAAiBC,IAA8D,OAAtCsB,EAAmBE,QAA0B,EAASF,EAAiBvB,gBAChH8B,EAAuB12C,EAAAA,aAAkB,CAAC69B,EAAQ9rB,IAAUsiC,EAAexW,KAAYwW,EAAetiC,IAAQ,CAACsiC,IAC/GsC,EAAuB32C,EAAAA,SAAc,KACzC,IAAI42C,EACJ,OAA6C,OAAtCA,EAAmBP,IAA2BO,EAAiBxC,aAG3B,oBAAhCiC,EAAejC,aACjBiC,EAAejC,aAAa,CACjC78B,MAAO8+B,EAAe9+B,QAGnB8+B,EAAejC,aAPb,EAOyB,GACjC,CAACiC,IACEQ,EAAgC72C,EAAAA,SAAc,IACnB,MAAxB22C,OAA+B,EAASA,EAAqBxiC,IAAIkgC,IACvE,CAACsC,EAAsBtC,IAIpByC,EAAiB92C,EAAAA,SAAc,KACnC,IAAK0O,MAAMC,QAAQ4R,EAAKxO,OACtB,MAAO,GAET,QAA6B1P,IAAzBs0C,EAAoC,CAKtC,OAJyBp2B,EAAKxO,MAAMoC,KAAIkgB,GAEE,MAAjCwiB,OAAwC,EAASA,EAA8BvkC,WAAUykC,GAAmBA,IAAoB1iB,MAEjH1c,QAAO8G,GAASA,GAAS,IAAGtK,KAAIsK,GAASk4B,EAAqBl4B,IACxF,CACA,OAAO8B,EAAKxO,KAAK,GAChB,CAACwO,EAAKxO,MAAO4kC,EAAsBE,IACtC72C,EAAAA,WAAgB,KACT0O,MAAMC,QAAQ4R,EAAKxO,QAAU+kC,EAAevoC,SAAWgS,EAAKxO,MAAMxD,QAErEstB,GAAWt+B,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CAC5BxO,MAAO+kC,EAAe3iC,IAAIkgC,KAE9B,GACC,CAAC9zB,EAAMu2B,EAAgBjb,EAAYwY,IACtC,MAAMhb,EAAer5B,EAAAA,aAAkB,CAAC6qB,EAAO9Y,KAC7C8pB,GAAWt+B,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CAC5BxO,MAAOA,EAAMoC,IAAIkgC,KAChB,GACF,CAACxY,EAAYtb,EAAM8zB,IACtB,OAAoB5wC,EAAAA,GAAAA,KAAK65B,GAAAA,GAAc//B,EAAAA,EAAAA,GAAS,CAC9CggC,UAAU,EACVhT,QAASosB,EACTD,qBAAsBA,EACtBjZ,cAAe9lB,GACf1C,GAAIA,EACJlD,MAAO+kC,EACP7hB,SAAUoE,EACVub,eAAgBA,EAChBjX,WAAYA,CAAC5rB,EAAO6rB,IAAgB7rB,EAAMoC,KAAI,CAAC0pB,EAAQpf,KAAuBhb,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMu8B,UAAUvgC,EAAAA,EAAAA,GAAS,CACpHX,QAAS,WACTuH,KAAM,QACNgC,MAAOyuC,EAAe/W,IACrBD,EAAY,CACbnf,cAEFsf,YAAazpB,IACX,IAAI8I,EACJ,OAAoB3Z,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMu7B,eAAev/B,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAQ,CAC3EnO,MAAOqJ,EAAOzB,QAAQ6kB,cAAc,yBACpCmK,YAAavtB,EAAOzB,QAAQ6kB,cAAc,+BAC1CoK,iBAAiBz/B,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAO0oB,gBAAiB,CACpDC,QAAQ,IAEV/D,SAAU4C,EACV/1B,KAAM,gBACLq3B,EAAgE,OAA/ChgB,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB0f,eAAe,GAExHn7B,GACL,CCnHA,MAAMq1C,GAAmBjlC,GACV,MAATA,GAAkB+S,GAAS/S,GAGxBA,EAAMA,MAFJA,ECSEklC,IAA6B15C,EAAAA,EAAAA,GAAS,CAAC,EAAG+mC,GAAqB,CAC1Ev+B,KAAM,eACN6uC,eAL4B7iC,GACrB+S,GAAS/S,GAASA,EAAM5L,MAAQs2B,OAAO1qB,GAK9CsiC,eAT4BtiC,GACrB+S,GAAS/S,GAASA,EAAMA,MAAQA,EASvCm4B,cAAAA,CAAe51B,GACb,MAAM,GACJW,EAAE,MACFsC,EAAK,MACLxF,EAAK,IACLoc,GACE7Z,EACEwkB,EAASxkB,EAAO6Z,IAAIqL,UAAUjiB,GACpC,IAAK28B,GAAqBpb,GACxB,MAAO,GAET,IAAIsb,EAUJ,GAREA,EADiC,oBAAxBtb,EAAOsb,aACDtb,EAAOsb,aAAa,CACjCn/B,KACArL,IAAKqL,EAAKkZ,EAAI8J,OAAOhjB,GAAM,KAC3BsC,UAGauhB,EAAOsb,aAEX,MAATriC,EACF,MAAO,GAET,IAAKqiC,EACH,OAAOriC,EAET,GAvC2B,kBAuCLqiC,EAvCF,GAwClB,OAAOtb,EAAO8b,eAAe7iC,GAE/B,MAAM4jC,EAAcvB,EAAathC,MAAK+qB,GAAU/E,EAAOub,eAAexW,KAAY9rB,IAClF,OAAO4jC,EAAc7c,EAAO8b,eAAee,GAAe,EAC5D,EACA/P,eJmKwCtxB,IAAuB7Q,EAAAA,GAAAA,KAAK+wC,IAA0Bj3C,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,IIlK3GoM,gBD3CgD0d,GAAuB,CAAC,CACxErsB,MAAO,KACPysB,mBAAoBvd,GACM,MAApBA,EAAWlP,OAAsC,KAArBkP,EAAWlP,MAClC,KAEFA,GAASilC,GAAiBjlC,KAAWilC,GAAiB/1B,EAAWlP,OAE1E8O,eAAgBm1B,IACf,CACDjkC,MAAO,MACPysB,mBAAoBvd,GACM,MAApBA,EAAWlP,OAAsC,KAArBkP,EAAWlP,MAClC,KAEFA,GAASilC,GAAiBjlC,KAAWilC,GAAiB/1B,EAAWlP,OAE1E8O,eAAgBm1B,IACf,CACDjkC,MAAO,UACPysB,mBAAoBvd,IAClB,IAAKvS,MAAMC,QAAQsS,EAAWlP,QAAsC,IAA5BkP,EAAWlP,MAAMxD,OACvD,OAAO,KAET,MAAM2oC,EAAmBj2B,EAAWlP,MAAMoC,IAAI6iC,IAC9C,OAAOjlC,GAASmlC,EAAiBjM,SAAS+L,GAAiBjlC,GAAO,EAEpE8O,eAAgB41B,MCkBhBrM,kBAAmBA,CAACr4B,EAAOuC,KACzB,MAAMwkB,EAASxkB,EAAOwkB,OAChBqe,EAAqBre,EAAOsb,aAC5BA,EAA6C,oBAAvB+C,EAAoCA,EAAmB,CACjF5/B,MAAOuhB,EAAOvhB,QACX4/B,GAAsB,GACrB9C,EAAiBvb,EAAOub,eAO9B,GANoBD,EAAathC,MAAK+qB,GAChCwW,EAAexW,KAAY9rB,IAM/B,OAAOA,CAGO,I,2ECtEpB,MAAMlW,GAAY,CAAC,OAAQ,SAAU,UAAW,WAAY,WAAY,YAAa,YAc/E2G,GAAoB9F,IACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,SAEoB0L,EAAyBxF,EAAQ,EAE1D80C,IAAer7C,EAAAA,EAAAA,IAAOs7C,GAAAA,EAAQ,CAClCr7C,KAAM,cACNN,KAAM,OACNO,kBAAmBA,CAACqT,EAAGnT,IAAWA,EAAOm7C,MAHtBv7C,EAIlBoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,MAAM,CACLzB,OAAQpB,EAAMoB,OAAO64C,MACrB,CAAC,MAAD16C,OAAOkL,EAAY4B,WAAa,CAC9B4B,QAAS,GAEZ,IACK5L,GAAkB,CACtB,eAAgB,WAChB,aAAc,aAEhB,SAAS63C,GAASt7C,GAChB,IAAIkhB,EACJ,MAAM,KACF4yB,EAAI,OACJziB,EAAM,QACN+nB,EAAO,SACPv0C,EAAQ,SACR1E,EAAQ,UACRsE,EAAS,SACT82C,GACEv7C,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZzZ,EAAUE,GAAkBO,GAC5B20C,EAAgB13C,EAAAA,OAAa,OACnCkd,EAAAA,EAAAA,IAAkB,KAId,IAAIy6B,EAAuBC,EAHzB5H,EACF0H,EAAc3pC,QAAUu/B,SAASuK,yBAAyBC,YAAcxK,SAASuK,cAAgB,MAG9C,OAAlDF,EAAwBD,EAAc3pC,UAA8E,OAAzD6pC,EAAyBD,EAAsBx2B,QAAkBy2B,EAAuBxxB,KAAKuxB,GACzJD,EAAc3pC,QAAU,KAC1B,GACC,CAACiiC,IACJhwC,EAAAA,WAAgB,KAEd,MAAMqqB,EAAY2lB,EAAO,WAAa,YACtCxgC,EAAOzB,QAAQ+f,aAAazD,EAAW,CACrCkD,UACA,GACD,CAAC/d,EAAQwgC,EAAMziB,IAClB,MAQMwqB,EAAkBltB,IAClBA,EAAM0C,SAAWA,IAAW1C,EAAM0C,QAAoB,MAAVA,GAAkBA,EAAOyqB,SAASntB,EAAM0C,UAGxF+nB,EAAQzqB,EAAM,EAEhB,OAAoBpnB,EAAAA,GAAAA,KAAK2zC,IAAc75C,EAAAA,EAAAA,GAAS,CAC9C8F,GAAIN,EAAUxB,MAAM02C,WACpBt3C,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW2B,EAAQlG,MACnCM,WAAYqG,EACZitC,KAAMA,EACNkI,SAAU3qB,EACV5uB,YAAY,EACZw5C,UAAW97C,GACVsF,EAAuD,OAA/Cyb,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB66B,WAAY,CACzGl3C,SAAUV,IAAA,IAAC,gBACT+3C,EAAe,UACfD,GACD93C,EAAA,OAAkBoD,EAAAA,GAAAA,KAAK40C,GAAAA,EAAmB,CACzCC,YAAaP,EACbQ,WAAY,cACZx3C,UAAuB0C,EAAAA,GAAAA,KAAK+0C,GAAAA,GAAMj7C,EAAAA,EAAAA,GAAS,CAAC,EAAG66C,EAAiB,CAC9D5K,MAAO,CACL7tC,gBAAiBA,GAAgBw4C,IAEnCV,UAjCegB,EAiC2B,MAAnBL,OAA0B,EAASA,EAAgBX,SAjCzC3P,IACjC2Q,GACFA,IAEEhB,GACFA,EAAS3P,EACX,GA4BI/mC,UAAuB0C,EAAAA,GAAAA,KAAKi1C,GAAAA,EAAO,CACjC33C,SAAUA,SAnCG03C,KAsCjB,IAEN,CC/GA,MAAM58C,GAAY,CAAC,MAAO,SAAU,KAAM,WAAY,aAAc,QAAS,QAAS,iBAAkB,MAAO,UAAW,WAAY,WAAY,WAAY,mBAa9J,SAAS88C,GAAgBz8C,GACvB,IAAIkhB,EACJ,MAAM,OACF0b,EAAM,GACN7jB,EAAE,SACFif,EAAQ,SACRvS,EAAQ,SACRtlB,EAAW,aAAY,gBACvBy/B,GACE5/B,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,KACxC+8C,EAAoBC,GAAyB74C,EAAAA,UAAgB,IAC7DgwC,EAAM+E,GAAW/0C,EAAAA,UAAe,GACjCwP,EAASskB,KACT1R,EAAUpiB,EAAAA,OAAa,MACvB84C,EAAY94C,EAAAA,OAAa,MACzB+4C,EAAoB/4C,EAAAA,QAAa,GACjCg5C,EAAkBh5C,EAAAA,OAAa,CAAC,GAChC1C,GAAQ27C,EAAAA,GAAAA,KACRC,GAAS3c,EAAAA,GAAAA,KACT4c,GAAW5c,EAAAA,GAAAA,KACXx5B,GAAYgZ,EAAAA,EAAAA,KAClB,IAvBiB+c,IAAuC,oBAAtBA,EAAOsgB,WAuBpCC,CAAWvgB,GACd,MAAM,IAAInoB,MAAM,+DAElB,MAAM4Z,EAAUuO,EAAOsgB,WAAW5pC,EAAOzB,QAAQmqB,aAAajjB,IACxDqkC,EAAc/uB,EAAQ5S,QAAOkmB,IAAWA,EAAO3hC,MAAMq9C,aACrDC,EAAcjvB,EAAQ5S,QAAOkmB,GAAUA,EAAO3hC,MAAMq9C,aACpDE,EAAkBH,EAAY/qC,QAAUirC,EAAYjrC,OAAS,EAAI,GACvEvO,EAAAA,iBAAsB,KACfk0B,GACHllB,OAAOoD,QAAQ4mC,EAAgBjrC,SAASzG,SAAQnH,IAAkB,IAAhBse,EAAOve,GAAIC,EACpD,MAAPD,GAAeA,EAAIy0B,KAAK,CAAC,GAAG,YACnBqkB,EAAgBjrC,QAAQ0Q,EAAM,GACrC,GAEN,GACC,CAACyV,IACJl0B,EAAAA,WAAgB,KACd,GAAI44C,EAAqB,IAAMx2B,EAAQrU,QACrC,OAEF,GAAI6qC,GAAsBx2B,EAAQrU,QAAQhN,SAASwN,OACjD,OAEY6T,EAAQrU,QAAQhN,SAAS63C,GACjCz3B,MAAM,CACVuT,eAAe,GACf,GACD,CAACkkB,IACJ54C,EAAAA,WAAgB,KACTk0B,IACH2kB,GAAuB,GACvBE,EAAkBhrC,SAAU,EAC9B,GACC,CAACmmB,IACJl0B,EAAAA,oBAA0B87B,GAAiB,KAAM,CAC/C3a,KAAAA,GAEE,IAAK43B,EAAkBhrC,QAAS,CAE9B,MAAM2rC,EAAuBnvB,EAAQjY,WAAUqnC,IAAMA,EAAEz9C,MAAM6I,WAC7D8zC,EAAsBa,EACxB,CACF,KACE,CAACnvB,IACLvqB,EAAAA,WAAgB,KACV44C,GAAsBa,GACxBZ,EAAsBY,EAAkB,EAC1C,GACC,CAACb,EAAoBa,IACxB,MAKMG,EAAWA,KACf7E,GAAQ,EAAM,EAEV8E,EAAuBp7B,GAASq7B,IACpCd,EAAgBjrC,QAAQ0Q,GAASq7B,CAAQ,EAErCC,EAAoBA,CAACt7B,EAAOu7B,IAAYnvB,IAC5CguB,EAAsBp6B,GACtBs6B,EAAkBhrC,SAAU,EACxBisC,GACFA,EAAQnvB,EACV,EA2CF,OAAoBrnB,EAAAA,GAAAA,MAAM,OAAOjG,EAAAA,EAAAA,GAAS,CACxC2e,KAAM,OACNhc,IAAKkiB,EACLT,UAAW,EACXhhB,UAAWoH,EAAYmF,YACvBgoB,UA9CwBrK,IACxB,GAAI4uB,GAAmB,EACrB,OAEF,MAAMQ,EAAcA,CAACx7B,EAAOy7B,KAC1B,IAAIC,EACJ,GAAI17B,EAAQ,GAAKA,EAAQ8L,EAAQhc,OAC/B,OAAOkQ,EAIT,MACM27B,GAA0B,SAAdF,GAAwB,EAAI,IADX,QAApB58C,EAAM48C,WAAuB,EAAI,GAIhD,OAAiD,OAAzCC,EAAW5vB,EAAQ9L,EAAQ27B,KAAsBD,EAASj+C,MAAM6I,SAAWk1C,EAAYx7B,EAAQ27B,EAAUF,GAAaz7B,EAAQ27B,CAAQ,EAEhJ,IAAIC,EAAWzB,EACG,eAAd/tB,EAAMtjB,IACR8yC,EAAWJ,EAAYrB,EAAoB,SACpB,cAAd/tB,EAAMtjB,MACf8yC,EAAWJ,EAAYrB,EAAoB,SAEzCyB,EAAW,GAAKA,GAAYZ,GAI5BY,IAAazB,IACf/tB,EAAMyvB,iBACNzvB,EAAMgK,kBACNgkB,EAAsBwB,GACxB,GAgBC14C,EAAO,CACRZ,SAAU,CAACu4C,EAAYnlC,KAAI,CAAComC,EAAQ97B,IAAuBze,EAAAA,aAAmBu6C,EAAQ,CACpFhzC,IAAKkX,EACL0W,eAAgB0kB,EAAqBp7B,GACrCu7B,QAASD,EAAkBt7B,EAAO87B,EAAOr+C,MAAM89C,SAC/Cr4B,SAAUi3B,IAAuBn6B,EAAQkD,GAAY,MAClD63B,EAAYjrC,OAAS,GAAK4qC,IAAyB11C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMi5C,gBAAgBj9C,EAAAA,EAAAA,GAAS,CACpG2C,IAAK44C,EACL7jC,GAAIkkC,EACJ,aAAc3pC,EAAOzB,QAAQ6kB,cAAc,mBAC3C,gBAAiB,OACjB,gBAAiBod,EACjB,gBAAiBA,EAAOkJ,OAAS72C,EACjC6Z,KAAM,WACN/X,KAAM,QACN61C,QAhFaS,KACf1F,GAAQ,GACR8D,EAAsBY,EAAkB,GACxCV,EAAkBhrC,SAAU,CAAI,EA8E9BonB,eAAgB0kB,EAAqBV,GACrCx3B,SAAUi3B,IAAuBU,EAAY/qC,OAASoT,GAAY,GACjB,OAA/CvE,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBo9B,eAAgB,CACtGz5C,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMm5C,gBAAiB,CAC3Dx8C,SAAU,aAETs7C,EAAYjrC,OAAS,IAAkB9K,EAAAA,GAAAA,KAAK+zC,GAAU,CACzDxH,KAAMA,EACNziB,OAAQurB,EAAU/qC,QAClB1R,SAAUA,EACVi5C,QAASsE,EACTI,QAASJ,EACT74C,UAAuB0C,EAAAA,GAAAA,KAAKk3C,GAAAA,EAAU,CACpC1lC,GAAIikC,EACJv4C,UAAWoH,EAAY4B,SACvBurB,UA7CoBrK,IACN,QAAdA,EAAMtjB,KACRsjB,EAAMyvB,iBAEJ,CAAC,MAAO,QAAS,UAAUrP,SAASpgB,EAAMtjB,MAC5CqyC,GACF,EAwCI,kBAAmBT,EACnBv8C,QAAS,OACTg+C,eAAe,EACf75C,SAAUy4C,EAAYrlC,KAAI,CAAComC,EAAQ97B,IAAuBze,EAAAA,aAAmBu6C,EAAQ,CACnFhzC,IAAKkX,aAKf,CAiEO,MC9PMo8B,GAA2B,UAC3BC,IAAuBv9C,EAAAA,EAAAA,GAAS,CAAC,EAAG+mC,GAAqB,CACpEI,UAAU,EACVnsB,YAAY,EAEZusB,YAAY,EACZ38B,MAAO,IACPg9B,MAAO,SACP6E,YAAa,SACb+C,WAAY,GACZtC,mBAAmB,EACnBE,eAAe,EACfV,WDkP+B31B,IAAuB7Q,EAAAA,GAAAA,KAAKk1C,IAAiBp7C,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,ICjPzFiuB,2BAAuBlgC,EACvBmgC,6BAAyBngC,ICXd04C,GAA4B,cCA5BC,GAA+B,CAAC,WAAY,WAAY,QAAS,QAuGvE,MAAMC,GAAsBA,CAACC,EAAUC,KAC5C,MAAMC,EAAgB,CAAC,EACvB,IAAIC,EAAiB,EACjBC,EAA2B,EAC/B,MAAMC,EAAc,GAIpBL,EAAShkC,cAAc5P,SAAQk0C,IAC7B,MAAMC,GAAYl+C,EAAAA,EAAAA,GAAS,CAAC,EAAG29C,EAAS9jC,OAAOokC,IAC/C,IAAoD,IAAhDN,EAASzjC,sBAAsB+jC,GACjCC,EAAUvjC,cAAgB,MACrB,CACL,IAAIA,EACAujC,EAAUvwC,MAAQuwC,EAAUvwC,KAAO,GACrCmwC,GAAkBI,EAAUvwC,KAC5BgN,EAAgB,EAChBqjC,EAAYhnC,KAAKknC,IAEjBvjC,EAAgB+M,GAAMw2B,EAAUtzC,OAASm8B,GAAoBn8B,MAAOszC,EAAUr9C,UAAYkmC,GAAoBlmC,SAAUq9C,EAAUlX,UAAYD,GAAoBC,UAEpK+W,GAA4BpjC,EAC5BujC,EAAUvjC,cAAgBA,CAC5B,CACAkjC,EAAcI,GAAeC,CAAS,IAExC,MAAMC,EAAmBv2B,KAAKhkB,IAAIg6C,EAAqBG,EAA0B,GAGjF,GAAID,EAAiB,GAAKF,EAAqB,EAAG,CAChD,MAAMQ,EA/HH,SAAgCx7C,GAIpC,IAJqC,iBACtCu7C,EAAgB,eAChBL,EAAc,YACdE,GACDp7C,EACC,MAAMy7C,EAAoB,IAAIl2B,IAAI61B,EAAYpnC,KAAImE,GAAOA,EAAIf,SACvDskC,EAAoB,CACxBC,IAAK,CAAC,EACNC,aAAc,GACdC,OAAQzkC,IACN,MAAMxF,EAAQ8pC,EAAkBC,IAAIvkC,GAChCxF,IAA0B,IAAjBA,EAAMkqC,SACjBJ,EAAkBC,IAAIvkC,GAAO0kC,QAAS,EACtCJ,EAAkBE,aAAaxnC,KAAKgD,GACtC,GA0EJ,OArEA,SAAS2kC,IAEP,GAAIL,EAAkBE,aAAaxtC,SAAWqtC,EAAkBz3C,KAC9D,OAEF,MAAMg4C,EAAmB,CACvBj3B,IAAK,CAAC,EACN/jB,IAAK,CAAC,GAER,IAAIi7C,EAAqBV,EACrBW,EAAYhB,EACZiB,EAAiB,EAGrBT,EAAkBE,aAAaz0C,SAAQiQ,IACrC6kC,GAAsBP,EAAkBC,IAAIvkC,GAAOW,cACnDmkC,GAAaR,EAAkBC,IAAIvkC,GAAOrM,IAAI,IAEhD,IAAK,IAAIwG,EAAI,EAAGA,EAAI6pC,EAAYhtC,OAAQmD,GAAK,EAAG,CAC9C,MAAMkG,EAAS2jC,EAAY7pC,GAC3B,GAAImqC,EAAkBC,IAAIlkC,EAAOL,SAAyD,IAA/CskC,EAAkBC,IAAIlkC,EAAOL,OAAO0kC,OAC7E,SAKF,IAAI/jC,EADqBkkC,EAAqBC,EACPzkC,EAAO1M,KAG1CgN,EAAgBN,EAAOxZ,UACzBk+C,GAAkB1kC,EAAOxZ,SAAW8Z,EACpCA,EAAgBN,EAAOxZ,SACvB+9C,EAAiBj3B,IAAItN,EAAOL,QAAS,GAC5BW,EAAgBN,EAAO2sB,WAChC+X,GAAkB1kC,EAAO2sB,SAAWrsB,EACpCA,EAAgBN,EAAO2sB,SACvB4X,EAAiBh7C,IAAIyW,EAAOL,QAAS,GAEvCskC,EAAkBC,IAAIlkC,EAAOL,OAAS,CACpC0kC,QAAQ,EACR/jC,gBACAhN,KAAM0M,EAAO1M,KAEjB,CAGIoxC,EAAiB,EAEnBttC,OAAOkX,KAAKi2B,EAAiBh7C,KAAKmG,SAAQiQ,IACxCskC,EAAkBG,OAAOzkC,EAAM,IAExB+kC,EAAiB,EAE1BttC,OAAOkX,KAAKi2B,EAAiBj3B,KAAK5d,SAAQiQ,IACxCskC,EAAkBG,OAAOzkC,EAAM,IAIjCgkC,EAAYj0C,SAAQjH,IAEd,IAFe,MACnBkX,GACDlX,EACCw7C,EAAkBG,OAAOzkC,EAAM,IAKnC2kC,GACF,CACAA,GACOL,EAAkBC,GAC3B,CAsCiCS,CAAwB,CACnDb,mBACAL,iBACAE,gBAEFvsC,OAAOkX,KAAKy1B,GAAsBr0C,SAAQiQ,IACxC6jC,EAAc7jC,GAAOW,cAAgByjC,EAAqBpkC,GAAOW,aAAa,GAElF,CACA,OAAO3a,EAAAA,EAAAA,GAAS,CAAC,EAAG29C,EAAU,CAC5B9jC,OAAQgkC,GACR,EAgDJ,SAASoB,GAAqBC,EAAa12C,GACzC,IAAI+yB,EAAS2jB,EAAY1B,IAIzB,OAHIh1C,GAAQ02C,EAAY12C,KACtB+yB,EAAS2jB,EAAY12C,IAEhB+yB,CACT,CACO,MAAM4jB,GAAqBC,IAO5B,IAP6B,OACjCntC,EAAM,gBACNotC,EAAe,aACfC,EAAY,YACZJ,EAAW,sBACXhlC,EAAwBD,GAAkChI,GAAO,wBACjEstC,GAA0B,GAC3BH,EACC,IAAII,EAAuBC,EAAwBC,EACnD,MAAMC,GAA4B1tC,EAAOzB,QAAQ6B,MAAMmH,QACvD,IAAIE,EACJ,GAAIimC,EACFjmC,EAAe,CACbC,cAAe,GACfE,OAAQ,CAAC,EACTK,6BAEG,CACL,MAAM0lC,EAAermC,EAAyBtH,EAAOzB,QAAQ6B,OAC7DqH,EAAe,CACbC,cAAe4lC,EAA0B,GAAK,IAAIK,EAAajmC,eAC/DE,QAAQ7Z,EAAAA,EAAAA,GAAS,CAAC,EAAG4/C,EAAa/lC,QAElCK,wBAEJ,CACA,IAAI2lC,EAAgB,CAAC,EACjBN,IAA4BI,IAC9BE,EAAgBpuC,OAAOkX,KAAKjP,EAAaG,QAAQqB,QAAO,CAACC,EAAKnR,KAAQhK,EAAAA,EAAAA,GAAS,CAAC,EAAGmb,EAAK,CACtF,CAACnR,IAAM,KACL,CAAC,IAEP,MAAM81C,EAAwB,CAAC,EAC/BT,EAAgBt1C,SAAQm0C,IACtB,MAAM,MACJlkC,GACEkkC,EACJ4B,EAAsB9lC,IAAS,EAC/B6lC,EAAc7lC,IAAS,EACvB,IAAI+lC,EAAgBrmC,EAAaG,OAAOG,GACnB,MAAjB+lC,GACFA,GAAgB//C,EAAAA,EAAAA,GAAS,CAAC,EAAGi/C,GAAqBC,EAAahB,EAAU11C,MAAO,CAC9EwR,QACAgmC,gBAAgB,IAElBtmC,EAAaC,cAAc3C,KAAKgD,IACvBulC,GACT7lC,EAAaC,cAAc3C,KAAKgD,GAI9B+lC,GAAiBA,EAAcv3C,OAAS01C,EAAU11C,OACpDu3C,GAAgB//C,EAAAA,EAAAA,GAAS,CAAC,EAAGi/C,GAAqBC,EAAahB,EAAU11C,MAAO,CAC9EwR,WAGJ,IAAIgmC,EAAiBD,EAAcC,eACnCvC,GAA6B1zC,SAAQC,SACZlF,IAAnBo5C,EAAUl0C,KACZg2C,GAAiB,GACO,IAApB9B,EAAUl0C,KACZk0C,EAAUl0C,GAAOi9B,KAErB,IAEFvtB,EAAaG,OAAOG,IAASha,EAAAA,EAAAA,GAAS,CAAC,EAAG+/C,EAAe7B,EAAW,CAClE8B,kBACA,IAEAT,IAA4BI,GAC9BluC,OAAOkX,KAAKjP,EAAaG,QAAQ9P,SAAQiQ,IAClC6lC,EAAc7lC,WACVN,EAAaG,OAAOG,EAC7B,IAGJ,MACMimC,EA7HyBC,EAACxmC,EAAc4lC,KAC9C,IAAKA,EACH,OAAO5lC,EAET,MAAM,cACJC,EAAgB,GAAE,WAClBwmC,EAAa,CAAC,GACZb,EACEc,EAA+B3uC,OAAOkX,KAAKw3B,GACjD,GAA4C,IAAxCC,EAA6BpvC,QAAyC,IAAzB2I,EAAc3I,OAC7D,OAAO0I,EAET,MAAM2mC,EAAsB,CAAC,EACvBC,EAAqB,GAC3B,IAAK,IAAInsC,EAAI,EAAGA,EAAIwF,EAAc3I,OAAQmD,GAAK,EAAG,CAChD,MAAM6F,EAAQL,EAAcxF,GAGxBuF,EAAaG,OAAOG,KACtBqmC,EAAoBrmC,IAAS,EAC7BsmC,EAAmBtpC,KAAKgD,GAE5B,CACA,MAAMumC,EAAiD,IAA9BD,EAAmBtvC,OAAe0I,EAAaC,cAAgB,IAAI2mC,KAAuB5mC,EAAaC,cAAcS,QAAOJ,IAAUqmC,EAAoBrmC,MAC7KwmC,GAAkBxgD,EAAAA,EAAAA,GAAS,CAAC,EAAG0Z,EAAaG,QAClD,IAAK,IAAI1F,EAAI,EAAGA,EAAIisC,EAA6BpvC,OAAQmD,GAAK,EAAG,CAC/D,MAAM6F,EAAQomC,EAA6BjsC,GACrCssC,GAAYzgD,EAAAA,EAAAA,GAAS,CAAC,EAAGwgD,EAAgBxmC,GAAQ,CACrDgmC,gBAAgB,IAElBvuC,OAAOoD,QAAQsrC,EAAWnmC,IAAQjQ,SAAQjK,IAAkB,IAAhBkK,EAAKwK,GAAM1U,EACrD2gD,EAAUz2C,IAAkB,IAAXwK,EAAeyyB,IAAWzyB,CAAK,IAElDgsC,EAAgBxmC,GAASymC,CAC3B,CAKA,OAJwBzgD,EAAAA,EAAAA,GAAS,CAAC,EAAG0Z,EAAc,CACjDC,cAAe4mC,EACf1mC,OAAQ2mC,GAEY,EAsFkBN,CADFjuC,EAAOzB,QAAQqjB,6BAA6B,iBAAkBna,GACX4lC,GACzF,OAAO5B,GAAoBuC,EAAmS,OAAjQT,EAA2G,OAAlFC,GAA0BC,EAAkBztC,EAAOzB,SAASoW,oBAAyG,OAA1E64B,EAAyBA,EAAuB52B,KAAK62B,SAA4B,EAASD,EAAuBiB,kBAAkB91C,OAAiB40C,EAAwB,EAAE,EAEpVmB,GAAoBjnC,GAAgBrH,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CAC5EmH,QAASE,IAEJ,SAASknC,GAAgCC,GAM7C,IAN8C,oBAC/CC,EAAmB,OACnB7uC,EAAM,iBACN8uC,EAAgB,gBAChBC,EAAe,YACfC,GACDJ,EACKK,EAAgCJ,EACpC,IAAK,IAAI3sC,EAAI4sC,EAAkB5sC,EAAI6sC,EAAiB7sC,GAAK,EAAG,CAE1D,GADY8sC,EAAY9sC,GACf,CACP,MAAMkkB,EAAQ4oB,EAAY9sC,GAAGuD,GACvBypC,EAAkBlvC,EAAOzB,QAAQ4wC,4BAA4B/oB,EAAOyoB,GACtEK,GAAmBA,EAAgBE,mBACrCH,EAAgCC,EAAgBG,qBAEpD,CACF,CACA,OAAOJ,CACT,CACO,SAASK,GAA2BC,GAQxC,IARyC,iBAC1CC,EAAgB,eAChBC,EAAc,aACdC,EAAY,iBACZZ,EAAgB,gBAChBC,EAAe,OACf/uC,EAAM,YACNgvC,GACDO,EASC,OAP4BZ,GAAiC,CAC3DE,oBAFiCl5B,KAAKhkB,IAAI69C,EAAmBE,EAAcD,GAG3EzvC,SACA8uC,mBACAC,kBACAC,eAGJ,CACO,SAASW,GAAqB3vC,EAAQ4vC,GAC3C,MAAMv8B,EAAgBjM,EAA0BpH,GAC1C+J,EAAWF,GAAuC7J,GACxD,OAAO2V,KAAKkjB,MAAM+W,EAAev8B,KAA+B,MAAZtJ,EAAmBA,EAAW,GAAK,EACzF,CC3UA,IAAI8lC,GAAyC,SAAUA,GAGrD,OAFAA,EAAmC,QAAI,UACvCA,EAAmC,QAAI,UAChCA,CACT,CAJ6C,CAI3CA,IAA6B,CAAC,GCOhC,MAAMC,GHHsB,CACxBC,OAAQjb,GACRkb,OAAQhP,GACRsC,KAAMY,GACN+L,SAAU7L,GACV8L,QAAS3V,GACT4V,aAAc1I,GACd,CAAC4D,IAA2BC,GAC5B,CAACC,IAA4BzW,IGJpBsb,GAA0BA,CAAChwC,EAAO1T,EAAOsT,KACpD,IAAIqwC,EAAqB1/C,EAAM2/C,EAAuBC,EACtD,MAAM9oC,EAAeylC,GAAmB,CACtCltC,SACAitC,YAAa6C,GACb1C,gBAAiB1gD,EAAM6a,QACvB8lC,aAA4D,OAA7CgD,EAAsB3jD,EAAM2gD,mBAAwB,EAASgD,EAAoB9oC,QAChGU,sBAAsS,OAA9QtX,EAAgE,OAAxD2/C,EAAwB5jD,EAAMub,uBAAiCqoC,EAAuE,OAA9CC,EAAuB7jD,EAAM2gD,eAAkF,OAAxDkD,EAAuBA,EAAqBhpC,cAAmB,EAASgpC,EAAqBtoC,uBAAiCtX,EAAO,CAAC,EACrT28C,yBAAyB,IAE3B,OAAOv/C,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBmH,QAASE,GACT,EClBG,MAED+oC,GAAkB,CACtBC,QAHoC,GAIpCC,YAHwC,IAIxCC,SAAU,GAECC,GAA0BA,CAACxwC,EAAO1T,KAAUqB,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CAC3E8G,QAAS,CACP3E,MAAO7V,EAAMwa,QACbG,OAAQmpC,GAAgB9jD,EAAMwa,YCb3B,MAAM2pC,GAAqBlgD,IAG5B,IAH6B,OACjCqP,EAAM,QACN+a,GACDpqB,EACC,MAAM4W,EAAUM,EAA8B7H,GAC9C,GAAI+a,EAAQ+1B,OACV,OAAO/1B,EAAQ+1B,OAAO7nC,QAAO,CAAC8nC,EAAgBhpC,KAC5C,MAAMK,EAASb,EAAQjE,MAAKwF,GAAOA,EAAIf,QAAUA,IAIjD,OAHIK,GACF2oC,EAAehsC,KAAKqD,GAEf2oC,CAAc,GACpB,IAGL,OADqBh2B,EAAQi2B,WAAazpC,EAAUW,GAAqClI,IACrEmI,QAAOC,IAAWA,EAAO+yB,eAAc,EAEhD8V,GAAyBpgD,IAEhC,IAFiC,OACrCmP,GACDnP,EACC,IAAIsb,EAAiBC,EACrB,MAAM8kC,EAAuBjhC,GAAiCjQ,GACxDqQ,EAAUzF,GAAoB5K,GAC9BimB,EAAejmB,EAAOzB,QAAQghC,kBAC9B4R,EAAWD,EAAqB/oC,QAAO1C,GAA2B,WAArB4K,EAAQ5K,GAAIlP,OACzDsV,EAAaL,GAAuBxL,GACpCoxC,GAAkC,MAAdvlC,GAA4D,OAArCM,EAAkBN,EAAW7b,UAAe,EAASmc,EAAgBxH,KAAIvK,GAAOA,EAAIqL,OAAQ,GACvI4rC,GAAqC,MAAdxlC,GAAkE,OAA3CO,EAAqBP,EAAWxb,aAAkB,EAAS+b,EAAmBzH,KAAIvK,GAAOA,EAAIqL,OAAQ,GAGzJ,OAFA0rC,EAASnuC,WAAWouC,GACpBD,EAASpsC,QAAQssC,GACbprB,EAAatxB,KAAO,EACfw8C,EAAShpC,QAAO1C,GAAMwgB,EAAajQ,IAAIvQ,KAEzC0rC,CAAQ,E,gBClCjB,MAAM9kD,GAAY,CAAC,WAAY,WAC7B04C,GAAa,CAAC,WAAY,WAQrB,SAASuM,GAAsB5kD,GACpC,MAAMsT,EAASskB,MACT,SACF8lB,EAAQ,QACRrvB,GACEruB,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IAC/C,OAAoB4H,EAAAA,GAAAA,KAAKs9C,GAAAA,GAAUxjD,EAAAA,EAAAA,GAAS,CAC1Cy8C,QAASA,KACPxqC,EAAOzB,QAAQizC,gBAAgBz2B,GACnB,MAAZqvB,GAAoBA,GAAU,GAE/Bj4C,EAAO,CACRZ,SAAUyO,EAAOzB,QAAQ6kB,cAAc,sBAE3C,CACO,SAASquB,GAAwB/kD,GACtC,MAAMsT,EAASskB,MACT,SACF8lB,EAAQ,QACRrvB,GACEruB,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOq4C,IAC/C,OAAoB9wC,EAAAA,GAAAA,KAAKs9C,GAAAA,GAAUxjD,EAAAA,EAAAA,GAAS,CAC1Cy8C,QAASA,KACPxqC,EAAOzB,QAAQmzC,kBAAkB32B,GACrB,MAAZqvB,GAAoBA,GAAU,GAE/Bj4C,EAAO,CACRZ,SAAUyO,EAAOzB,QAAQ6kB,cAAc,wBAE3C,CACA,MC3BauuB,GAAmBA,CAAC3xC,EAAQtT,KACvC,MAAMksB,EAAS6K,GAAczjB,EAAQ,oBAC/B6+B,EAA2BnyC,EAAMoyC,0CACjCnD,GAA4D,kBAA7BkD,EAAoE,MAA5BA,OAAmC,EAASA,EAAyB+S,UAAY/S,KAA6B,EACrLW,EAAehvC,EAAAA,aAAkB,WAAkB,IAAjBuqB,EAAOjc,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,IAAI+yC,EAAuBC,EAAuBC,EAClDn5B,EAAOR,MAAM,mBASb,OAAOkkB,GAAS,CACd/0B,QATsBspC,GAAmB,CACzC7wC,SACA+a,YAQAwhB,QAN2E,OAApDsV,EAAwB92B,EAAQi3B,iBAA2BH,EAAwBZ,IACrE,CACrCjxC,WAKAu7B,mBAAoBxgB,EAAQygB,WAAa,IACzCgB,eAAoE,OAAnDsV,EAAwB/2B,EAAQyhB,iBAA0BsV,EAC3ErV,2BAA4F,OAA/DsV,EAAwBh3B,EAAQ0hB,6BAAsCsV,EACnGpW,uBACA37B,UAEJ,GAAG,CAAC4Y,EAAQ5Y,EAAQ27B,IACd6V,EAAkBhhD,EAAAA,aAAkBuqB,IACxCnC,EAAOR,MAAM,sBACb,MAAM65B,EAAMzS,EAAazkB,IChCtB,SAAkBm3B,GAAkE,IAA5DC,EAASrzC,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,MAAOszC,EAAQtzC,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAGg/B,SAASuU,OAAS,WAC7E,MAAMC,EAAW,GAAHjlD,OAAM+kD,EAAQ,KAAA/kD,OAAI8kD,GAIhC,GAAI,aAAcI,kBAAkB97B,UAAW,CAE7C,MAAM+7B,EAAMC,IAAIC,gBAAgBR,GAG1BxyC,EAAIo+B,SAASC,cAAc,KAajC,OAZAr+B,EAAEizC,KAAOH,EACT9yC,EAAEkzC,SAAWN,EAKb5yC,EAAEmzC,aAGF74B,YAAW,KACTy4B,IAAIK,gBAAgBN,EAAI,GAG5B,CACA,MAAM,IAAIrxC,MAAM,8BAClB,CDUI4xC,CAHa,IAAIC,KAAK,CAAY,MAAXj4B,GAAmBA,EAAQk4B,YAAc,IAAIC,WAAW,CAAC,IAAM,IAAM,MAAS,GAAIjB,GAAM,CAC7G17C,KAAM,aAEO,MAAkB,MAAXwkB,OAAkB,EAASA,EAAQo4B,SAAS,GACjE,CAACv6B,EAAQ4mB,IAKZhoB,GAAiBxX,EAJI,CACnBw/B,eACAgS,mBAEqC,UAKvC,MAAM4B,EAAuB5iD,EAAAA,aAAkB,CAAC6iD,EAAct4B,KAC5D,IAAIu4B,EACJ,OAAkD,OAA7CA,EAAsBv4B,EAAQw4B,aAAuBD,EAAoBE,qBACrEH,EAEF,IAAIA,EAAc,CACvBjiD,WAAwB6C,EAAAA,GAAAA,KAAKq9C,GAAuB,CAClDv2B,QAASA,EAAQw4B,aAEnBE,cAAe,aACf,GACD,IACH/S,GAA6B1gC,EAAQ,aAAcozC,EAAqB,E,eEtEnE,MAAMM,GAAuBtzC,GAASA,EAAMuzC,SCStCC,GAA6BA,CAACxzC,EAAO1T,KAChD,IAAImnD,EAAuBxD,EAC3B,MAAMnpB,GAAkBn5B,EAAAA,EAAAA,GAAS,CAAC,EAAG04B,GAA8B/5B,EAAMg6B,cAAkE,OAAlDmtB,EAAwBnnD,EAAMw6B,iBAA2B2sB,EAAsE,OAA7CxD,EAAsB3jD,EAAM2gD,eAAmF,OAAzDgD,EAAsBA,EAAoBrpB,iBAAsB,EAASqpB,EAAoBnpB,iBAE9T,OADAN,GAA+BM,EAAgBX,SAAU75B,EAAM+xB,YACxD1wB,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB4mB,WAAY,CACVE,oBAEF,EAES4sB,GAAgCA,CAACxtB,EAAU7H,EAAWs1B,IAAwBC,IACzF,IAAIC,EACJ,IAAI/sB,EAAkB8sB,EAAgB9sB,gBACtC,MAAMX,EAA4G,OAAhG0tB,EAA+C,MAAvBF,OAA8B,EAASA,EAAoBxtB,UAAoB0tB,EAAwB/sB,EAAgBX,SAC3J2tB,EAAY7tB,GAAaC,EAAUC,IACrCwtB,IAAgD,MAAvBA,OAA8B,EAASA,EAAoBptB,QAAUO,EAAgBP,OAAgC,MAAvBotB,OAA8B,EAASA,EAAoBxtB,YAAcW,EAAgBX,WAClNW,EAAkB6sB,GAEpB,MAAMI,EvDZoB,SAACxtB,GAAwB,IAAlButB,EAASp1C,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,EAC7C,OAAkB,IAAdo1C,EACKvtB,EAEFhR,KAAKhkB,IAAIgkB,KAAKD,IAAIiR,EAAMutB,EAAY,GAAI,EACjD,CuDOoBE,CAAaltB,EAAgBP,KAAMutB,GAOrD,OANIC,IAAcjtB,EAAgBP,OAChCO,GAAkBn5B,EAAAA,EAAAA,GAAS,CAAC,EAAGm5B,EAAiB,CAC9CP,KAAMwtB,KAGVvtB,GAA+BM,EAAgBX,SAAU9H,GAClD,CACLyI,kBACD,ECEI,MAAMmtB,GAAqBA,CAACr0C,EAAQtT,KACzC,MAAMksB,EAAS6K,GAAczjB,EAAQ,sBAC/Bs0C,EAAM9jD,EAAAA,OAAa,MACnB+jD,EAAoB/jD,EAAAA,OAAa,MACjCgkD,EAA2BhkD,EAAAA,OAAa,CAAC,GACzCikD,EAAejkD,EAAAA,OAAa,IAClCA,EAAAA,WAAgB,KACd8jD,EAAI/1C,SAAUm2C,EAAAA,GAAAA,GAAc10C,EAAOzB,QAAQgP,eAAehP,QAAQ,GACjE,CAACyB,IAIJ,MAAM20C,EAA4BnkD,EAAAA,aAAkB,CAACsgD,EAAQE,EAAY4D,IAAsB,IAAIC,SAAQC,IACzG,MAAMC,EAAuBlE,GAAmB,CAC9C7wC,SACA+a,QAAS,CACP+1B,SACAE,gBAEDrsC,KAAIyD,GAAUA,EAAOL,QAClBR,EAAUM,EAA8B7H,GACxCg1C,EAA2B,CAAC,EAClCztC,EAAQzP,SAAQsQ,IACd4sC,EAAyB5sC,EAAOL,OAASgtC,EAAqBtZ,SAASrzB,EAAOL,MAAM,IAElF6sC,IACFI,EAAyBha,GAAgCjzB,QAAS,GAEpE/H,EAAOzB,QAAQ02C,yBAAyBD,GACxCF,GAAS,KACP,CAAC90C,IACCk1C,EAAyB1kD,EAAAA,aAAkBwhD,IAC/C,MAGMmD,EAHkBnD,EAAgB,CACtChyC,WAE8B2E,KAAIc,GAAMzF,EAAOzB,QAAQkqB,OAAOhjB,KAChEzF,EAAOzB,QAAQ62C,QAAQD,EAAQ,GAC9B,CAACn1C,IACEq1C,EAAwB7kD,EAAAA,aAAkB,CAAC8kD,EAAav6B,KAC5D,IAAIw6B,EAAgBC,EACpB,MAAMC,GAAmB1nD,EAAAA,EAAAA,GAAS,CAChC2nD,YAAY,EACZC,aAAa,EACb7gC,YAAY,EACZ8/B,mBAAmB,GAClB75B,GACG66B,EAAWN,EAAYO,gBAC7B,IAAKD,EACH,OAEF,MAAMjC,EAAWD,GAAqB1zC,EAAOzB,QAAQ6B,OAC/C01C,EAAkB91C,EAAOzB,QAAQgP,eAAehP,QAChDw3C,EAAYD,EAAgBE,WAAU,GAG3BD,EAAU9wB,cAAc,IAAD53B,OAAKkL,EAAY1I,OAChDmuC,MAAM5hC,SAAW,UAG1B25C,EAAU/X,MAAMiY,QAAU,OACJF,EAAU9wB,cAAc,IAAD53B,OAAKkL,EAAYwE,gBACrBkoB,cAAc,IAAD53B,OAAKkL,EAAY29C,qBACpDlY,MAAMrlC,MAAQ,OACjC,IAAIw9C,GAAoH,OAAvFZ,EAAiBO,EAAgB7wB,cAAc,IAAD53B,OAAKkL,EAAY69C,yBAA+B,EAASb,EAAec,eAAiB,EACpKC,GAAmH,OAAvFd,EAAkBM,EAAgB7wB,cAAc,IAAD53B,OAAKkL,EAAYg+C,wBAA8B,EAASf,EAAgBa,eAAiB,EAEtK,IAAIG,EAKAC,EANFhB,EAAiBE,cAEsE,OAAxFa,EAAwBT,EAAU9wB,cAAc,IAAD53B,OAAKkL,EAAY69C,qBAAgCI,EAAsBze,SACvHoe,EAA2B,GAEzBV,EAAiB3gC,aAEsE,OAAxF2hC,EAAyBV,EAAU9wB,cAAc,IAAD53B,OAAKkL,EAAYg+C,oBAA+BE,EAAuB1e,SACxHue,EAA0B,GAI5B,MAAMI,EAAsB/C,EAASgD,uBAAyBhH,GAAqB3vC,EAAQtT,EAAMkqD,oBAAsBT,EAA2BG,EAQlJ,GAPAP,EAAU/X,MAAMhvC,OAAS,GAAH3B,OAAMqpD,EAAmB,MAE/CX,EAAU/X,MAAM3vC,UAAY,cAKb,MAAX0sB,GAAmBA,EAAQi3B,gBAAiB,CAC9C,MAAM6E,EAAoBd,EAAU9wB,cAAc,IAAD53B,OAAKkL,EAAYg+C,kBAClEM,EAAkB7Y,MAAMnxC,SAAW,WACnCgqD,EAAkB7Y,MAAMrlC,MAAQ,OAChCk+C,EAAkB7Y,MAAMhuC,IAAM,GAAH3C,OAAMqpD,EAAsBJ,EAAuB,KAChF,CAIA,MAAMQ,EAAYhZ,SAASC,cAAc,OACzC+Y,EAAU3Y,YAAY4X,GACtBH,EAAS1X,KAAK6Y,UAAYD,EAAUC,UACpC,MAAMC,EAAyD,oBAA/BvB,EAAiBwB,UAA2BxB,EAAiBwB,YAAcxB,EAAiBwB,UAC5H,GAAgC,kBAArBD,EAA+B,CAExC,MAAME,EAAetB,EAAS7X,cAAc,SAC5CmZ,EAAa/Y,YAAYyX,EAASuB,eAAeH,IACjDpB,EAASwB,KAAKjZ,YAAY+Y,EAC5B,CACIzB,EAAiB4B,eACnBzB,EAAS1X,KAAKoZ,UAAUl+B,OAAOq8B,EAAiB4B,cAAc9T,MAAM,MAEtE,MAAMgU,EAAyB,GAC/B,GAAI9B,EAAiBC,WAAY,CAC/B,MAAM8B,EAAgB1B,EAAgB2B,cAEhCC,GAD0C,eAAnCF,EAAc3hC,YAAYrpB,KAAwBgrD,EAAgBlD,EAAI/1C,SACpDo5C,iBAAiB,iCAChD,IAAK,IAAIz1C,EAAI,EAAGA,EAAIw1C,EAAkB34C,OAAQmD,GAAK,EAAG,CACpD,MAAMo2B,EAAOof,EAAkBx1C,GAC/B,GAAqB,UAAjBo2B,EAAKsf,QAAqB,CAC5B,MAAMC,EAAuBjC,EAAS7X,cAAczF,EAAKsf,SACnDE,EAAQxf,EAAKwf,MACnB,GAAIA,EAAO,CACT,IAAIC,EAAW,GAEf,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAMG,SAASl5C,OAAQi5C,GAAK,EACL,kBAA9BF,EAAMG,SAASD,GAAGE,UAC3BH,GAAY,GAAJ1qD,OAAOyqD,EAAMG,SAASD,GAAGE,QAAO,SAG5CL,EAAqB1Z,YAAYyX,EAASuB,eAAeY,IACzDnC,EAASwB,KAAKjZ,YAAY0Z,EAC5B,CACF,MAAO,GAAIvf,EAAK6f,aAAa,QAAS,CAGpC,MAAMN,EAAuBjC,EAAS7X,cAAczF,EAAKsf,SACzD,IAAK,IAAII,EAAI,EAAGA,EAAI1f,EAAK8f,WAAWr5C,OAAQi5C,GAAK,EAAG,CAClD,MAAMK,EAAO/f,EAAK8f,WAAWJ,GACzBK,GACFR,EAAqBS,aAAaD,EAAKE,SAAUF,EAAKG,WAAa,GAEvE,CACAjB,EAAuBxyC,KAAK,IAAI8vC,SAAQC,IACtC+C,EAAqB1X,iBAAiB,QAAQ,IAAM2U,KAAU,KAEhEc,EAASwB,KAAKjZ,YAAY0Z,EAC5B,CACF,CACF,CAKEhD,QAAQvI,IAAIiL,GAAwBkB,MAAK,KACvCnD,EAAYoD,cAAcC,OAAO,GAErC,GACC,CAAC34C,EAAQs0C,EAAK5nD,EAAMkqD,qBACjBgC,EAA8BpoD,EAAAA,aAAkB8kD,IACpD,IAAIuD,EAEJvE,EAAI/1C,QAAQ2/B,KAAKS,YAAY2W,GAG7Bt1C,EAAOzB,QAAQu6C,aAAavE,EAAkBh2C,SAAW,CAAC,GACG,OAAtDs6C,EAAwBtE,EAAkBh2C,UAA+E,OAA1Ds6C,EAAwBA,EAAsBtxC,UAAoBsxC,EAAsB5wC,uBAE5JjI,EAAOzB,QAAQ02C,yBAAyBT,EAAyBj2C,SAEnEyB,EAAOzB,QAAQw6C,4BAA2B,GAC1C/4C,EAAOzB,QAAQ62C,QAAQX,EAAal2C,SAGpCg2C,EAAkBh2C,QAAU,KAC5Bi2C,EAAyBj2C,QAAU,CAAC,EACpCk2C,EAAal2C,QAAU,EAAE,GACxB,CAACyB,IACE0xC,EAAoBlhD,EAAAA,aAAkBs5B,UAE1C,GADAlR,EAAOR,MAAM,yBACRpY,EAAOzB,QAAQgP,eAAehP,QACjC,MAAM,IAAI4C,MAAM,wCAMlB,GAJAozC,EAAkBh2C,QAAUyB,EAAOzB,QAAQy6C,cAE3CxE,EAAyBj2C,QAAUyJ,GAAkChI,GACrEy0C,EAAal2C,QAAUyB,EAAOzB,QAAQ06C,gBAClCvsD,EAAMs6B,WAAY,CACpB,MAAMkyB,EAAkB1oC,GAA6BxQ,GAC/CknB,EAAkB,CACtBP,KAAM,EACNJ,SAAU2yB,GAEZl5C,EAAOzB,QAAQ+hB,mBAAmB,aAElCwzB,GAA8BoF,EAAiB,cAAehyB,IAC9DlnB,EAAOzB,QAAQiiB,aACjB,OACMm0B,EAAqC,MAAX55B,OAAkB,EAASA,EAAQ+1B,OAAmB,MAAX/1B,OAAkB,EAASA,EAAQi2B,WAAuB,MAAXj2B,OAAkB,EAASA,EAAQ65B,mBAC9I,MAAX75B,GAAmBA,EAAQi3B,iBAC7BkD,EAAuBn6B,EAAQi3B,iBAEjChyC,EAAOzB,QAAQw6C,4BAA2B,SA1NrC,IAAIlE,SAAQC,IACjB/gC,uBAAsB,KACpB+gC,GAAS,GACT,IAyNF,MAAMQ,EAtNV,SAA0BjD,GACxB,MAAM8G,EAAWrb,SAASC,cAAc,UAKxC,OAJAob,EAASnb,MAAMnxC,SAAW,WAC1BssD,EAASnb,MAAMrlC,MAAQ,MACvBwgD,EAASnb,MAAMhvC,OAAS,MACxBmqD,EAAS9G,MAAQA,GAASvU,SAASuU,MAC5B8G,CACT,CA+MwBC,CAA4B,MAAXr+B,OAAkB,EAASA,EAAQo4B,UAOtEmC,EAAY+D,OAAS,KACnBhE,EAAsBC,EAAav6B,GACZu6B,EAAYoD,cAAcY,WAAW,SAC7CnZ,iBAAiB,UAAUoZ,KACH,IAAhBA,EAAIC,SAEvBZ,EAA4BtD,EAC9B,GACA,EAEJhB,EAAI/1C,QAAQ2/B,KAAKC,YAAYmX,EAC/B,GACC,CAAC5oD,EAAOksB,EAAQ5Y,EAAQq1C,EAAuBuD,EAA6BjE,EAA2BO,IAI1G19B,GAAiBxX,EAHM,CACrB0xC,qBAEuC,UAKzC,MAAM0B,EAAuB5iD,EAAAA,aAAkB,CAAC6iD,EAAct4B,KAC5D,IAAI0+B,EACJ,OAAsD,OAAjDA,EAAwB1+B,EAAQ2+B,eAAyBD,EAAsBjG,qBAC3EH,EAEF,IAAIA,EAAc,CACvBjiD,WAAwB6C,EAAAA,GAAAA,KAAKw9C,GAAyB,CACpD12B,QAASA,EAAQ2+B,eAEnBjG,cAAe,eACf,GACD,IACH/S,GAA6B1gC,EAAQ,aAAcozC,EAAqB,ECnR7DuG,GAAmCA,CAAC35C,EAAQmiB,EAAcjB,EAAOC,KAC5E,MAAMwf,EAAuBnwC,EAAAA,aAAkB,KAC7CwP,EAAOzB,QAAQ2jB,0BAA0BC,EAAcjB,EAAOC,EAAU,GACvE,CAACnhB,EAAQmhB,EAAWD,EAAOiB,IAC9Bse,IAAe,KACbE,GAAsB,IAExB,MAAMjpB,EAAgBlnB,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACVknB,EAAcnZ,QAChBmZ,EAAcnZ,SAAU,EAExBoiC,GACF,GACC,CAACA,GAAsB,ECGfiZ,GAAyBA,CAACx5C,EAAO1T,EAAOsT,KACnD,IAAIrP,EAAMkpD,EAAoBxJ,EAC9B,MAAM9gC,EAA8P,OAA/O5e,EAAmD,OAA3CkpD,EAAqBntD,EAAM6iB,aAAuBsqC,EAAmE,OAA7CxJ,EAAsB3jD,EAAM2gD,eAA+E,OAArDgD,EAAsBA,EAAoBloC,aAAkB,EAASkoC,EAAoB9gC,aAAuB5e,EAAO0+B,KAClR,OAAOthC,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB+H,OAAQ,CACNoH,YAAa6gB,GAAoB7gB,EAAa7iB,EAAM2jC,gCAAiCrwB,GACrF0P,mBAAoB,CAAC,EACrBE,8BAA+B,CAAC,GAElCC,kBAAmB,CAAC,GACpB,EAEEiqC,GAAuBh1C,GAEpBA,EAAO4K,mBAEhB,SAASqqC,GAA0B/5C,EAAQI,GACzC,OAAOJ,EAAOzB,QAAQmkB,uBAAuB,4BAA6B,CACxE7X,KAAMzK,EAAM6J,KAAKY,KACjB6E,mBAAoBtP,EAAM+H,OAAOuH,oBAErC,CACA,SAASsqC,KACP,OAAO14C,EAAe9B,OAAOshB,OAC/B,C,gBCxCO,MAAMm5B,GAAiBA,CAACj6C,EAAQtT,KACrC,IAAIud,EACAm0B,EAeJ,OAdI1xC,EAAMs6B,YAAuC,WAAzBt6B,EAAMwtD,gBAC5B9b,EAAQ/W,GAA+BrnB,GACvCiK,EAAO8d,GAAiD/nB,KAExDiK,EAAO0F,GAAqC3P,GAE1Co+B,EADkB,IAAhBn0B,EAAKlL,OACC,KAEA,CACN2oB,cAAe,EACfC,aAAc1d,EAAKlL,OAAS,IAI3B,CACLkL,OACAm0B,QACD,EAUU+b,GAAqBA,CAACn6C,EAAQtT,KACzC,MAAM0tD,EAAWH,GAAej6C,EAAQtT,GACxC,OAAO8D,EAAAA,SAAc,KAAM,CACzByZ,KAAMmwC,EAASnwC,KACfm0B,MAAOgc,EAAShc,SACd,CAACgc,EAASnwC,KAAMmwC,EAAShc,OAAO,ECzBzBic,GAAwBj6C,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CAChEuR,MAAO,CACLxY,KAAM,KACNO,aAAc,KACdsY,mBAAoB,KACpBC,kBAAmB,MAErBE,SAAU,CACRhZ,KAAM,KACNO,aAAc,KACdsY,mBAAoB,KACpBC,kBAAmB,QCvBVqoC,GAAiC,0BCCjCC,GAA4Cn6C,GAASA,EAAMo6C,gBAC3DC,GAAgDr1C,EAAem1C,IAA2CG,GAAwBA,EAAqBC,UACvJC,GAA2Cx1C,EAAem1C,IAA2CG,GAAwBA,EAAqBxgD,WCiB/J,MAAM2gD,GAAqBlqD,IAKrB,IALsB,gBAC1BmqD,EAAe,cACfC,EAAa,aACbC,EAAY,UACZtQ,GACD/5C,EACC,GAAkB,QAAd+5C,GACF,GAAIoQ,EAAkBE,EACpB,OAAOF,EAAkB,OAEtB,GAAkB,QAAdpQ,GACLoQ,EAAkBC,EACpB,OAAOD,EAAkB,EAG7B,OAAO,IAAI,EAEPG,GAAsBpqD,IAKtB,IALuB,gBAC3BiqD,EAAe,cACfC,EAAa,aACbC,EAAY,UACZtQ,GACD75C,EACC,GAAkB,QAAd65C,GACF,GAAIoQ,EAAkBC,EACpB,OAAOD,EAAkB,OAEtB,GAAkB,QAAdpQ,GACLoQ,EAAkBE,EACpB,OAAOF,EAAkB,EAG7B,OAAO,IAAI,EAYAI,GAA4BA,CAACl7C,EAAQtT,KAChD,MAAMksB,EAAS6K,GAAczjB,EAAQ,6BAC/Bm7C,EAAyBhB,GAAmBn6C,EAAQtT,GAAOud,KAC3Dnc,GAAQ27C,EAAAA,GAAAA,KACR2R,EAAkB5qD,EAAAA,SAAc,IApDxC,SAAsCwP,EAAQiK,GAC5C,MAAM4B,EAAaL,GAAuBxL,IAAW,CAAC,EACtD,MAAO,IAAK6L,EAAW7b,KAAO,MAAQia,KAAU4B,EAAWxb,QAAU,GACvE,CAiD8CgrD,CAA6Br7C,EAAQm7C,IAAyB,CAACn7C,EAAQm7C,IAC7GG,EAEc,aAApB5uD,EAAM+xB,WAA4B/xB,EAAM6uD,uBAQlCC,EAAWhrD,EAAAA,aAAkB,SAACirD,EAAUr1B,GAAuC,IAAhCs1B,EAAkB58C,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,OACxE,MAAMsR,EAAoBT,GAAqC3P,GACzD27C,EAAsB37C,EAAOzB,QAAQ4wC,4BAA4B/oB,EAAOq1B,GAC1EE,GAAuBA,EAAoBvM,mBAClB,SAAvBsM,EACFD,EAAWE,EAAoBtM,qBACC,UAAvBqM,IACTD,EAAWE,EAAoBC,wBAKnC,MAAMC,EAA4BzrC,EAAkBtN,WAAU1I,GAAOA,EAAIqL,KAAO2gB,IAChFxN,EAAOR,MAAM,0BAAD/qB,OAA2BwuD,EAAyB,UAAAxuD,OAASouD,IACzEz7C,EAAOzB,QAAQu9C,gBAAgB,CAC7BL,WACAM,SAAUF,IAEZ,MAAM9zC,EAAQ/H,EAAOzB,QAAQy9C,oBAAoBP,GAAU1zC,MAC3D/H,EAAOzB,QAAQ09C,aAAa71B,EAAOre,EACrC,GAAG,CAAC/H,EAAQ4Y,IACNsjC,EAAa1rD,EAAAA,aAAkB,CAACirD,EAAUpgC,KAC9CzC,EAAOR,MAAM,4BAAD/qB,OAA6BouD,IACzCz7C,EAAOzB,QAAQu9C,gBAAgB,CAC7BL,aAEF,MAAM1zC,EAAQ/H,EAAOzB,QAAQy9C,oBAAoBP,GAAU1zC,MAC3D/H,EAAOzB,QAAQ49C,qBAAqBp0C,EAAOsT,EAAM,GAChD,CAACrb,EAAQ4Y,IACNwjC,EAAmB5rD,EAAAA,aAAkB,CAACirD,EAAUpgC,KACpDzC,EAAOR,MAAM,mCAAD/qB,OAAoCouD,IAChDz7C,EAAOzB,QAAQu9C,gBAAgB,CAC7BL,aAEF,MAAM1zC,EAAQ/H,EAAOzB,QAAQy9C,oBAAoBP,GAAU1zC,MAC3D/H,EAAOzB,QAAQ89C,2BAA2Bt0C,EAAOsT,EAAM,GACtD,CAACrb,EAAQ4Y,IACN0jC,EAAkB9rD,EAAAA,aAAkB,CAACirD,EAAUrwC,EAAOiQ,KAC1DzC,EAAOR,MAAM,4BAAD/qB,OAA6BouD,IACzCz7C,EAAOzB,QAAQu9C,gBAAgB,CAC7BL,aAEF,MAAM,MACJ1zC,GACE/H,EAAOzB,QAAQy9C,oBAAoBP,GACvCz7C,EAAOzB,QAAQg+C,0BAA0Bx0C,EAAOqD,EAAOiQ,EAAM,GAC5D,CAACrb,EAAQ4Y,IACN4jC,EAAoBhsD,EAAAA,aAAkBurD,IAC1C,IAAIU,EACJ,OAA8D,OAAtDA,EAAwBrB,EAAgBW,SAAqB,EAASU,EAAsBh3C,EAAE,GACrG,CAAC21C,IACEsB,EAA4BlsD,EAAAA,aAAkB,CAACsU,EAAQuW,KAC3D,MAAMshC,EAAkBthC,EAAMuhC,cAAc33B,cAAc,IAAD53B,OAAKkL,EAAY4D,oCAE1E,KAD8BwgD,GAAmBA,EAAgBnU,SAASntB,EAAM0C,SACrDjZ,EAAOiD,QAAUizB,GAAgCjzB,MAG1E,OAGF,IADmB/H,EAAOzB,QAAQoW,oBAEhC,OAEF,MAAMkoC,EAAmB78C,EAAOzB,QAAQu+C,sBAClCC,EAAiBj4C,EAAOiD,MAAQ/H,EAAOzB,QAAQy+C,eAAel4C,EAAOiD,OAAS,EAC9Ek1C,EAAsB7B,EAAgBr8C,OAAS,EAAI,EAAI,KACvDm+C,EAAqB9B,EAAgBr8C,OAAS,EAE9Ci8C,EAAe9yC,GAAqClI,GAAQjB,OAAS,EACrEo+C,EAAsBtzC,GAAuC7J,GACnE,IAAIo9C,GAAuB,EAC3B,OAAQ/hC,EAAMtjB,KACZ,IAAK,YAE2B,OAAxBklD,IACE3B,EACFc,EAAiBW,EAAgB1hC,GAEjCmgC,EAASuB,EAAgBP,EAAkBS,KAG/C,MAEJ,IAAK,aACH,CACE,MAAMI,EAAgBpC,GAAoB,CACxCH,gBAAiBiC,EACjBhC,cApBc,EAqBdC,eACAtQ,UAAW58C,EAAM48C,YAEG,OAAlB2S,GACFnB,EAAWmB,EAAehiC,GAE5B,KACF,CACF,IAAK,YACH,CACE,MAAMiiC,EAAezC,GAAmB,CACtCC,gBAAiBiC,EACjBhC,cAjCc,EAkCdC,eACAtQ,UAAW58C,EAAM48C,YAEE,OAAjB4S,GACFpB,EAAWoB,EAAcjiC,GAE3B,KACF,CACF,IAAK,UAEG8hC,EAAsB,GACxBb,EAAgBS,EAAgBI,EAAsB,EAAG9hC,GAE3D,MAEJ,IAAK,WAE2B,OAAxB4hC,GAAuD,OAAvBC,GAClC1B,EAASuB,EAAgBP,EAAkB7mC,KAAKD,IAAIunC,EAAsBJ,EAAkBK,KAE9F,MAEJ,IAAK,OAEDhB,EA1DgB,EA0DU7gC,GAC1B,MAEJ,IAAK,MAED6gC,EAAWlB,EAAc3/B,GACzB,MAEJ,IAAK,SAEGA,EAAM2I,SAAW3I,EAAM4I,UACzBjkB,EAAOzB,QAAQg/C,iBAAiBz4C,EAAOiD,OAEzC,MAEJ,IAAK,IAGD,MAEJ,QAEIq1C,GAAuB,EAGzBA,GACF/hC,EAAMyvB,gBACR,GACC,CAAC9qC,EAAQo7C,EAAgBr8C,OAAQu8C,EAAwBc,EAAkBZ,EAAUgB,EAAmB1uD,EAAM48C,UAAWwR,EAAYI,IAClIkB,EAA4BhtD,EAAAA,aAAkB,CAACsU,EAAQuW,KAE3D,IADmBrb,EAAOzB,QAAQoW,oBAEhC,OAEF,MAAM8oC,EAAYhD,GAA8Cz6C,KAAY8E,EAAOiD,MAC7E21C,EAAmB9C,GAAyC56C,KAAY8E,EAAOiD,MACrF,GAAI01C,GAAaC,IAAqBx5B,GAAgB7I,EAAMtjB,KAC1D,OAEF,MAAM8kD,EAAmB78C,EAAOzB,QAAQu+C,sBAClCC,EAAiBj4C,EAAOiD,MAAQ/H,EAAOzB,QAAQy+C,eAAel4C,EAAOiD,OAAS,EAE9Em1C,EAAqB9B,EAAgBr8C,OAAS,EAE9Ci8C,EAAe9yC,GAAqClI,GAAQjB,OAAS,EAC3E,IAAIq+C,GAAuB,EAC3B,OAAQ/hC,EAAMtjB,KACZ,IAAK,YACH,CACE,MAAMquB,EAAQo2B,EARQ,GASuB,MAATp2B,GAClCo1B,EAASuB,EAAgB32B,GAE3B,KACF,CACF,IAAK,aACH,CACE,MAAMi3B,EAAgBpC,GAAoB,CACxCH,gBAAiBiC,EACjBhC,cAhBc,EAiBdC,eACAtQ,UAAW58C,EAAM48C,YAEG,OAAlB2S,GACFjB,EAAiBiB,EAAehiC,GAElC,KACF,CACF,IAAK,YACH,CACE,MAAMiiC,EAAezC,GAAmB,CACtCC,gBAAiBiC,EACjBhC,cA7Bc,EA8BdC,eACAtQ,UAAW58C,EAAM48C,YAEE,OAAjB4S,EACFlB,EAAiBkB,EAAcjiC,GAE/Brb,EAAOzB,QAAQ89C,2BAA2Bv3C,EAAOiD,MAAOsT,GAE1D,KACF,CACF,IAAK,UAED6gC,EAAWa,EAAgB1hC,GAC3B,MAEJ,IAAK,WAE0D,OAAvB6hC,GAClC1B,EAASuB,EAAgBP,EAAkB7mC,KAAKD,IAlD5B,EAkDsDmnC,EAAkBK,KAE9F,MAEJ,IAAK,OAEDd,EAtDgB,EAsDgB/gC,GAChC,MAEJ,IAAK,MAED+gC,EAAiBpB,EAAc3/B,GAC/B,MAEJ,IAAK,IAGD,MAEJ,QAEI+hC,GAAuB,EAGzBA,GACF/hC,EAAMyvB,gBACR,GACC,CAAC9qC,EAAQo7C,EAAgBr8C,OAAQq9C,EAAkBtuD,EAAM48C,UAAWwR,EAAYV,EAAUgB,IACvFmB,EAAiCntD,EAAAA,aAAkB,CAACsU,EAAQuW,KAEhE,IADmBrb,EAAOzB,QAAQoW,oBAEhC,OAEF,MAAMipC,EAAqB7rC,GAA4C/R,GACvE,GAA2B,OAAvB49C,EACF,OAEF,MACE71C,MAAO81C,EACPzyC,MAAO0yC,GACLF,GACE,OACJ9M,EAAM,MACN1lC,EAAK,SACLrB,GACEjF,EACE+3C,EAAmB78C,EAAOzB,QAAQu+C,sBAClChC,EAAkB96C,EAAOzB,QAAQy+C,eAAea,GAChDd,EAAiBc,EAAe79C,EAAOzB,QAAQy+C,eAAea,GAAgB,EAE9EX,EAAqB9B,EAAgBr8C,OAAS,EAE9Ci8C,EAAe9yC,GAAqClI,GAAQjB,OAAS,EAC3E,IAAIq+C,GAAuB,EAC3B,OAAQ/hC,EAAMtjB,KACZ,IAAK,YAEGqT,IAAUrB,EAAW,EACvBmyC,EAAWpB,EAAiBz/B,GAE5BihC,EAAgBxB,EAAiBgD,EAAe,EAAGziC,GAErD,MAEJ,IAAK,UAEGjQ,EAAQ,GACVkxC,EAAgBxB,EAAiBgD,EAAe,EAAGziC,GAErD,MAEJ,IAAK,aACH,CACE,MAAM0iC,EAAwBjN,EAAO/xC,OAAS+xC,EAAOn4B,QAAQklC,GAAgB,EACzE/C,EAAkBiD,EAAwB,GAAK/C,GACjDsB,EAAgBxB,EAAkBiD,EAAwB,EAAGD,EAAcziC,GAE7E,KACF,CACF,IAAK,YACH,CACE,MAAM2iC,EAAuBlN,EAAOn4B,QAAQklC,GACxC/C,EAAkBkD,EAAuB,GA/B7B,GAgCd1B,EAAgBxB,EAAkBkD,EAAuB,EAAGF,EAAcziC,GAE5E,KACF,CACF,IAAK,WAE0D,OAAvB6hC,GAClC1B,EAASuB,EAAgBP,EAAkB7mC,KAAKD,IAzC5B,EAyCsDmnC,EAAkBK,KAE9F,MAEJ,IAAK,OAEDZ,EA7CgB,EA6CewB,EAAcziC,GAC7C,MAEJ,IAAK,MAEDihC,EAAgBtB,EAAc8C,EAAcziC,GAC5C,MAEJ,IAAK,IAGD,MAEJ,QAEI+hC,GAAuB,EAGzBA,GACF/hC,EAAMyvB,gBACR,GACC,CAAC9qC,EAAQo7C,EAAgBr8C,OAAQm9C,EAAYI,EAAiBd,EAAUgB,IACrEyB,EAAoBztD,EAAAA,aAAkB,CAACsU,EAAQuW,KAEnD,IAAKA,EAAMuhC,cAAcpU,SAASntB,EAAM0C,QACtC,OAIF,MAAMmR,EAAalvB,EAAOzB,QAAQ4rB,cAAcrlB,EAAOW,GAAIX,EAAOiD,OAClE,GAAImnB,EAAWgvB,WAAa1Z,GAAc2Z,OAASj6B,GAAgB7I,EAAMtjB,KACvE,OAMF,IAJuBiI,EAAOzB,QAAQqjB,6BAA6B,kBAAkB,EAAM,CACzFvG,QACAliB,KAAM+1B,IAGN,OAEF,MAAMgf,EAAaluC,EAAOzB,QAAQoW,oBAClC,GAA+B,IAA3BymC,EAAgBr8C,SAAiBmvC,EACnC,OAEF,MAAMxD,EAAY58C,EAAM48C,UAClBmS,EAAmB78C,EAAOzB,QAAQu+C,sBAClCC,EAAiBj4C,EAAOiD,MAAQ/H,EAAOzB,QAAQy+C,eAAel4C,EAAOiD,OAAS,EAC9Eq2C,EAAiBhD,EAAgBt4C,WAAU1I,GAAOA,EAAIqL,KAAOX,EAAOW,KAEpEy3C,EAAqB9B,EAAgBr8C,OAAS,EAE9Ci8C,EAAe9yC,GAAqClI,GAAQjB,OAAS,EAC3E,IAAIq+C,GAAuB,EAC3B,OAAQ/hC,EAAMtjB,KACZ,IAAK,YAGGqmD,EAAiBlB,GACnB1B,EAASuB,EAAgBP,EAAkB4B,EAAiB,IAE9D,MAEJ,IAAK,UAEGA,EAhBkB,EAiBpB5C,EAASuB,EAAgBP,EAAkB4B,EAAiB,IACnD9C,EACTc,EAAiBW,EAAgB1hC,GAEjC6gC,EAAWa,EAAgB1hC,GAE7B,MAEJ,IAAK,aACH,CACE,MAAMgiC,EAAgBpC,GAAoB,CACxCH,gBAAiBiC,EACjBhC,cA3Bc,EA4BdC,eACAtQ,cAEoB,OAAlB2S,GACF7B,EAAS6B,EAAeb,EAAkB4B,GAA+B,QAAd1T,EAAsB,OAAS,SAE5F,KACF,CACF,IAAK,YACH,CACE,MAAM4S,EAAezC,GAAmB,CACtCC,gBAAiBiC,EACjBhC,cAxCc,EAyCdC,eACAtQ,cAEmB,OAAjB4S,GACF9B,EAAS8B,EAAcd,EAAkB4B,GAA+B,QAAd1T,EAAsB,QAAU,QAE5F,KACF,CACF,IAAK,MAGGrvB,EAAMgjC,UAAYtB,EApDN,EAqDdvB,EAASuB,EAAiB,EAAGP,EAAkB4B,GAAiB,SACtD/iC,EAAMgjC,UAAYtB,EAAiB/B,GAC7CQ,EAASuB,EAAiB,EAAGP,EAAkB4B,GAAiB,SAElE,MAEJ,IAAK,IACH,CAEE,GADct5C,EAAOiD,QACPuyC,GACZ,MAEF,MAAMhxB,EAASxkB,EAAOwkB,OACtB,GAAIA,GAA0B,kBAAhBA,EAAO/yB,KACnB,OAEG8kB,EAAMgjC,UAAYD,EAAiBlB,GACtC1B,EAASuB,EAAgBP,EAAkB7mC,KAAKD,IAAI0oC,EAAiBvB,EAAkBK,KAEzF,KACF,CACF,IAAK,WAEGkB,EAAiBlB,GACnB1B,EAASuB,EAAgBP,EAAkB7mC,KAAKD,IAAI0oC,EAAiBvB,EAAkBK,KAEzF,MAEJ,IAAK,SACH,CAEE,MAAMoB,EAAe3oC,KAAKhkB,IAAIysD,EAAiBvB,EAtFzB,GAuFlByB,IAAiBF,GAAkBE,GAvFjB,EAwFpB9C,EAASuB,EAAgBP,EAAkB8B,IAE3CpC,EAAWa,EAAgB1hC,GAE7B,KACF,CACF,IAAK,OAEGA,EAAM2I,SAAW3I,EAAM4I,SAAW5I,EAAMgjC,SAC1C7C,EA/Fc,EA+FUgB,EAjGJ,IAmGpBhB,EAjGc,EAiGUgB,EAAkB4B,IAE5C,MAEJ,IAAK,MAEG/iC,EAAM2I,SAAW3I,EAAM4I,SAAW5I,EAAMgjC,SAC1C7C,EAASR,EAAcwB,EAAkBU,IAEzC1B,EAASR,EAAcwB,EAAkB4B,IAE3C,MAEJ,QAEIhB,GAAuB,EAGzBA,GACF/hC,EAAMyvB,gBACR,GACC,CAAC9qC,EAAQo7C,EAAiBttD,EAAM48C,UAAW8Q,EAAUgB,EAAmBlB,EAAwBc,EAAkBF,IAC/GqC,EAAyB/tD,EAAAA,aAAkB,CAAC6iD,EAAYxlD,KAExD,IAF0D,MAC9DwtB,GACDxtB,EACC,MAAkB,MAAdwtB,EAAMtjB,KAIHs7C,CAAY,GAClB,IACH3S,GAA6B1gC,EAAQ,kBAAmBu+C,GACxD5jC,GAAuB3a,EAAQ,sBAAuB08C,GACtD/hC,GAAuB3a,EAAQ,sBAAuBw9C,GACtD7iC,GAAuB3a,EAAQ,2BAA4B29C,GAC3DhjC,GAAuB3a,EAAQ,cAAei+C,EAAkB,EC9jBrDO,GAAmCp+C,GAASA,EAAMq+C,gBCMlDC,GAAkCA,CAACt+C,EAAO1T,KACrD,IAAIiyD,EAAuBtO,EAC3B,OAAOtiD,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBq+C,gBAAgJ,OAA9HE,EAAsE,OAA7CtO,EAAsB3jD,EAAM2gD,mBAAwB,EAASgD,EAAoBoO,iBAA2BE,EAAwB,CAC7Kne,MAAM,IAER,ECXSoe,GAA4Bx+C,GAASA,EAAMy+C,SCElDxyD,GAAY,CAAC,KAAM,SACvB04C,GAAa,CAAC,KAAM,SAYhB+Z,GAAwCngD,EAAa,CAAC,uHAAwH,2IAA4I,8FAA+F,SCA/Z,IAAIogD,GAAuC,SAAUA,GAKnD,OAJAA,EAAsC,aAAI,eAC1CA,EAAyC,gBAAI,kBAC7CA,EAA0C,iBAAI,mBAC9CA,EAAuC,cAAI,gBACpCA,CACT,CAN2C,CAMzCA,IAA2B,CAAC,GAI1BC,GAAsC,SAAUA,GAMlD,OALAA,EAAoC,YAAI,cACxCA,EAAsC,cAAI,gBAC1CA,EAAqC,aAAI,eACzCA,EAAmC,WAAI,aACvCA,EAAwC,gBAAI,kBACrCA,CACT,CAP0C,CAOxCA,IAA0B,CAAC,GC9B7B,MAAM3yD,GAAY,CAAC,MACjB04C,GAAa,CAAC,MAcV+Z,GAAwCngD,EAAa,CAAC,uHAAwH,2IAA4I,8FAA+F,SCVlZsgD,GAA0B7+C,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CAClEy+C,SAAU,CAAC,IAEAK,GAAiBA,CAACl/C,EAAQtT,KHMLyyD,EAACn/C,EAAQtT,KACzC,MAAO0yD,EAAgBC,GAAqB7uD,EAAAA,SAAe,CAAC,GACtD8uD,EAAoB9uD,EAAAA,OAAa4uD,GACjCG,EAAqB/uD,EAAAA,OAAa,CAAC,IACnC,iBACJgvD,EAAgB,wBAChBC,EACAL,eAAgBM,EAAkB,uBAClCC,GACEjzD,EACEkzD,EAAsB5+B,GAAY,WAClCt0B,EAAMw4C,WAAaX,GAAcY,MACnCnkB,KAASliB,UAEb,EACM+gD,EAAqBrvD,EAAAA,aAAkB,CAACiV,EAAIsC,KAChD,MAAMjD,EAAS9E,EAAOzB,QAAQ4rB,cAAc1kB,EAAIsC,GAChD,IAAK/H,EAAOzB,QAAQuhD,eAAeh7C,GACjC,MAAM,IAAI3D,MAAM,yBAAD9T,OAA0BoY,EAAE,eAAApY,OAAc0a,EAAK,qBAChE,GACC,CAAC/H,IACE+/C,EAAmBvvD,EAAAA,aAAkB,CAACiV,EAAIsC,EAAOhN,KACrD,GAAIiF,EAAOzB,QAAQyhD,YAAYv6C,EAAIsC,KAAWhN,EAC5C,MAAM,IAAIoG,MAAM,yBAAD9T,OAA0BoY,EAAE,eAAApY,OAAc0a,EAAK,eAAA1a,OAAc0N,EAAI,UAClF,GACC,CAACiF,IACEigD,EAAwBzvD,EAAAA,aAAkB,CAACsU,EAAQuW,KACvD,IAAKvW,EAAOo7C,WACV,OAEF,GAAIp7C,EAAOo5C,WAAa1Z,GAAc2Z,KACpC,OAEF,MAAMgC,GAAYpyD,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAQ,CACrC4a,OAAQ2kB,GAAyB+b,kBAEnCpgD,EAAOzB,QAAQ+f,aAAa,gBAAiB6hC,EAAW9kC,EAAM,GAC7D,CAACrb,IACEqgD,EAAqB7vD,EAAAA,aAAkB,CAACsU,EAAQuW,KACpD,GAAIvW,EAAOo5C,WAAa1Z,GAAc8b,KACpC,OAEF,GAAItgD,EAAOzB,QAAQyhD,YAAYl7C,EAAOW,GAAIX,EAAOiD,SAAWy8B,GAAc8b,KACxE,OAEF,MAAMH,GAAYpyD,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAQ,CACrC4a,OAAQ4kB,GAAwB4B,eAElClmC,EAAOzB,QAAQ+f,aAAa,eAAgB6hC,EAAW9kC,EAAM,GAC5D,CAACrb,IACEi+C,EAAoBztD,EAAAA,aAAkB,CAACsU,EAAQuW,KACnD,GAAIvW,EAAOo5C,WAAa1Z,GAAc2Z,KAAM,CAG1C,GAAoB,MAAhB9iC,EAAMklC,MACR,OAEF,IAAI7gC,EAUJ,GATkB,WAAdrE,EAAMtjB,IACR2nB,EAAS4kB,GAAwB2B,cACV,UAAd5qB,EAAMtjB,IACf2nB,EAAS4kB,GAAwBkc,aACV,QAAdnlC,EAAMtjB,MACf2nB,EAASrE,EAAMgjC,SAAW/Z,GAAwBmc,gBAAkBnc,GAAwBoc,WAC5FrlC,EAAMyvB,kBAGJprB,EAAQ,CACV,MAAMygC,GAAYpyD,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAQ,CACrC4a,WAEF1f,EAAOzB,QAAQ+f,aAAa,eAAgB6hC,EAAW9kC,EACzD,CACF,MAAO,GAAIvW,EAAOo7C,WAAY,CAC5B,IAAIxgC,EAMJ,IALwB1f,EAAOzB,QAAQqjB,6BAA6B,mBAAmB,EAAM,CAC3FvG,QACA6T,WAAYpqB,EACZogC,SAAU,SAGV,OAYF,GAVInhB,GAAe1I,KAEPA,EAAM2I,SAAW3I,EAAM4I,UAA0B,MAAd5I,EAAMtjB,IADnD2nB,EAAS2kB,GAAyBsc,iBAGX,UAAdtlC,EAAMtjB,IACf2nB,EAAS2kB,GAAyBmc,aACX,WAAdnlC,EAAMtjB,KAAkC,cAAdsjB,EAAMtjB,MAEzC2nB,EAAS2kB,GAAyBuc,eAEhClhC,EAAQ,CACV,MAAMygC,GAAYpyD,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAQ,CACrC4a,SACA3nB,IAAKsjB,EAAMtjB,MAEbiI,EAAOzB,QAAQ+f,aAAa,gBAAiB6hC,EAAW9kC,EAC1D,CACF,IACC,CAACrb,IACE6gD,EAAsBrwD,EAAAA,aAAkBsU,IAC5C,MAAM,GACJW,EAAE,MACFsC,EAAK,OACL2X,EAAM,IACN3nB,EAAG,OACHuxB,GACExkB,EACEg8C,EAA0B,CAC9Br7C,KACAsC,SAEF,GAAI2X,IAAW2kB,GAAyBsc,iBACtC,GAAInwD,EAAAA,QAAcuwD,WAAW,MAG3BD,EAAwBE,aAAc,MACjC,CACL,MAAM3N,EAAe/pB,EAAOY,YAAcZ,EAAOY,YAAYnyB,GAAOA,EACpE+oD,EAAwBzN,aAAeA,CACzC,MACS3zB,IAAW2kB,GAAyBuc,gBAC7CE,EAAwBE,aAAc,GAExChhD,EAAOzB,QAAQ0iD,kBAAkBH,EAAwB,GACxD,CAAC9gD,IACEkhD,EAAqB1wD,EAAAA,aAAkBsU,IAC3C,MAAM,GACJW,EAAE,MACFsC,EAAK,OACL2X,GACE5a,EAEJ,IAAIq8C,EADJnhD,EAAOzB,QAAQ6iD,gCAAgC37C,EAAIsC,GAE/C2X,IAAW4kB,GAAwBkc,aACrCW,EAAmB,QACVzhC,IAAW4kB,GAAwBoc,WAC5CS,EAAmB,QACVzhC,IAAW4kB,GAAwBmc,kBAC5CU,EAAmB,QAErB,MAAME,EAAiC,kBAAX3hC,EAC5B1f,EAAOzB,QAAQ+iD,iBAAiB,CAC9B77C,KACAsC,QACAs5C,sBACAF,oBACA,GACD,CAACnhD,IACJ2a,GAAuB3a,EAAQ,kBAAmB4/C,EAAoBK,IACtEtlC,GAAuB3a,EAAQ,eAAgB4/C,EAAoBS,IACnE1lC,GAAuB3a,EAAQ,cAAe4/C,EAAoB3B,IAClEtjC,GAAuB3a,EAAQ,gBAAiB4/C,EAAoBiB,IACpElmC,GAAuB3a,EAAQ,eAAgB4/C,EAAoBsB,IACnEllC,GAAwBhc,EAAQ,gBAAiBtT,EAAM60D,iBACvDvlC,GAAwBhc,EAAQ,eAAgBtT,EAAM80D,gBACtD,MAAMxB,EAAcxvD,EAAAA,aAAkB,CAACiV,EAAIsC,KACzC,MAAM05C,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OAE9D,OADkBqhD,EAAah8C,IAAOg8C,EAAah8C,GAAIsC,GACpCy8B,GAAc2Z,KAAO3Z,GAAc8b,IAAI,GACzD,CAACtgD,IACE0hD,GAAuBC,EAAAA,GAAAA,IAAiBC,IAC5C,MAAMC,EAA8BD,IAAal1D,EAAM0yD,eACnDO,GAA0BkC,GAC5BlC,EAAuBiC,EAAU,CAAC,GAEhCl1D,EAAM0yD,gBAAkByC,IAI5BxC,EAAkBuC,GAClBtC,EAAkB/gD,QAAUqjD,EAC5B5hD,EAAOzB,QAAQ+f,aAAa,uBAAwBsjC,GAAS,IAEzDE,EAA8BtxD,EAAAA,aAAkB,CAACiV,EAAIsC,EAAOg6C,KAGhE,MAAMH,GAAW7zD,EAAAA,EAAAA,GAAS,CAAC,EAAGuxD,EAAkB/gD,SAChD,GAAiB,OAAbwjD,EACFH,EAASn8C,IAAM1X,EAAAA,EAAAA,GAAS,CAAC,EAAG6zD,EAASn8C,GAAK,CACxC,CAACsC,IAAQha,EAAAA,EAAAA,GAAS,CAAC,EAAGg0D,SAEnB,CACL,MAAMC,EAAeJ,EAASn8C,GAC5Bw8C,GAAc7vD,EAAAA,EAAAA,GAA8B4vD,EAAc,CAACj6C,GAAOpD,IAAI8c,GAAAA,IACxEmgC,EAASn8C,GAAMw8C,EAC0B,IAArCziD,OAAOkX,KAAKkrC,EAASn8C,IAAK1G,eACrB6iD,EAASn8C,EAEpB,CACAi8C,EAAqBE,EAAS,GAC7B,CAACF,IACEQ,EAA2B1xD,EAAAA,aAAkB,CAACiV,EAAIsC,EAAOg6C,KAC7D/hD,EAAOzB,QAAQqC,UAASR,IACtB,MAAM+hD,GAAkBp0D,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMy+C,UAW3C,OAViB,OAAbkD,EACFI,EAAgB18C,IAAM1X,EAAAA,EAAAA,GAAS,CAAC,EAAGo0D,EAAgB18C,GAAK,CACtD,CAACsC,IAAQha,EAAAA,EAAAA,GAAS,CAAC,EAAGg0D,aAGjBI,EAAgB18C,GAAIsC,GACqB,IAA5CvI,OAAOkX,KAAKyrC,EAAgB18C,IAAK1G,eAC5BojD,EAAgB18C,KAGpB1X,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBy+C,SAAUsD,GACV,IAEJniD,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,IACEihD,EAAoBzwD,EAAAA,aAAkBsU,IAC1C,MAAM,GACFW,EAAE,MACFsC,GACEjD,EACJ3S,GAAQC,EAAAA,EAAAA,GAA8B0S,EAAQzY,IAChDwzD,EAAmBp6C,EAAIsC,GACvBg4C,EAAiBt6C,EAAIsC,EAAOy8B,GAAc8b,MAC1CwB,EAA4Br8C,EAAIsC,GAAOha,EAAAA,EAAAA,GAAS,CAC9CgN,KAAMypC,GAAc2Z,MACnBhsD,GAAO,GACT,CAAC0tD,EAAoBE,EAAkB+B,IACpCM,GAAiCT,EAAAA,GAAAA,IAAiB78C,IACtD,MAAM,GACJW,EAAE,MACFsC,EAAK,YACLi5C,EAAW,aACX3N,GACEvuC,EACJ,IAAIilB,EAAW/pB,EAAOzB,QAAQ8jD,aAAa58C,EAAIsC,GAE3Cg8B,GAA+B,GAC/Bid,GAAe3N,KACjBtpB,EAAWi3B,EAAc,GAAK3N,EAC9BtP,GAA+B,GAQjCme,EAAyBz8C,EAAIsC,EANZ,CACfxF,MAAOwnB,EACP5yB,OAAO,EACPqyB,mBAAmB,EACnBua,iCAGF/jC,EAAOzB,QAAQ09C,aAAax2C,EAAIsC,EAAM,IAElCu5C,EAAmB9wD,EAAAA,aAAkBsU,IACzC,MAAM,GACFW,EAAE,MACFsC,GACEjD,EACJ3S,GAAQC,EAAAA,EAAAA,GAA8B0S,EAAQigC,IAChDgb,EAAiBt6C,EAAIsC,EAAOy8B,GAAc2Z,MAC1C2D,EAA4Br8C,EAAIsC,GAAOha,EAAAA,EAAAA,GAAS,CAC9CgN,KAAMypC,GAAc8b,MACnBnuD,GAAO,GACT,CAAC4tD,EAAkB+B,IAChBQ,GAAgCX,EAAAA,GAAAA,IAAiB73B,UACrD,MAAM,GACJrkB,EAAE,MACFsC,EAAK,oBACLs5C,EAAmB,iBACnBF,EAAmB,QACjBr8C,EACJi7C,EAAiBt6C,EAAIsC,EAAOy8B,GAAc2Z,MAC1Cn+C,EAAOzB,QAAQ6iD,gCAAgC37C,EAAIsC,GACnD,MAAMw6C,EAAqBA,KACzBL,EAAyBz8C,EAAIsC,EAAO,MACpC+5C,EAA4Br8C,EAAIsC,EAAO,MACd,SAArBo5C,GACFnhD,EAAOzB,QAAQikD,wBAAwB/8C,EAAIsC,EAAOo5C,EACpD,EAEF,GAAIE,EAEF,YADAkB,IAGF,MAAMd,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,QACxD,MACJjJ,EAAK,kBACLqyB,GACEi4B,EAAah8C,GAAIsC,GACrB,GAAI5Q,GAASqyB,EAQX,OALA+1B,EAAmBhhD,QAAQkH,GAAIsC,GAAOhN,KAAOypC,GAAc2Z,UAE3D2D,EAA4Br8C,EAAIsC,EAAO,CACrChN,KAAMypC,GAAc2Z,OAIxB,MAAMsE,EAAYziD,EAAOzB,QAAQmkD,uCAAuCj9C,EAAIsC,GAC5E,GAAIy3C,EAAkB,CACpB,MAAMmD,EAAcC,IAClBrD,EAAmBhhD,QAAQkH,GAAIsC,GAAOhN,KAAOypC,GAAc2Z,KAE3D2D,EAA4Br8C,EAAIsC,EAAO,CACrChN,KAAMypC,GAAc2Z,OAElBsB,EACFA,EAAwBmD,GAExB9D,IACF,EAEF,IACE,MAAM1kD,EAAM4F,EAAOzB,QAAQkqB,OAAOhjB,GAClCovC,QAAQC,QAAQ0K,EAAiBiD,EAAWroD,IAAMq+C,MAAKoK,IACrD7iD,EAAOzB,QAAQukD,WAAW,CAACD,IAC3BN,GAAoB,IACnB1iB,MAAM8iB,EACX,CAAE,MAAOC,GACPD,EAAYC,EACd,CACF,MACE5iD,EAAOzB,QAAQukD,WAAW,CAACL,IAC3BF,GACF,IA6EIQ,EAAoB,CACxBC,4BA5EkCxyD,EAAAA,aAAkBs5B,UACpD,IAAIm5B,EACJ,MAAM,GACJx9C,EAAE,MACFsC,EAAK,MACLxF,EAAK,WACLgnB,EACAc,yBAA0B64B,GACxBp+C,EACJ+6C,EAAmBp6C,EAAIsC,GACvBg4C,EAAiBt6C,EAAIsC,EAAOy8B,GAAc2Z,MAC1C,MAAM/1C,EAASpI,EAAOzB,QAAQyrB,UAAUjiB,GAClC3N,EAAM4F,EAAOzB,QAAQkqB,OAAOhjB,GAClC,IAAIwkB,EAAc1nB,EACd6F,EAAO8hB,cAAgBg5B,IACzBj5B,EAAc7hB,EAAO8hB,YAAY3nB,EAAOvC,EAAOzB,QAAQ4rB,cAAc1kB,EAAIsC,KAE3E,IAAI05C,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OACxD2hD,GAAWh0D,EAAAA,EAAAA,GAAS,CAAC,EAAG0zD,EAAah8C,GAAIsC,GAAQ,CACnDxF,MAAO0nB,EACPO,aAAcjB,EAAa,4BAA8B,qBAE3D,GAAInhB,EAAO+6C,wBAAyB,CAClC,MAAMC,EAAa7gD,IAAUk/C,EAAah8C,GAAIsC,GAAOxF,MACrDw/C,GAAWh0D,EAAAA,EAAAA,GAAS,CAAC,EAAGg0D,EAAU,CAChCv4B,mBAAmB,IAErB04B,EAAyBz8C,EAAIsC,EAAOg6C,GACpCA,QAAiBlN,QAAQC,QAAQ1sC,EAAO+6C,wBAAwB,CAC9D19C,KACArL,MACA1N,MAAOq1D,EACPqB,eAEJ,CAIA,OAAIpjD,EAAOzB,QAAQyhD,YAAYv6C,EAAIsC,KAAWy8B,GAAc8b,OAG5DmB,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OACxD2hD,GAAWh0D,EAAAA,EAAAA,GAAS,CAAC,EAAGg0D,EAAU,CAChCv4B,mBAAmB,IAKrBu4B,EAASx/C,MAAQ6F,EAAO+6C,wBAA0B1B,EAAah8C,GAAIsC,GAAOxF,MAAQ0nB,EAClFi4B,EAAyBz8C,EAAIsC,EAAOg6C,GACpCN,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,SACN,OAAxC6iD,EAAmBxB,EAAah8C,KAAgE,OAA/Cw9C,EAAmBA,EAAiBl7C,KAAmBk7C,EAAiB9rD,OAAM,GACxI,CAAC6I,EAAQ6/C,EAAoBE,EAAkBmC,IAyBhDQ,uCAxB6ClyD,EAAAA,aAAkB,CAACiV,EAAIsC,KACpE,MAAMK,EAASpI,EAAOzB,QAAQyrB,UAAUjiB,GAClC05C,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OACxDhG,EAAM4F,EAAOzB,QAAQkqB,OAAOhjB,GAClC,IAAKg8C,EAAah8C,KAAQg8C,EAAah8C,GAAIsC,GACzC,OAAO/H,EAAOzB,QAAQkqB,OAAOhjB,GAE/B,MAAM,MACJlD,GACEk/C,EAAah8C,GAAIsC,GACrB,OAAOK,EAAOi7C,YAAcj7C,EAAOi7C,YAAY,CAC7C9gD,QACAnI,SACGrM,EAAAA,EAAAA,GAAS,CAAC,EAAGqM,EAAK,CACrB,CAAC2N,GAAQxF,GACT,GACD,CAACvC,KAUJwX,GAAiBxX,EATE,CACjBggD,cACAiB,oBACAK,oBAMmC,UACrC9pC,GAAiBxX,EAAQ+iD,EAAmB,WAC5CvyD,EAAAA,WAAgB,KACVkvD,GACFgC,EAAqBhC,EACvB,GACC,CAACA,EAAoBgC,IACxBlxD,EAAAA,WAAgB,KACd,MAAM8yD,EAAe54C,GAAoC1K,GAGnDujD,EAAsBhE,EAAmBhhD,QAC/CghD,EAAmBhhD,QAAU2Y,GAAUkoC,GAEvC5/C,OAAOoD,QAAQw8C,GAAgBtnD,SAAQnH,IAAkB,IAAhB8U,EAAIqrC,GAAOngD,EAClD6O,OAAOoD,QAAQkuC,GAAQh5C,SAAQjH,IAAqB,IAAnBkX,EAAOjD,GAAOjU,EAC7C,IAAI2yD,EAAuBC,EAC3B,MAAMC,GAAiE,OAApDF,EAAwBD,EAAoB99C,KAA0E,OAAzD+9C,EAAwBA,EAAsBz7C,SAAkB,EAASy7C,EAAsBzoD,OAASypC,GAAc8b,KAChMqD,EAAsD,OAAxCF,EAAmBH,EAAa79C,IAAeg+C,EAAmBh+C,EAClFX,EAAO/J,OAASypC,GAAc2Z,MAAQuF,IAAalf,GAAc8b,KACnE8B,GAA+Br0D,EAAAA,EAAAA,GAAS,CACtC0X,GAAIk+C,EACJ57C,SACCjD,IACMA,EAAO/J,OAASypC,GAAc8b,MAAQoD,IAAalf,GAAc2Z,MAC1EmE,GAA8Bv0D,EAAAA,EAAAA,GAAS,CACrC0X,GAAIk+C,EACJ57C,SACCjD,GACL,GACA,GACF,GACD,CAAC9E,EAAQo/C,EAAgBgD,EAAgCE,GAA+B,EGtb3FnD,CAAmBn/C,EAAQtT,GDOIk3D,EAAC5jD,EAAQtT,KACxC,MAAOm3D,EAAeC,GAAoBtzD,EAAAA,SAAe,CAAC,GACpDuzD,EAAmBvzD,EAAAA,OAAaqzD,GAChCG,EAAoBxzD,EAAAA,OAAa,CAAC,GAClCyzD,EAAezzD,EAAAA,OAAa,MAC5B0zD,EAAkB1zD,EAAAA,OAAa,OAC/B,iBACJgvD,EAAgB,wBAChBC,EACAoE,cAAeM,EAAiB,sBAChCC,GACE13D,EACE23D,EAAqBrjC,GAAY,WACjCt0B,EAAMw4C,WAAaX,GAAcyB,KACnChlB,KAASliB,UAEb,EACM+gD,EAAqBrvD,EAAAA,aAAkB,CAACiV,EAAIsC,KAChD,MAAMjD,EAAS9E,EAAOzB,QAAQ4rB,cAAc1kB,EAAIsC,GAChD,IAAK/H,EAAOzB,QAAQuhD,eAAeh7C,GACjC,MAAM,IAAI3D,MAAM,yBAAD9T,OAA0BoY,EAAE,eAAApY,OAAc0a,EAAK,qBAChE,GACC,CAAC/H,IACE+/C,EAAmBvvD,EAAAA,aAAkB,CAACiV,EAAI1K,KAC9C,GAAIiF,EAAOzB,QAAQ+lD,WAAW7+C,KAAQ1K,EACpC,MAAM,IAAIoG,MAAM,wBAAD9T,OAAyBoY,EAAE,eAAApY,OAAc0N,EAAI,UAC9D,GACC,CAACiF,IACEigD,EAAwBzvD,EAAAA,aAAkB,CAACsU,EAAQuW,KACvD,IAAKvW,EAAOo7C,WACV,OAEF,GAAIlgD,EAAOzB,QAAQ+lD,WAAWx/C,EAAOW,MAAQg/B,GAAa0Z,KACxD,OAEF,MAAMoG,EAAYvkD,EAAOzB,QAAQmqB,aAAa5jB,EAAOW,IAC/C06C,GAAYpyD,EAAAA,EAAAA,GAAS,CAAC,EAAGw2D,EAAW,CACxCx8C,MAAOjD,EAAOiD,MACd2X,OAAQq/B,GAAwBqB,kBAElCpgD,EAAOzB,QAAQ+f,aAAa,eAAgB6hC,EAAW9kC,EAAM,GAC5D,CAACrb,IACEwkD,EAAoBh0D,EAAAA,aAAkBsU,IAC1Co/C,EAAgB3lD,QAAUuG,CAAM,GAC/B,IACGu7C,EAAqB7vD,EAAAA,aAAkB,CAACsU,EAAQuW,KAC/CvW,EAAOo7C,YAGRlgD,EAAOzB,QAAQ+lD,WAAWx/C,EAAOW,MAAQg/B,GAAa6b,OAQ1D4D,EAAgB3lD,QAAU,KAC1B0lD,EAAa1lD,QAAUyb,YAAW,KAChC,IAAIyqC,EAEJ,GADAR,EAAa1lD,QAAU,MACmC,OAApDkmD,EAAwBP,EAAgB3lD,cAAmB,EAASkmD,EAAsBh/C,MAAQX,EAAOW,GAAI,CAEjH,IAAKzF,EAAOzB,QAAQkqB,OAAO3jB,EAAOW,IAChC,OAIF,GAAIzF,EAAOzB,QAAQ+lD,WAAWx/C,EAAOW,MAAQg/B,GAAa6b,KACxD,OAEF,MAAMiE,EAAYvkD,EAAOzB,QAAQmqB,aAAa5jB,EAAOW,IAC/C06C,GAAYpyD,EAAAA,EAAAA,GAAS,CAAC,EAAGw2D,EAAW,CACxCx8C,MAAOjD,EAAOiD,MACd2X,OAAQs/B,GAAuB0F,cAEjC1kD,EAAOzB,QAAQ+f,aAAa,cAAe6hC,EAAW9kC,EACxD,KACA,GACD,CAACrb,IACJxP,EAAAA,WAAgB,IACP,KACL2pB,aAAa8pC,EAAa1lD,QAAQ,GAEnC,IACH,MAAM0/C,EAAoBztD,EAAAA,aAAkB,CAACsU,EAAQuW,KACnD,GAAIvW,EAAOo5C,WAAazZ,GAAa0Z,KAAM,CAGzC,GAAoB,MAAhB9iC,EAAMklC,MACR,OAEF,IAAI7gC,EACJ,GAAkB,WAAdrE,EAAMtjB,IACR2nB,EAASs/B,GAAuB/Y,mBAC3B,GAAkB,UAAd5qB,EAAMtjB,IACf2nB,EAASs/B,GAAuBwB,kBAC3B,GAAkB,QAAdnlC,EAAMtjB,IAAe,CAC9B,MAAM66B,EAAevqB,GAAgCrI,GAAQmI,QAAOJ,GACnD/H,EAAOzB,QAAQyrB,UAAUjiB,GAC7BxR,OAAS80C,IAGbrrC,EAAOzB,QAAQuhD,eAAe9/C,EAAOzB,QAAQ4rB,cAAcrlB,EAAOW,GAAIsC,MAe/E,GAbIsT,EAAMgjC,SACJv5C,EAAOiD,QAAU6qB,EAAa,KAEhClT,EAASs/B,GAAuByB,iBAEzB37C,EAAOiD,QAAU6qB,EAAaA,EAAa7zB,OAAS,KAE7D2gB,EAASs/B,GAAuB0B,YAKlCrlC,EAAMyvB,kBACDprB,EAAQ,CACX,MAAMzQ,EAAQ2jB,EAAa9vB,WAAUiF,GAASA,IAAUjD,EAAOiD,QACzD48C,EAAmB/xB,EAAavX,EAAMgjC,SAAWpvC,EAAQ,EAAIA,EAAQ,GAC3EjP,EAAOzB,QAAQ09C,aAAan3C,EAAOW,GAAIk/C,EACzC,CACF,CACA,GAAIjlC,EAAQ,CACV,MAAMygC,GAAYpyD,EAAAA,EAAAA,GAAS,CAAC,EAAGiS,EAAOzB,QAAQmqB,aAAa5jB,EAAOW,IAAK,CACrEia,SACA3X,MAAOjD,EAAOiD,QAEhB/H,EAAOzB,QAAQ+f,aAAa,cAAe6hC,EAAW9kC,EACxD,CACF,MAAO,GAAIvW,EAAOo7C,WAAY,CAC5B,IAAIxgC,EAMJ,IALwB1f,EAAOzB,QAAQqjB,6BAA6B,mBAAmB,EAAM,CAC3FvG,QACA6T,WAAYpqB,EACZogC,SAAU,QAGV,OAYF,GAVInhB,GAAe1I,KAEPA,EAAM2I,SAAW3I,EAAM4I,UAA0B,MAAd5I,EAAMtjB,IADnD2nB,EAASq/B,GAAwB4B,iBAGV,UAAdtlC,EAAMtjB,IACf2nB,EAASq/B,GAAwByB,aACV,WAAdnlC,EAAMtjB,KAAkC,cAAdsjB,EAAMtjB,MAEzC2nB,EAASq/B,GAAwB6B,eAE/BlhC,EAAQ,CACV,MAAM6kC,EAAYvkD,EAAOzB,QAAQmqB,aAAa5jB,EAAOW,IAC/C06C,GAAYpyD,EAAAA,EAAAA,GAAS,CAAC,EAAGw2D,EAAW,CACxCx8C,MAAOjD,EAAOiD,MACdhQ,IAAKsjB,EAAMtjB,IACX2nB,WAEF1f,EAAOzB,QAAQ+f,aAAa,eAAgB6hC,EAAW9kC,EACzD,CACF,IACC,CAACrb,IACE4kD,EAAqBp0D,EAAAA,aAAkBsU,IAC3C,MAAM,GACJW,EAAE,MACFsC,EAAK,OACL2X,EAAM,IACN3nB,EAAG,QACHwP,GACEzC,EACE+/C,EAAyB,CAC7Bp/C,KACAq/C,aAAc/8C,GAEhB,GAAI2X,IAAWq/B,GAAwB4B,iBACrC,GAAInwD,EAAAA,QAAcuwD,WAAW,MAG3B8D,EAAuB7D,cAAgBj5C,MAClC,CACL,MAAMuhB,EAAS/hB,EAAQjE,MAAKwF,GAAOA,EAAIf,QAAUA,IACjD88C,EAAuBxR,aAAe/pB,EAAOY,YAAcZ,EAAOY,YAAYnyB,GAAOA,CACvF,MACS2nB,IAAWq/B,GAAwB6B,gBAC5CiE,EAAuB7D,cAAgBj5C,GAEzC/H,EAAOzB,QAAQwmD,iBAAiBF,EAAuB,GACtD,CAAC7kD,IACEglD,EAAoBx0D,EAAAA,aAAkBsU,IAC1C,MAAM,GACJW,EAAE,OACFia,EAAM,MACN3X,GACEjD,EAEJ,IAAIq8C,EADJnhD,EAAOzB,QAAQ6iD,gCAAgC37C,GAE3Cia,IAAWs/B,GAAuBwB,aACpCW,EAAmB,QACVzhC,IAAWs/B,GAAuB0B,WAC3CS,EAAmB,QACVzhC,IAAWs/B,GAAuByB,kBAC3CU,EAAmB,QAErB,MAAME,EAAiC,kBAAX3hC,EAC5B1f,EAAOzB,QAAQ0mD,gBAAgB,CAC7Bx/C,KACA47C,sBACAt5C,QACAo5C,oBACA,GACD,CAACnhD,IACJ2a,GAAuB3a,EAAQ,kBAAmBqkD,EAAmBpE,IACrEtlC,GAAuB3a,EAAQ,cAAeqkD,EAAmBG,IACjE7pC,GAAuB3a,EAAQ,eAAgBqkD,EAAmBhE,IAClE1lC,GAAuB3a,EAAQ,cAAeqkD,EAAmBpG,IACjEtjC,GAAuB3a,EAAQ,eAAgBqkD,EAAmBO,IAClEjqC,GAAuB3a,EAAQ,cAAeqkD,EAAmBW,IACjEhpC,GAAwBhc,EAAQ,eAAgBtT,EAAMw4D,gBACtDlpC,GAAwBhc,EAAQ,cAAetT,EAAMy4D,eACrD,MAAMb,EAAa9zD,EAAAA,aAAkBiV,IACnC,GAAI/Y,EAAMw4C,WAAaX,GAAcY,KACnC,OAAOV,GAAa6b,KAEtB,MAAMmB,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OAE9D,OADkBqhD,EAAah8C,IAAOjG,OAAOkX,KAAK+qC,EAAah8C,IAAK1G,OAAS,EAC1D0lC,GAAa0Z,KAAO1Z,GAAa6b,IAAI,GACvD,CAACtgD,EAAQtT,EAAMw4C,WACZkgB,GAAsBzD,EAAAA,GAAAA,IAAiBC,IAC3C,MAAMC,EAA8BD,IAAal1D,EAAMm3D,cACnDO,GAAyBvC,GAC3BuC,EAAsBxC,EAAU,CAAC,GAE/Bl1D,EAAMm3D,eAAiBhC,IAI3BiC,EAAiBlC,GACjBmC,EAAiBxlD,QAAUqjD,EAC3B5hD,EAAOzB,QAAQ+f,aAAa,sBAAuBsjC,GAAS,IAExDyD,EAA2B70D,EAAAA,aAAkB,CAACiV,EAAIs8C,KACtD,MAAMH,GAAW7zD,EAAAA,EAAAA,GAAS,CAAC,EAAGg2D,EAAiBxlD,SAC9B,OAAbwjD,EACFH,EAASn8C,IAAM1X,EAAAA,EAAAA,GAAS,CAAC,EAAGg0D,UAErBH,EAASn8C,GAElB2/C,EAAoBxD,EAAS,GAC5B,CAACwD,IACEE,EAAyB90D,EAAAA,aAAkB,CAACiV,EAAIs8C,KACpD/hD,EAAOzB,QAAQqC,UAASR,IACtB,MAAM+hD,GAAkBp0D,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMy+C,UAM3C,OALiB,OAAbkD,EACFI,EAAgB18C,GAAMs8C,SAEfI,EAAgB18C,IAElB1X,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBy+C,SAAUsD,GACV,IAEJniD,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,IACEkiD,EAA2B1xD,EAAAA,aAAkB,CAACiV,EAAIsC,EAAOg6C,KAC7D/hD,EAAOzB,QAAQqC,UAASR,IACtB,MAAM+hD,GAAkBp0D,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMy+C,UAW3C,OAViB,OAAbkD,EACFI,EAAgB18C,IAAM1X,EAAAA,EAAAA,GAAS,CAAC,EAAGo0D,EAAgB18C,GAAK,CACtD,CAACsC,IAAQha,EAAAA,EAAAA,GAAS,CAAC,EAAGg0D,aAGjBI,EAAgB18C,GAAIsC,GACqB,IAA5CvI,OAAOkX,KAAKyrC,EAAgB18C,IAAK1G,eAC5BojD,EAAgB18C,KAGpB1X,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBy+C,SAAUsD,GACV,IAEJniD,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,IACE+kD,EAAmBv0D,EAAAA,aAAkBsU,IACzC,MAAM,GACFW,GACEX,EACJ3S,GAAQC,EAAAA,EAAAA,GAA8B0S,EAAQzY,IAChD0zD,EAAiBt6C,EAAIg/B,GAAa6b,MAClC+E,EAAyB5/C,GAAI1X,EAAAA,EAAAA,GAAS,CACpCgN,KAAM0pC,GAAa0Z,MAClBhsD,GAAO,GACT,CAAC4tD,EAAkBsF,IAChBE,GAAgC5D,EAAAA,GAAAA,IAAiB78C,IACrD,MAAM,GACJW,EAAE,aACFq/C,EAAY,YACZ9D,EAAW,aACX3N,GACEvuC,EAEEi9C,EADev6C,EAAyBxH,GAChBiJ,QAAO,CAACC,EAAKnB,KAEzC,IADmB/H,EAAOzB,QAAQ4rB,cAAc1kB,EAAIsC,GACpCm4C,WACd,OAAOh3C,EAET,IAAI6gB,EAAW/pB,EAAOzB,QAAQ8jD,aAAa58C,EAAIsC,GAE3Cg8B,GAA+B,EAWnC,OAVI+gB,IAAiB/8C,IAAUi5C,GAAe3N,KAC5CtpB,EAAWi3B,EAAc,GAAK3N,EAC9BtP,GAA+B,GAEjC76B,EAAInB,GAAS,CACXxF,MAAOwnB,EACP5yB,OAAO,EACPqyB,mBAAmB,EACnBua,gCAEK76B,CAAG,GACT,CAAC,GACJo8C,EAAuB7/C,EAAIs8C,GACvB+C,GACF9kD,EAAOzB,QAAQ09C,aAAax2C,EAAIq/C,EAClC,IAEIG,EAAkBz0D,EAAAA,aAAkBsU,IACxC,MAAM,GACFW,GACEX,EACJ3S,GAAQC,EAAAA,EAAAA,GAA8B0S,EAAQigC,IAChDgb,EAAiBt6C,EAAIg/B,GAAa0Z,MAClCkH,EAAyB5/C,GAAI1X,EAAAA,EAAAA,GAAS,CACpCgN,KAAM0pC,GAAa6b,MAClBnuD,GAAO,GACT,CAAC4tD,EAAkBsF,IAChBG,GAA+B7D,EAAAA,GAAAA,IAAiB78C,IACpD,MAAM,GACJW,EAAE,oBACF47C,EACAt5C,MAAO09C,EAAY,iBACnBtE,EAAmB,QACjBr8C,EACJ9E,EAAOzB,QAAQ6iD,gCAAgC37C,GAC/C,MAAMigD,EAAoBA,KACC,SAArBvE,GAA+BsE,GACjCzlD,EAAOzB,QAAQikD,wBAAwB/8C,EAAIggD,EAActE,GAE3DmE,EAAuB7/C,EAAI,MAC3B4/C,EAAyB5/C,EAAI,KAAK,EAEpC,GAAI47C,EAEF,YADAqE,IAGF,MAAMjE,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OACxDhG,EAAM4F,EAAOzB,QAAQkqB,OAAOhjB,GAElC,GADmCjG,OAAOshB,OAAO2gC,EAAah8C,IAAK+qB,MAAKm1B,GAAcA,EAAWn8B,oBAG/F,YADAw6B,EAAkBzlD,QAAQkH,GAAI1K,KAAO0pC,GAAa0Z,MAIpD,GAD8B3+C,OAAOshB,OAAO2gC,EAAah8C,IAAK+qB,MAAKm1B,GAAcA,EAAWxuD,QAO1F,OALA6sD,EAAkBzlD,QAAQkH,GAAI1K,KAAO0pC,GAAa0Z,UAElDkH,EAAyB5/C,EAAI,CAC3B1K,KAAM0pC,GAAa0Z,OAIvB,MAAMsE,EAAYziD,EAAOzB,QAAQqnD,sCAAsCngD,GACvE,GAAI+5C,EAAkB,CACpB,MAAMmD,EAAcC,IAClBoB,EAAkBzlD,QAAQkH,GAAI1K,KAAO0pC,GAAa0Z,KAElDkH,EAAyB5/C,EAAI,CAC3B1K,KAAM0pC,GAAa0Z,OAEjBsB,EACFA,EAAwBmD,GAExB9D,IACF,EAEF,IACEjK,QAAQC,QAAQ0K,EAAiBiD,EAAWroD,IAAMq+C,MAAKoK,IACrD7iD,EAAOzB,QAAQukD,WAAW,CAACD,IAC3B6C,GAAmB,IAClB7lB,MAAM8iB,EACX,CAAE,MAAOC,GACPD,EAAYC,EACd,CACF,MACE5iD,EAAOzB,QAAQukD,WAAW,CAACL,IAC3BiD,GACF,IAkII3C,EAAoB,CACxB8C,2BAjIiCr1D,EAAAA,aAAkBsU,IACnD,MAAM,GACJW,EAAE,MACFsC,EAAK,MACLxF,EAAK,WACLgnB,EACAc,yBAA0B64B,GACxBp+C,EACJ+6C,EAAmBp6C,EAAIsC,GACvB,MAAMK,EAASpI,EAAOzB,QAAQyrB,UAAUjiB,GAClC3N,EAAM4F,EAAOzB,QAAQkqB,OAAOhjB,GAClC,IAAIwkB,EAAc1nB,EACd6F,EAAO8hB,cAAgBg5B,IACzBj5B,EAAc7hB,EAAO8hB,YAAY3nB,EAAOvC,EAAOzB,QAAQ4rB,cAAc1kB,EAAIsC,KAE3E,IAAI05C,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OACxD2hD,GAAWh0D,EAAAA,EAAAA,GAAS,CAAC,EAAG0zD,EAAah8C,GAAIsC,GAAQ,CACnDxF,MAAO0nB,EACPO,aAAcjB,EAAa,4BAA8B,qBAK3D,OAHKnhB,EAAO+6C,yBACVjB,EAAyBz8C,EAAIsC,EAAOg6C,GAE/B,IAAIlN,SAAQC,IACjB,MAAMgR,EAAW,GACjB,GAAI19C,EAAO+6C,wBAAyB,CAClC,MAAMC,EAAarB,EAASx/C,QAAUk/C,EAAah8C,GAAIsC,GAAOxF,MAC9Dw/C,GAAWh0D,EAAAA,EAAAA,GAAS,CAAC,EAAGg0D,EAAU,CAChCv4B,mBAAmB,IAErB04B,EAAyBz8C,EAAIsC,EAAOg6C,GACpC,MAAMkB,EAAmBxB,EAAah8C,GACpCsgD,GAAmB3zD,EAAAA,EAAAA,GAA8B6wD,EAAkB,CAACl7C,GAAOpD,IAAI8c,GAAAA,IAC3EukC,EAAUnR,QAAQC,QAAQ1sC,EAAO+6C,wBAAwB,CAC7D19C,KACArL,MACA1N,MAAOq1D,EACPqB,aACA2C,sBACEtN,MAAKwN,IAGHjmD,EAAOzB,QAAQ+lD,WAAW7+C,KAAQg/B,GAAa6b,MAInDmB,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,QACxD6lD,GAAiBl4D,EAAAA,EAAAA,GAAS,CAAC,EAAGk4D,EAAgB,CAC5Cz8B,mBAAmB,KAKNjnB,MAAQ6F,EAAO+6C,wBAA0B1B,EAAah8C,GAAIsC,GAAOxF,MAAQ0nB,EACxFi4B,EAAyBz8C,EAAIsC,EAAOk+C,IAXlCnR,GAAQ,EAWyC,IAErDgR,EAAS/gD,KAAKihD,EAChB,CACAxmD,OAAOoD,QAAQ6+C,EAAah8C,IAAK3N,SAAQnH,IAA6B,IAA3Bu1D,EAAWP,GAAWh1D,EAC/D,GAAIu1D,IAAcn+C,EAChB,OAEF,MAAMo+C,EAAcnmD,EAAOzB,QAAQyrB,UAAUk8B,GAC7C,IAAKC,EAAYhD,wBACf,OAEFwC,GAAa53D,EAAAA,EAAAA,GAAS,CAAC,EAAG43D,EAAY,CACpCn8B,mBAAmB,IAErB04B,EAAyBz8C,EAAIygD,EAAWP,GACxClE,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OACxD,MAAMgmD,EAAoB3E,EAAah8C,GACrCsgD,GAAmB3zD,EAAAA,EAAAA,GAA8Bg0D,EAAmB,CAACF,GAAWvhD,IAAI8c,GAAAA,IAChFukC,EAAUnR,QAAQC,QAAQqR,EAAYhD,wBAAwB,CAClE19C,KACArL,MACA1N,MAAOi5D,EACPvC,YAAY,EACZ2C,sBACEtN,MAAKwN,IAGHjmD,EAAOzB,QAAQ+lD,WAAW7+C,KAAQg/B,GAAa6b,MAInD2F,GAAiBl4D,EAAAA,EAAAA,GAAS,CAAC,EAAGk4D,EAAgB,CAC5Cz8B,mBAAmB,IAErB04B,EAAyBz8C,EAAIygD,EAAWD,IANtCnR,GAAQ,EAM6C,IAEzDgR,EAAS/gD,KAAKihD,EAAQ,IAExBnR,QAAQvI,IAAIwZ,GAAUrN,MAAK,KACrBz4C,EAAOzB,QAAQ+lD,WAAW7+C,KAAQg/B,GAAa0Z,MACjDsD,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OACxD00C,GAAS2M,EAAah8C,GAAIsC,GAAO5Q,QAEjC29C,GAAQ,EACV,GACA,GACF,GACD,CAAC90C,EAAQ6/C,EAAoBqC,IA4B9B0D,sCA3B4Cp1D,EAAAA,aAAkBiV,IAC9D,MAAMg8C,EAAe7C,GAA0B5+C,EAAOzB,QAAQ6B,OACxDhG,EAAM4F,EAAOzB,QAAQkqB,OAAOhjB,GAClC,IAAKg8C,EAAah8C,GAChB,OAAOzF,EAAOzB,QAAQkqB,OAAOhjB,GAE/B,IAAIg9C,GAAY10D,EAAAA,EAAAA,GAAS,CAAC,EAAGqM,GAY7B,OAXAoF,OAAOoD,QAAQ6+C,EAAah8C,IAAK3N,SAAQjH,IAAyB,IAAvBkX,EAAO49C,GAAW90D,EAC3D,MAAMuX,EAASpI,EAAOzB,QAAQyrB,UAAUjiB,GACpCK,EAAOi7C,YACTZ,EAAYr6C,EAAOi7C,YAAY,CAC7B9gD,MAAOojD,EAAWpjD,MAClBnI,IAAKqoD,IAGPA,EAAU16C,GAAS49C,EAAWpjD,KAChC,IAEKkgD,CAAS,GACf,CAACziD,KAUJwX,GAAiBxX,EATE,CACjBskD,aACAS,mBACAE,mBAMmC,UACrCztC,GAAiBxX,EAAQ+iD,EAAmB,WAC5CvyD,EAAAA,WAAgB,KACV2zD,GACFiB,EAAoBjB,EACtB,GACC,CAACA,EAAmBiB,IACvB50D,EAAAA,WAAgB,KACd,MAAM8yD,EAAe54C,GAAoC1K,GAGnDqmD,EAA0BrC,EAAkBzlD,QAClDylD,EAAkBzlD,QAAU2Y,GAAU2sC,GAEtCrkD,OAAOoD,QAAQihD,GAAe/rD,SAAQjK,IAAkB,IAAhB4X,EAAIX,GAAOjX,EACjD,IAAIy4D,EAAuB7C,EAC3B,MAAMC,GAAqE,OAAxD4C,EAAwBD,EAAwB5gD,SAAe,EAAS6gD,EAAsBvrD,OAAS0pC,GAAa6b,KACjIqD,EAAsD,OAAxCF,EAAmBH,EAAa79C,IAAeg+C,EAAmBh+C,EAClFX,EAAO/J,OAAS0pC,GAAa0Z,MAAQuF,IAAajf,GAAa6b,KACjEiF,GAA8Bx3D,EAAAA,EAAAA,GAAS,CACrC0X,GAAIk+C,GACH7+C,IACMA,EAAO/J,OAAS0pC,GAAa6b,MAAQoD,IAAajf,GAAa0Z,MACxEqH,GAA6Bz3D,EAAAA,EAAAA,GAAS,CACpC0X,GAAIk+C,GACH7+C,GACL,GACA,GACD,CAAC9E,EAAQ6jD,EAAe0B,EAA+BC,GAA8B,ECnjBxF5B,CAAkB5jD,EAAQtT,GAC1B,MAAM65D,EAAc/1D,EAAAA,OAAa,CAAC,IAEhCsvD,eAAgB0G,GACd95D,EACEozD,EAAiBtvD,EAAAA,aAAkBsU,IACnCmzB,GAAmBnzB,EAAO2f,aAGzB3f,EAAOwkB,OAAOiM,aAGdzwB,EAAOwkB,OAAO8M,kBAGfowB,GACKA,EAAmB1hD,OAG3B,CAAC0hD,IA2BJh2D,EAAAA,WAAgB,KACd,MAAMi2D,EAAYF,EAAYhoD,QAC9B,MAAO,KACLiB,OAAOoD,QAAQ6jD,GAAW3uD,SAAQnH,IAAkB,IAAhB8U,EAAIqrC,GAAOngD,EAC7C6O,OAAOkX,KAAKo6B,GAAQh5C,SAAQiQ,IAC1B,MAAO2R,GAAW+sC,EAAUhhD,GAAIsC,GAChCoS,aAAaT,UACN+sC,EAAUhhD,GAAIsC,EAAM,GAC3B,GACF,CACH,GACA,IACH,MAAMq5C,EAAkC5wD,EAAAA,aAAkB,CAACiV,EAAIsC,KAC7D,GAAKw+C,EAAYhoD,QAAQkH,GAGzB,GAAKsC,GAKE,GAAIw+C,EAAYhoD,QAAQkH,GAAIsC,GAAQ,CACzC,MAAO,CAAE2+C,GAAeH,EAAYhoD,QAAQkH,GAAIsC,GAChD2+C,GACF,OAPElnD,OAAOkX,KAAK6vC,EAAYhoD,QAAQkH,IAAK3N,SAAQ6uD,IAC3C,MAAO,CAAED,GAAeH,EAAYhoD,QAAQkH,GAAIkhD,GAChDD,GAAa,GAKjB,GACC,IACGt8B,EAAmB55B,EAAAA,aAAkBsU,IACzC,MAAM,GACJW,EAAE,MACFsC,EAAK,WACLwhB,GACEzkB,EACJ,OAAO,IAAI+vC,SAAQC,IA1DC8R,EAACnhD,EAAIsC,EAAOwhB,EAAYvI,KAC5C,IAAKuI,EAEH,YADAvI,IAMF,GAHKulC,EAAYhoD,QAAQkH,KACvB8gD,EAAYhoD,QAAQkH,GAAM,CAAC,GAEzB8gD,EAAYhoD,QAAQkH,GAAIsC,GAAQ,CAClC,MAAO2R,GAAW6sC,EAAYhoD,QAAQkH,GAAIsC,GAC1CoS,aAAaT,EACf,CAGA,MAMMA,EAAUM,YAAW,KACzBgH,WACOulC,EAAYhoD,QAAQkH,GAAIsC,EAAM,GACpCwhB,GACHg9B,EAAYhoD,QAAQkH,GAAIsC,GAAS,CAAC2R,EAVXmtC,KACrB,MAAOntC,GAAW6sC,EAAYhoD,QAAQkH,GAAIsC,GAC1CoS,aAAaT,GACbsH,WACOulC,EAAYhoD,QAAQkH,GAAIsC,EAAM,EAMmB,EAmCxD6+C,CAAcnhD,EAAIsC,EAAOwhB,GAAYO,UACnC,MAAMg9B,EAAyBp6D,EAAMw4C,WAAaX,GAAcyB,IAAMhmC,EAAOzB,QAAQsnD,2BAA6B7lD,EAAOzB,QAAQykD,4BAIjI,GAAIhjD,EAAOzB,QAAQyhD,YAAYv6C,EAAIsC,KAAWy8B,GAAc2Z,KAAM,CAChE,MAAM1sB,QAAeq1B,EAAuBhiD,GAC5CgwC,EAAQrjB,EACV,IACA,GACF,GACD,CAACzxB,EAAQtT,EAAMw4C,WACZ6hB,EAA0Bv2D,EAAAA,aAAkB,CAACiV,EAAIsC,IAC9Crb,EAAMw4C,WAAaX,GAAcY,KAAOnlC,EAAOzB,QAAQmkD,uCAAuCj9C,EAAIsC,GAAS/H,EAAOzB,QAAQqnD,sCAAsCngD,IACtK,CAACzF,EAAQtT,EAAMw4C,WACZ8hB,EAAkBx2D,EAAAA,aAAkB,CAACiV,EAAIsC,KAC7C,IAAIk/C,EAAuBhE,EAE3B,OAAqH,OAA7GgE,EAAiE,OAAxChE,EADZrE,GAA0B5+C,EAAOzB,QAAQ6B,OACGqF,SAAe,EAASw9C,EAAiBl7C,IAAkBk/C,EAAwB,IAAI,GACvJ,CAACjnD,IAOEknD,EAA0B,CAC9B9F,mCAEF5pC,GAAiBxX,EATQ,CACvB8/C,iBACA11B,mBACA28B,0BACAx8B,yBAA0By8B,GAKe,UAC3CxvC,GAAiBxX,EAAQknD,EAAyB,UAAU,EC9GjDC,GAAuBA,CAAC/mD,EAAO1T,EAAOsT,KACjDA,EAAOzB,QAAQ2f,OAAOjU,KAAO0sB,GAAwB,CACnD1sB,KAAMvd,EAAMud,KACZgoB,SAAUvlC,EAAMulC,SAChB5nB,QAAS3d,EAAM2d,QACfic,SAAU55B,EAAM45B,YAEXv4B,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB6J,KAAMmtB,GAAsB,CAC1Bp3B,SACAi3B,aAAcvqC,EAAM45B,SACpB+Q,YAAa3qC,EAAM2d,QACnBitB,aAAc,KACdC,mBAAoB,UAIb6vB,GAAcA,CAACpnD,EAAQtT,KASlC,MAAMksB,EAAS6K,GAAczjB,EAAQ,eAC/BqnD,EAAclN,GAAmBn6C,EAAQtT,GACzC46D,EAAe92D,EAAAA,OAAa0xC,KAAKqlB,OACjC7tC,EAAUyS,KACV1D,EAASj4B,EAAAA,aAAkBiV,IAC/B,MAAMuG,EAAQxB,GAAuBxK,GAAQyF,GAC7C,GAAIuG,EACF,OAAOA,EAET,MAAMssB,EAAOt4B,EAAOzB,QAAQipD,WAAW/hD,GACvC,OAAI6yB,GAAQL,GAAmBK,GACtB,CACL,CAAChC,IAAwB7wB,GAGtB,IAAI,GACV,CAACzF,IACEynD,EAAe/6D,EAAMulC,SACrBA,EAAWzhC,EAAAA,aAAkB4J,GAC7Bk8B,MAAyBl8B,EACpBA,EAAIk8B,IAETmxB,EACKA,EAAartD,GAEfA,EAAIqL,IACV,CAACgiD,IACE7/C,EAASpX,EAAAA,SAAc,IAAM62D,EAAYp9C,KAAKhB,QAAO,CAACC,EAAGrY,EAE5Doe,KAAU,IAFoD,GAC/DxJ,GACD5U,EAEC,OADAqY,EAAIzD,GAAMwJ,EACH/F,CAAG,GACT,CAAC,IAAI,CAACm+C,EAAYp9C,OACfy9C,EAAsBl3D,EAAAA,aAAkB3C,IAGxC,IAHyC,MAC7CuU,EAAK,SACLulD,GACD95D,EACC,MAAM+5D,EAAMA,KACVN,EAAa/oD,QAAU2jC,KAAKqlB,MAC5BvnD,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnD6J,KAAMmtB,GAAsB,CAC1Bp3B,SACAi3B,aAAcvqC,EAAM45B,SACpB+Q,YAAa3qC,EAAM2d,QACnBitB,aAAc1sB,GAAoB5K,GAClCu3B,mBAAoBvsB,GAA0BhL,SAGlDA,EAAOzB,QAAQ+f,aAAa,WAC5Bte,EAAOzB,QAAQiiB,aAAa,EAI9B,GAFA9G,EAAQhX,QACR1C,EAAOzB,QAAQ2f,OAAOjU,KAAO7H,GACxBulD,EAEH,YADAC,IAGF,MAAMC,EAA0Bn7D,EAAMo7D,gBAAkB5lB,KAAKqlB,MAAQD,EAAa/oD,SAC9EspD,EAA0B,EAC5BnuC,EAAQuS,MAAM47B,EAAyBD,GAGzCA,GAAK,GACJ,CAACl7D,EAAMo7D,eAAgBp7D,EAAM45B,SAAU55B,EAAM2d,QAASrK,EAAQ0Z,IAK3D07B,EAAU5kD,EAAAA,aAAkByZ,IAChC2O,EAAOR,MAAM,iCAAD/qB,OAAkC4c,EAAKlL,SACnD,MAAMqD,EAAQu0B,GAAwB,CACpC1sB,OACAgoB,SAAUvlC,EAAMulC,SAChB5nB,QAAS3d,EAAM2d,QACfic,SAAU55B,EAAM45B,WAEZyhC,EAAY/nD,EAAOzB,QAAQ2f,OAAOjU,KACxC7H,EAAMy0B,yBAA2BkxB,EAAUlxB,yBAC3C6wB,EAAoB,CAClBtlD,QACAulD,UAAU,GACV,GACD,CAAC/uC,EAAQlsB,EAAMulC,SAAUvlC,EAAM2d,QAAS3d,EAAM45B,SAAUohC,EAAqB1nD,IAC1E8iD,EAAatyD,EAAAA,aAAkBomC,IACnC,GAAIlqC,EAAM+xB,YAAcjE,GAAcsM,UAAY8P,EAAQ73B,OAAS,EACjE,MAAM,IAAIoC,MAAM,CAAC,6FAA8F,2FAA2F/B,KAAK,OAEjN,MAAM4oD,EAAuB,GAC7BpxB,EAAQ9+B,SAAQyhB,IACd,MAAM9T,EAAK8wB,GAAqBhd,EAAQ7sB,EAAMulC,SAAU,4DAClDxN,EAAUzkB,EAAOzB,QAAQipD,WAAW/hD,GAC1C,GAAkD,eAAlC,MAAXgf,OAAkB,EAASA,EAAQluB,MAAuB,CAE7D,MAAM0xD,EAAkBjoD,EAAOzB,QAAQ2f,OAAOrS,WACxCq8C,EAAYD,EAAgBE,SAAS1iD,GACvCyiD,IACFD,EAAgBE,SAAS1iD,IAAM1X,EAAAA,EAAAA,GAAS,CAAC,EAAGm6D,EAAW3uC,GAE3D,MACEyuC,EAAqBjjD,KAAKwU,EAC5B,IAEF,MAAMnX,ExDA4B+qC,KAIhC,IAJiC,cACrCib,EAAa,SACbn2B,EAAQ,QACR2E,GACDuW,EACC,IAAIkb,EAAuBC,EAAwBC,EACnD,GAAmC,SAA/BH,EAAcxxB,QAAQrgC,KACxB,MAAM,IAAI4K,MAAM,+EAKlB,MAAMqnD,EAAgB,IAAIxhD,IAC1B4vB,EAAQ9+B,SAAQyhB,IACd,MAAM9T,EAAK8wB,GAAqBhd,EAAQ0Y,EAAU,4DAC9Cu2B,EAAcxyC,IAAIvQ,GACpB+iD,EAAczhD,IAAItB,GAAI1X,EAAAA,EAAAA,GAAS,CAAC,EAAGy6D,EAAclmD,IAAImD,GAAK8T,IAE1DivC,EAAczhD,IAAItB,EAAI8T,EACxB,IAEF,MAAMkvC,EAAiB,CACrBlyD,KAAM,UACNqhC,QAAS,CACPC,OAAQ,IAAuE,OAAjEwwB,EAAwBD,EAAcxxB,QAAQgB,QAAQC,QAAkBwwB,EAAwB,IAC9GvwB,OAAQ,IAAwE,OAAlEwwB,EAAyBF,EAAcxxB,QAAQgB,QAAQE,QAAkBwwB,EAAyB,IAChHvwB,OAAQ,IAAwE,OAAlEwwB,EAAyBH,EAAcxxB,QAAQgB,QAAQG,QAAkBwwB,EAAyB,KAElHvwB,kBAAkBjqC,EAAAA,EAAAA,GAAS,CAAC,EAAGq6D,EAAcxxB,QAAQoB,mBAEjDvtB,GAAyB1c,EAAAA,EAAAA,GAAS,CAAC,EAAGq6D,EAAc39C,wBACpDE,GAAsB5c,EAAAA,EAAAA,GAAS,CAAC,EAAGq6D,EAAcz9C,qBACjD+9C,EAAgC,CACpC7wB,OAAQ,CAAC,EACTC,OAAQ,CAAC,EACTC,OAAQ,CAAC,GAQXywB,EAAc1wD,SAAQ,CAAC6wD,EAAYljD,KACjC,MAAMmjD,EAA4BH,EAAezwB,iBAAiBvyB,GAIlE,GAA2B,WAAvBkjD,EAAWE,QAAsB,CAGnC,GAAkC,WAA9BD,IAA2Cn+C,EAAuBhF,GACpE,OAaF,OARiC,MAA7BmjD,IACFF,EAA8BE,GAA2BnjD,IAAM,GAIjEgjD,EAAe7wB,QAAQG,OAAOhzB,KAAKU,UAC5BgF,EAAuBhF,eACvBkF,EAAoBlF,EAE7B,CACA,MAAMqjD,EAASr+C,EAAuBhF,GAGtC,GAAIqjD,EAeF,MAZkC,WAA9BF,GACFF,EAA8B3wB,OAAOtyB,IAAM,EAC3CgjD,EAAe7wB,QAAQE,OAAO/yB,KAAKU,IAIC,MAA7BmjD,GACPH,EAAe7wB,QAAQE,OAAO/yB,KAAKU,QAIrCgF,EAAuBhF,IAAM1X,EAAAA,EAAAA,GAAS,CAAC,EAAG+6D,EAAQH,IAOlB,WAA9BC,GACFF,EAA8B3wB,OAAOtyB,IAAM,EAC3CgjD,EAAe7wB,QAAQC,OAAO9yB,KAAKU,IAKC,MAA7BmjD,GACPH,EAAe7wB,QAAQC,OAAO9yB,KAAKU,GAIrCgF,EAAuBhF,GAAMkjD,EAC7Bh+C,EAAoBlF,GAAMA,CAAE,IAE9B,MAAMsjD,EAAgCvpD,OAAOkX,KAAKgyC,GAClD,IAAK,IAAIxmD,EAAI,EAAGA,EAAI6mD,EAA8BhqD,OAAQmD,GAAK,EAAG,CAChE,MAAM8mD,EAAaD,EAA8B7mD,GAC3C+mD,EAAcP,EAA8BM,GAC9CxpD,OAAOkX,KAAKuyC,GAAalqD,OAAS,IACpC0pD,EAAe7wB,QAAQoxB,GAAcP,EAAe7wB,QAAQoxB,GAAY7gD,QAAO1C,IAAOwjD,EAAYxjD,KAEtG,CACA,MAAO,CACLgF,yBACAE,sBACAisB,QAAS6xB,EACT5xB,yBAA0BuxB,EAAcvxB,yBACxCC,gCAAiCsxB,EAActxB,gCAC/CC,iCAAkCqxB,EAAcrxB,iCACjD,EwDzHemyB,CAAuB,CACnCtyB,QAASoxB,EACT/1B,SAAUvlC,EAAMulC,SAChBm2B,cAAepoD,EAAOzB,QAAQ2f,OAAOjU,OAEvCy9C,EAAoB,CAClBtlD,QACAulD,UAAU,GACV,GACD,CAACj7D,EAAM+xB,UAAW/xB,EAAMulC,SAAUy1B,EAAqB1nD,IACpDmpD,EAAe34D,EAAAA,aAAkB,KACrC,MAAM44D,EAAW99C,GAAuBtL,GAClC0O,EAAelE,GAAuBxK,GAC5C,OAAO,IAAIgH,IAAIoiD,EAASzkD,KAAIc,IAC1B,IAAIkJ,EACJ,MAAO,CAAClJ,EAA6C,OAAxCkJ,EAAmBD,EAAajJ,IAAekJ,EAAmB,CAAC,EAAE,IACjF,GACF,CAAC3O,IACEqpD,EAAe74D,EAAAA,aAAkB,IAAM0Z,GAAqBlK,IAAS,CAACA,IACtEspD,EAAe94D,EAAAA,aAAkB,IAAM8a,GAAuBtL,IAAS,CAACA,IACxEupD,EAAmC/4D,EAAAA,aAAkBiV,GAAMmC,EAAOnC,IAAK,CAACmC,IACxE4hD,EAA0Bh5D,EAAAA,aAAkB,CAACiV,EAAIgkD,KACrD,MAAMC,EAAc1pD,EAAOzB,QAAQipD,WAAW/hD,GAC9C,IAAKikD,EACH,MAAM,IAAIvoD,MAAM,wBAAD9T,OAAyBoY,EAAE,WAE5C,GAAyB,UAArBikD,EAAYnzD,KACd,MAAM,IAAI4K,MAAM,sDAElB,MAAMwoD,GAAU57D,EAAAA,EAAAA,GAAS,CAAC,EAAG27D,EAAa,CACxCE,iBAAkBH,IAEpBzpD,EAAOzB,QAAQqC,UAASR,IACfrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB6J,MAAMlc,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAM6J,KAAM,CAC7BY,MAAM9c,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAM6J,KAAKY,KAAM,CAClC,CAACpF,GAAKkkD,UAKd3pD,EAAOzB,QAAQiiB,cACfxgB,EAAOzB,QAAQ+f,aAAa,qBAAsBqrC,EAAQ,GACzD,CAAC3pD,IACEwnD,EAAah3D,EAAAA,aAAkBiV,IACnC,IAAI9U,EACJ,OAAmD,OAA3CA,EAAOia,GAAoB5K,GAAQyF,IAAe9U,EAAO,IAAI,GACpE,CAACqP,IACE6pD,EAAsBr5D,EAAAA,aAAkB28C,IAKxC,IALyC,sBAC7C9U,GAAwB,EAAI,QAC5BmF,EAAO,aACPssB,EAAY,eACZC,GACD5c,EACC,MAAMtiC,EAAOD,GAAoB5K,GACjC,IAAIzO,EACJ,GAAIu4D,EAAc,CAChB,MAAME,EAAYn/C,EAAK2yB,GACvB,IAAKwsB,EACH,MAAO,GAET,MAAMC,EAAe57C,GAAyBrO,GAC9CzO,EAAW,GAEX,IAAK,IAAI0d,EADUg7C,EAAannD,WAAU2C,GAAMA,IAAO+3B,IAAW,EACrCvuB,EAAQg7C,EAAalrD,QAAU8L,EAAKo/C,EAAah7C,IAAQ7D,MAAQ4+C,EAAU5+C,MAAO6D,GAAS,EAAG,CACzH,MAAMxJ,EAAKwkD,EAAah7C,GACnBopB,GAA0BJ,GAAmBptB,EAAKpF,KACrDlU,EAASwT,KAAKU,EAElB,CACF,MACElU,EAAW4mC,GAAuBttB,EAAM2yB,EAASnF,GAEnD,GAAI0xB,EAAgB,CAClB,MAAMr6C,EAAqBF,GAA+BxP,GAC1DzO,EAAWA,EAAS4W,QAAO+hD,IAA2C,IAAhCx6C,EAAmBw6C,IAC3D,CACA,OAAO34D,CAAQ,GACd,CAACyO,IACEmqD,EAAc35D,EAAAA,aAAkB,CAAC41B,EAAOgkC,KAC5C,MAAM9xB,EAAOt4B,EAAOzB,QAAQipD,WAAWphC,GACvC,IAAKkS,EACH,MAAM,IAAIn3B,MAAM,wBAAD9T,OAAyB+4B,EAAK,WAE/C,GAAIkS,EAAK+xB,SAAWh0B,GAClB,MAAM,IAAIl1B,MAAM,yEAElB,GAAkB,SAAdm3B,EAAK/hC,KACP,MAAM,IAAI4K,MAAM,gFAElBnB,EAAOzB,QAAQqC,UAASR,IACtB,MAAM8gB,EAAQtW,GAAoBxK,EAAOJ,EAAOzB,QAAQyH,YAAYqwB,IAC9Di0B,EAAUppC,EAAM3vB,SAChBg5D,EAAWD,EAAQxnD,WAAU1I,GAAOA,IAAQgsB,IAClD,IAAkB,IAAdmkC,GAAmBA,IAAaH,EAClC,OAAOhqD,EAETwY,EAAOR,MAAM,cAAD/qB,OAAe+4B,EAAK,cAAA/4B,OAAa+8D,IAC7C,MAAMI,EAAc,IAAIF,GAExB,OADAE,EAAYznD,OAAOqnD,EAAa,EAAGI,EAAYznD,OAAOwnD,EAAU,GAAG,KAC5Dx8D,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB6J,MAAMlc,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAM6J,KAAM,CAC7BY,MAAM9c,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAM6J,KAAKY,KAAM,CAClC,CAACwrB,KAAqBtoC,EAAAA,EAAAA,GAAS,CAAC,EAAGmzB,EAAO,CACxC3vB,SAAUi5D,SAIhB,IAEJxqD,EAAOzB,QAAQ+f,aAAa,UAAU,GACrC,CAACte,EAAQ4Y,IAqDN6xC,EAAS,CACbhiC,SACAwJ,WACAk3B,eACAE,eACAC,eACAlU,UACA0N,aACA0E,aACA+B,mCACAmB,qBA9DkBl6D,EAAAA,aAAkB,CAACs+C,EAAkBqG,KACvD,GAAIzoD,EAAM+xB,YAAcjE,GAAcsM,UAAYquB,EAAQp2C,OAAS,EACjE,MAAM,IAAIoC,MAAM,CAAC,2FAA4F,2FAA2F/B,KAAK,OAE/M,GAAuB,IAAnB+1C,EAAQp2C,OACV,OAGF,GADkBmM,GAAgClL,GAClC,EACd,MAAM,IAAImB,MAAM,2FAElB,MAAM0J,GAAO9c,EAAAA,EAAAA,GAAS,CAAC,EAAG6c,GAAoB5K,IACxCyK,GAAyB1c,EAAAA,EAAAA,GAAS,CAAC,EAAGyc,GAAuBxK,IAC7D2K,GAAsB5c,EAAAA,EAAAA,GAAS,CAAC,EAAG2c,GAAoC1K,IACvE2qD,EAAY9/C,EAAKwrB,IACjBu0B,EAAoB,IAAID,EAAUp5D,UACxC,IAAK,IAAI2Q,EAAI,EAAGA,EAAIizC,EAAQp2C,OAAQmD,GAAK,EAAG,CAC1C,MAAMs0B,EAAW2e,EAAQjzC,GACnBkkB,EAAQmQ,GAAqBC,EAAU9pC,EAAMulC,SAAU,8DACtD44B,GAAiBD,EAAkB7nD,OAAO+rC,EAAmB5sC,EAAG,EAAGkkB,UACnE3b,EAAuBogD,UACvBlgD,EAAoBkgD,UACpBhgD,EAAKggD,GACZ,MAAMC,EAAoB,CACxBrlD,GAAI2gB,EACJhb,MAAO,EACPi/C,OAAQh0B,GACR9/B,KAAM,OACNw0D,YAAa,MAEftgD,EAAuB2b,GAASoQ,EAChC7rB,EAAoByb,GAASA,EAC7Bvb,EAAKub,GAAS0kC,CAChB,CACAjgD,EAAKwrB,KAAsBtoC,EAAAA,EAAAA,GAAS,CAAC,EAAG48D,EAAW,CACjDp5D,SAAUq5D,IAIZ,MAAMr/C,EAAaq/C,EAAkBziD,QAAO+hD,GAAkC,SAAvBr/C,EAAKq/C,GAAS3zD,OACrEyJ,EAAOzB,QAAQ2f,OAAOjU,KAAKQ,uBAAyBA,EACpDzK,EAAOzB,QAAQ2f,OAAOjU,KAAKU,oBAAsBA,EACjD3K,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnD6J,MAAMlc,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAM6J,KAAM,CAC7BQ,yBACAE,sBACAY,aACAV,aAGJ7K,EAAOzB,QAAQ+f,aAAa,UAAU,GACrC,CAACte,EAAQtT,EAAM+xB,UAAW/xB,EAAMulC,YAa7B+4B,EAAY,CAChBb,cACAX,0BACAK,uBAMIoB,EAAYz6D,EAAAA,aAAkB,KAElC,IAAI4R,EADJwW,EAAOP,KAAK,uEAKVjW,EAHEpC,EAAOzB,QAAQ2f,OAAOjU,KAAK4sB,2BAA6BnqC,EAAMud,MAGxDlc,EAAAA,EAAAA,GAAS,CAAC,EAAGiS,EAAOzB,QAAQ2f,OAAOjU,KAAM,CAC/C2sB,QAAS,CACPrgC,KAAM,OACN0T,KAAMqB,GAAuBtL,MAOzB22B,GAAwB,CAC9B1sB,KAAMvd,EAAMud,KACZgoB,SAAUvlC,EAAMulC,SAChB5nB,QAAS3d,EAAM2d,QACfic,SAAU55B,EAAM45B,WAGpBohC,EAAoB,CAClBtlD,QACAulD,UAAU,GACV,GACD,CAAC/uC,EAAQ5Y,EAAQtT,EAAMud,KAAMvd,EAAMulC,SAAUvlC,EAAM2d,QAAS3d,EAAM45B,SAAUohC,IACzEwD,EAAgC16D,EAAAA,aAAkBotB,IACnC,oBAAfA,GACFqtC,GACF,GACC,CAACA,IACEE,EAA+B36D,EAAAA,aAAkB,KAGjDwP,EAAOzB,QAAQkkB,kBAAkB,aAAe3X,GAA4B9K,IAC9EirD,GACF,GACC,CAACjrD,EAAQirD,IACZtwC,GAAuB3a,EAAQ,gCAAiCkrD,GAChEvwC,GAAuB3a,EAAQ,6BAA8BmrD,GAK7D,MAAMC,EAA4B56D,EAAAA,aAAkB,KAClDwP,EAAOzB,QAAQqC,UAASR,IACtB,MAAMg6C,EAAWp6C,EAAOzB,QAAQqjB,6BAA6B,cAAe,CAC1E/W,KAAMD,GAAoBxK,EAAOJ,EAAOzB,QAAQyH,YAChDiF,WAAYD,GAA0B5K,EAAOJ,EAAOzB,QAAQyH,YAC5DuF,WAAYD,GAAuBlL,EAAOJ,EAAOzB,QAAQyH,YACzDyE,uBAAwBD,GAAuBpK,EAAOJ,EAAOzB,QAAQyH,YACrE2E,oBAAqBD,GAAoCtK,EAAOJ,EAAOzB,QAAQyH,cAEjF,OAAOjY,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB6J,MAAMlc,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAM6J,KAAMmwC,EAAU,CACvC7vC,sBAAuBysB,GAAoB,CACzCnsB,KAAMuvC,EAASvvC,KACfosB,aAAcvqC,EAAM45B,cAGxB,IAEJtmB,EAAOzB,QAAQ+f,aAAa,WAC5Bte,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,EAAQtT,EAAM45B,WAClBsa,GAA2B5gC,EAAQ,cAAeorD,GAClD5zC,GAAiBxX,EAAQyqD,EAAQ,UACjCjzC,GAAiBxX,EAAQgrD,EAAWt+D,EAAM+xB,YAAcjE,GAAcsM,SAAW,UAAY,UAI7F,MAAMpP,EAAgBlnB,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACd,GAAIknB,EAAcnZ,QAEhB,YADAmZ,EAAcnZ,SAAU,GAG1B,MAAM8sD,EAA2BrrD,EAAOzB,QAAQ2f,OAAOjU,KAAK4sB,2BAA6BnqC,EAAMud,KACzFqhD,EAA6BtrD,EAAOzB,QAAQ2f,OAAOjU,KAAK6sB,kCAAoCpqC,EAAM2d,QAClGkhD,EAA8BvrD,EAAOzB,QAAQ2f,OAAOjU,KAAK8sB,mCAAqCrqC,EAAM45B,SAG1G,GAAI+kC,EAqBF,OAnBKC,IACHtrD,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnD6J,MAAMlc,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAM6J,KAAM,CAC7BI,QAAS3d,EAAM2d,cAGnBrK,EAAOzB,QAAQ2f,OAAOjU,KAAK6sB,gCAAkCpqC,EAAM2d,QACnErK,EAAOzB,QAAQiiB,oBAEZ+qC,IACHvrD,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnD6J,MAAMlc,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAM6J,KAAM,CAC7BE,cAAewL,KAAKhkB,IAAIjF,EAAM45B,UAAY,EAAGlmB,EAAM6J,KAAKE,eACxDI,sBAAuBoL,KAAKhkB,IAAIjF,EAAM45B,UAAY,EAAGlmB,EAAM6J,KAAKM,6BAGpEvK,EAAOzB,QAAQ2f,OAAOjU,KAAK8sB,iCAAmCrqC,EAAM45B,SACpEtmB,EAAOzB,QAAQiiB,gBAInB5H,EAAOR,MAAM,iCAAD/qB,OAAkCX,EAAMud,KAAKlL,SACzD2oD,EAAoB,CAClBtlD,MAAOu0B,GAAwB,CAC7B1sB,KAAMvd,EAAMud,KACZgoB,SAAUvlC,EAAMulC,SAChB5nB,QAAS3d,EAAM2d,QACfic,SAAU55B,EAAM45B,WAElBqhC,UAAU,GACV,GACD,CAACj7D,EAAMud,KAAMvd,EAAM45B,SAAU55B,EAAMulC,SAAUvlC,EAAM2d,QAASuO,EAAQ8uC,EAAqB1nD,GAAQ,ECrXhGwrD,GAA4B1mD,GACJ,SAAxBA,EAAO8xB,QAAQrgC,KAnEK0T,KACxB,MAAMY,EAAO,CACX,CAACwrB,KAAqBtoC,EAAAA,EAAAA,GAAS,CAAC,EzDAN,CAC5BwI,KAAM,QACNkP,GAAI4wB,GACJjrB,OAAQ,EACRqgD,cAAe,KACfV,YAAa,KACb7yB,iBAAiB,EACjB3mC,SAAU,GACVm6D,iBAAkB,CAAC,EACnB9B,kBAAkB,EAClBS,OAAQ,MyDV+C,CACnD94D,SAAU0Y,KAGd,IAAK,IAAI/H,EAAI,EAAGA,EAAI+H,EAAKlL,OAAQmD,GAAK,EAAG,CACvC,MAAMkkB,EAAQnc,EAAK/H,GACnB2I,EAAKub,GAAS,CACZ3gB,GAAI2gB,EACJhb,MAAO,EACPi/C,OAAQh0B,GACR9/B,KAAM,OACNw0D,YAAa,KAEjB,CACA,MAAO,CACLhgD,aAAc6T,GACd/T,OACAI,WAAY,CACV,EAAGhB,EAAKlL,QAEVwM,WAAYtB,EACb,EA6CQ0hD,CAAkB7mD,EAAO8xB,QAAQ3sB,MA3ClBtZ,KAGpB,IAHqB,aACzB2mC,EAAY,QACZM,GACDjnC,EACC,MAAMka,GAAO9c,EAAAA,EAAAA,GAAS,CAAC,EAAGupC,GACpBs0B,EAA2B,CAAC,EAClC,IAAK,IAAI1pD,EAAI,EAAGA,EAAI01B,EAAQG,OAAOh5B,OAAQmD,GAAK,EAAG,CACjD,MAAM2pD,EAAaj0B,EAAQG,OAAO71B,GAClC0pD,EAAyBC,IAAc,SAChChhD,EAAKghD,EACd,CACA,IAAK,IAAI3pD,EAAI,EAAGA,EAAI01B,EAAQC,OAAO94B,OAAQmD,GAAK,EAAG,CACjD,MAAM4pD,EAAal0B,EAAQC,OAAO31B,GAClC2I,EAAKihD,GAAc,CACjBrmD,GAAIqmD,EACJ1gD,MAAO,EACPi/C,OAAQh0B,GACR9/B,KAAM,OACNw0D,YAAa,KAEjB,CAIA,MAAMJ,EAAY9/C,EAAKwrB,IACvB,IAAIu0B,EAAoB,IAAID,EAAUp5D,YAAaqmC,EAAQC,QAO3D,OANIr4B,OAAOshB,OAAO8qC,GAA0B7sD,SAC1C6rD,EAAoBA,EAAkBziD,QAAO1C,IAAOmmD,EAAyBnmD,MAE/EoF,EAAKwrB,KAAsBtoC,EAAAA,EAAAA,GAAS,CAAC,EAAG48D,EAAW,CACjDp5D,SAAUq5D,IAEL,CACL7/C,aAAc6T,GACd/T,OACAI,WAAY,CACV,EAAG2/C,EAAkB7rD,QAEvBwM,WAAYq/C,EACb,EAMMmB,CAAkB,CACvBz0B,aAAcxyB,EAAOwyB,aACrBM,QAAS9yB,EAAO8xB,QAAQgB,UCvErB,SAASo0B,GAA+BC,EAAM96D,GACnD,OAAO86D,EAAKC,QAAQ,IAAD7+D,OAAK8D,GAC1B,CAeA,SAASg7D,GAA+BC,GACtC,OAAOA,EAAQ52C,QAAQ,SAAU,OACnC,CAIA,SAAS62C,GAA0B5mD,GACjC,MAAO,IAAPpY,OAAWkL,EAAY6B,IAAG,cAAA/M,OAAa8+D,GAA+Bl/B,OAAOxnB,IAAI,KACnF,CCxBO,MAAM6mD,WAA0BnrD,OAUhC,SAASorD,GAAiBvsD,EAAQtT,GACvC,MAAM,SACJulC,GACEvlC,EACE8/D,EAAwBh8D,EAAAA,aAAkBuX,IAAS,CACvDA,QACAuhB,OAAQtpB,EAAOzB,QAAQyrB,UAAUjiB,MAC/B,CAAC/H,IACC0oB,EAAel4B,EAAAA,aAAkBiV,IACrC,MAAMrL,EAAM4F,EAAOzB,QAAQkqB,OAAOhjB,GAClC,IAAKrL,EACH,MAAM,IAAIkyD,GAAkB,mBAADj/D,OAAoBoY,EAAE,WAOnD,MALe,CACbA,KACA8B,QAASvH,EAAOzB,QAAQkuD,gBACxBryD,MAEW,GACZ,CAAC4F,IACE0sD,EAAoBl8D,EAAAA,aAAkB,CAACiV,EAAIsC,KAC/C,MAAM3N,EAAM4F,EAAOzB,QAAQkqB,OAAOhjB,GAC5Bgf,EAAUzkB,EAAOzB,QAAQipD,WAAW/hD,GAC1C,IAAKrL,IAAQqqB,EACX,MAAM,IAAI6nC,GAAkB,mBAADj/D,OAAoBoY,EAAE,WAEnD,MAAMknD,EAAY/6C,GAAsB5R,GAClC4sD,EAAex6C,GAAyBpS,GAa9C,MAZe,CACbyF,KACAsC,QACA3N,MACAqqB,UACAliB,MAAOnI,EAAI2N,GACXuhB,OAAQtpB,EAAOzB,QAAQyrB,UAAUjiB,GACjCm2C,SAAUl+C,EAAOzB,QAAQyhD,YAAYv6C,EAAIsC,GACzC4W,IAAK3e,EAAOzB,QACZmmB,SAAwB,OAAdioC,GAAsBA,EAAU5kD,QAAUA,GAAS4kD,EAAUlnD,KAAOA,EAC9E0M,SAAUy6C,GAAgBA,EAAa7kD,QAAUA,GAAS6kD,EAAannD,KAAOA,EAAK,GAAK,EAE7E,GACZ,CAACzF,IACEmqB,EAAgB35B,EAAAA,aAAkB,CAACiV,EAAIsC,KAC3C,MAAMuhB,EAAStpB,EAAOzB,QAAQyrB,UAAUjiB,GAClCxF,EAAQvC,EAAOzB,QAAQ8jD,aAAa58C,EAAIsC,GACxC3N,EAAM4F,EAAOzB,QAAQkqB,OAAOhjB,GAC5Bgf,EAAUzkB,EAAOzB,QAAQipD,WAAW/hD,GAC1C,IAAKrL,IAAQqqB,EACX,MAAM,IAAI6nC,GAAkB,mBAADj/D,OAAoBoY,EAAE,WAEnD,MAAMknD,EAAY/6C,GAAsB5R,GAClC4sD,EAAex6C,GAAyBpS,GACxC8E,EAAS,CACbW,KACAsC,QACA3N,MACAqqB,UACA6E,SACA40B,SAAUl+C,EAAOzB,QAAQyhD,YAAYv6C,EAAIsC,GACzC2c,SAAwB,OAAdioC,GAAsBA,EAAU5kD,QAAUA,GAAS4kD,EAAUlnD,KAAOA,EAC9E0M,SAAUy6C,GAAgBA,EAAa7kD,QAAUA,GAAS6kD,EAAannD,KAAOA,EAAK,GAAK,EACxFlD,QACAy5B,eAAgBz5B,EAChB29C,YAAY,GAWd,OATI52B,GAAUA,EAAOoR,iBACnB51B,EAAOk3B,eAAiB1S,EAAOoR,eAAe,CAC5Cj1B,KACAsC,MAAOjD,EAAOiD,MACdxF,MAAOuC,EAAOvC,MACdoc,IAAK3e,EAAOzB,WAGhBuG,EAAOo7C,WAAa52B,GAAUtpB,EAAOzB,QAAQuhD,eAAeh7C,GACrDA,CAAM,GACZ,CAAC9E,IACEqiD,EAAe7xD,EAAAA,aAAkB,CAACiV,EAAIsC,KAC1C,MAAMuhB,EAAStpB,EAAOzB,QAAQyrB,UAAUjiB,GACxC,IAAKuhB,IAAWA,EAAO8R,YAAa,CAClC,MAAM5E,EAAWx2B,EAAOzB,QAAQkqB,OAAOhjB,GACvC,IAAK+wB,EACH,MAAM,IAAI81B,GAAkB,mBAADj/D,OAAoBoY,EAAE,WAEnD,OAAO+wB,EAASzuB,EAClB,CACA,OAAOuhB,EAAO8R,YAAYsxB,EAAkBjnD,EAAIsC,GAAO,GACtD,CAAC/H,EAAQ0sD,IACNl7B,EAAchhC,EAAAA,aAAkB,CAAC4J,EAAKkvB,KAC1C,IAAIujC,EACJ,MAAMpnD,EAAK6wB,MAAyBl8B,EAAMA,EAAIk8B,IAAoF,OAA1Du2B,EAAwB,MAAZ56B,OAAmB,EAASA,EAAS73B,IAAgByyD,EAAYzyD,EAAIqL,GACnJsC,EAAQuhB,EAAOvhB,MACrB,OAAKuhB,GAAWA,EAAO8R,YAGhB9R,EAAO8R,YAAYsxB,EAAkBjnD,EAAIsC,IAFvC3N,EAAI2N,EAE0C,GACtD,CAAC2kD,EAAmBz6B,IACjB2C,EAAuBpkC,EAAAA,aAAkB,CAAC4J,EAAKkvB,KACnD,IAAI34B,EACJ,MAAM4R,EAAQivB,EAAYp3B,EAAKkvB,GAC/B,IAAKA,IAAWA,EAAOoR,eACrB,OAAOn4B,EAET,MAAMkD,EAAmD,OAA7C9U,EAAOshC,EAAWA,EAAS73B,GAAOA,EAAIqL,IAAc9U,EAAOyJ,EAAIk8B,IACrEvuB,EAAQuhB,EAAOvhB,MACrB,OAAOuhB,EAAOoR,eAAe,CAC3Bj1B,KACAsC,QACAxF,QACAoc,IAAK3e,EAAOzB,SACZ,GACD,CAACyB,EAAQiyB,EAAUT,IAChBzI,EAAyBv4B,EAAAA,aAAkBuX,GAC1C/H,EAAOzB,QAAQgP,eAAehP,QDvGhC,SAAoC3R,EAAMmb,GAC/C,OAAOnb,EAAKq4B,cAAc,qCAAD53B,OAAsC8+D,GAA+BpkD,GAAM,MACtG,CCwGW+kD,CAA2B9sD,EAAOzB,QAAQgP,eAAehP,QAASwJ,GAFhE,MAGR,CAAC/H,IACE+sD,EAAgBv8D,EAAAA,aAAkBiV,GACjCzF,EAAOzB,QAAQgP,eAAehP,QDvGhC,SAA2B3R,EAAM6Y,GACtC,OAAO7Y,EAAKq4B,cAAconC,GAA0B5mD,GACtD,CCwGWunD,CAAkBhtD,EAAOzB,QAAQgP,eAAehP,QAASkH,GAFvD,MAGR,CAACzF,IACE8kB,EAAiBt0B,EAAAA,aAAkB,CAACiV,EAAIsC,IACvC/H,EAAOzB,QAAQgP,eAAehP,QD1GhC,SAA4B3R,EAAI+D,GAGpC,IAHsC,GACvC8U,EAAE,MACFsC,GACDpX,EACC,MAAMs8D,EAAcZ,GAA0B5mD,GACxCynD,EAAe,IAAH7/D,OAAOkL,EAAYY,KAAI,iBAAA9L,OAAgB8+D,GAA+BpkD,GAAM,MACxF9H,EAAW,GAAH5S,OAAM4/D,EAAW,KAAA5/D,OAAI6/D,GACnC,OAAOtgE,EAAKq4B,cAAchlB,EAC5B,CCqGWktD,CAAmBntD,EAAOzB,QAAQgP,eAAehP,QAAS,CAC/DkH,KACAsC,UAJO,MAMR,CAAC/H,IAYJwX,GAAiBxX,EAXC,CAChBqiD,eACAl4B,gBACArF,iBACA0M,cACAoD,uBACAlM,eACAqkC,gBACAP,wBACAzjC,0BAEkC,SACtC,CC/IA,MAAMqkC,GAA6BA,CAACC,EAAoBC,IAC5B,MAAtBD,GAGAnuD,MAAMC,QAAQkuD,GAFTA,EAKLC,GAAsBA,EAAmB,KAAOD,EAC3CC,EAEF,CAACD,GAEGE,GAA+BA,CAACntD,EAAO1T,KAClD,IAAI8gE,EACJ,OAAOz/D,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBylB,aAAcn5B,EAAMm5B,cAAgG,OAAhF2nC,EAAwBJ,GAA2B1gE,EAAM+gE,oBAA8BD,EAA6B,IACxJ,ECdSE,GAAmCA,CAAC1tD,EAAQtT,KACvD,MAGMoG,EAhBkB5F,KACxB,MAAM,QACJ4F,GACE5F,EACJ,OAAOsD,EAAAA,SAAc,KAKZuC,EAAAA,EAAAA,GAJO,CACZwG,aAAc,CAAC,gBACfK,qBAAsB,CAAC,yBAEItB,EAAyBxF,IACrD,CAACA,GAAS,EAMGE,CAHG,CACjBF,QAASpG,EAAMoG,UAGX66D,EAAwBn9D,EAAAA,aAAkBiX,IAC9C,MAAMmmD,GAAkB7/D,EAAAA,EAAAA,GAAS,CAAC,EAAGitC,GAAiC,CACpE6yB,cAAe/6D,EAAQyG,aACvBu0D,gBAAiBh7D,EAAQ8G,qBACzB2jC,WAAYv9B,EAAOzB,QAAQ6kB,cAAc,iCAErC2qC,EAA4BrhE,EAAMshE,kBAClCC,EAA4E,MAAtDxmD,EAAaG,OAAOmzB,IAUhD,OATIgzB,IAA8BE,GAChCxmD,EAAaG,OAAOmzB,IAAiC6yB,EACrDnmD,EAAaC,cAAgB,CAACqzB,MAAkCtzB,EAAaC,iBACnEqmD,GAA6BE,UAChCxmD,EAAaG,OAAOmzB,IAC3BtzB,EAAaC,cAAgBD,EAAaC,cAAcS,QAAOJ,GAASA,IAAUgzB,MACzEgzB,GAA6BE,IACtCxmD,EAAaG,OAAOmzB,KAAiChtC,EAAAA,EAAAA,GAAS,CAAC,EAAG6/D,EAAiBnmD,EAAaG,OAAOmzB,MAElGtzB,CAAY,GAClB,CAACzH,EAAQlN,EAASpG,EAAMshE,oBAC3BttB,GAA6B1gC,EAAQ,iBAAkB2tD,EAAsB,EC3BlEO,GAA0BA,CAAC9tD,EAAO1T,KAC7C,IAAIiE,EAAMw9D,EAAkB9d,EAC5B,MAAMxhC,EAAqP,OAAxOle,EAA+C,OAAvCw9D,EAAmBzhE,EAAMmiB,WAAqBs/C,EAAiE,OAA7C9d,EAAsB3jD,EAAM2gD,eAAgF,OAAtDgD,EAAsBA,EAAoBjiC,cAAmB,EAASiiC,EAAoBxhC,WAAqBle,EAAO,GACzQ,OAAO5C,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBgO,QAAS,CACPS,UAAWgc,GAAkBhc,EAAWniB,EAAMo+B,+BAC9Cvc,WAAY,KAEd,ECTJ,SAAS6/C,GAAelgB,GACtB,MAAM,aACJmgB,EAAY,UACZC,EAAS,aACTjY,EAAY,UACZkY,GACErgB,EACEsgB,EAAgBD,EAAYlY,EAGlC,OAAIA,EAAegY,EACVE,EAELC,EAAgBH,EAAeC,EAC1BE,EAAgBH,EAErBE,EAAYD,EACPC,OADT,CAIF,C,4CClCO,MAAME,GAA2B,CAEtCC,YAAa,UACbC,sBAAuB,oBAEvBC,eAAgB,UAChBC,oBAAqB,UACrBC,sBAAuB,UACvBC,uBAAwB,WACxBC,0BAA2B,cAE3BC,eAAgB,UAChBC,oBAAqB,iBAErBC,eAAgB,UAChBC,oBAAqB,eACrBC,0BAA2B,eAC3BC,0BAA2B,eAC3BC,4BAA6BC,GAAuB,GAAHniE,OAAMmiE,EAAP,IAAVA,EAAsB,kBAA4B,kBAExFC,8BAA+B,eAC/BC,wBAAyB,SACzBC,kCAAmC,QAEnCC,cAAe,SACfC,mBAAoB,SACpBC,iBAAkB,kBAClBC,mBAAoB,QACpBC,mBAAoB,oBAEpBC,2BAA4B,cAC5BC,iCAAkC,eAClCC,0BAA2B,iBAC3BC,0BAA2B,WAC3BC,0BAA2B,WAE3BC,qBAAsB,aACtBC,qBAAsB,aACtBC,2BAA4B,SAC5BC,yBAA0B,iBAC1BC,oBAAqB,WACrBC,uBAAwB,MACxBC,sBAAuB,KACvBC,mBAAoB,UACpBC,sBAAuB,QACvBC,4BAA6B,eAE7BC,uBAAwB,WACxBC,qBAAsB,SACtBC,yBAA0B,cAC1BC,uBAAwB,YACxBC,iBAAkB,KAClBC,kBAAmB,SACnBC,oBAAqB,WACrBC,wBAAyB,iBACzBC,qBAAsB,YACtBC,yBAA0B,kBAC1BC,sBAAuB,WACvBC,yBAA0B,eAC1BC,sBAAuB,YACvB,kBAAmB,IACnB,mBAAoB,KACpB,kBAAmB,IACnB,mBAAoB,KACpB,kBAAmB,IACnB,mBAAoB,KAEpBC,6BAA8B,WAC9BC,2BAA4B,SAC5BC,+BAAgC,cAChCC,6BAA8B,YAC9BC,uBAAwB,KACxBC,wBAAyB,SACzBC,0BAA2B,WAC3BC,8BAA+B,iBAC/BC,2BAA4B,YAC5BC,+BAAgC,kBAChCC,4BAA6B,WAC7BC,+BAAgC,eAChCC,4BAA6B,YAC7B,wBAAyB,SACzB,yBAA0B,aAC1B,wBAAyB,eACzB,yBAA0B,2BAC1B,wBAAyB,YACzB,yBAA0B,wBAE1BC,eAAgB,MAChBC,gBAAiB,OACjBC,iBAAkB,QAElBC,gBAAiB,OACjBC,sBAAuB,eACvBC,wBAAyB,iBACzBC,iBAAkB,SAClBC,qBAAsB,cACtBC,iBAAkB,SAClBC,kBAAmB,cACnBC,mBAAoB,eAEpBC,iCAAkC7D,GAAuB,GAAHniE,OAAMmiE,EAAP,IAAVA,EAAsB,kBAA4B,kBAC7F8D,yBAA0B,eAC1BC,0BAA2B,OAE3BC,kBAAmBhE,GAAuB,GAAHniE,OAAMmiE,EAAMtuB,iBAAb,IAAVsuB,EAAuC,iBAA4C,iBAE/GiE,gBAAiB,cAEjBC,uBAAwBA,CAACC,EAAcC,IAAe,GAALvmE,OAAQsmE,EAAazyB,iBAAgB,QAAA7zC,OAAOumE,EAAW1yB,kBAExG2yB,4BAA6B,qBAC7BC,+BAAgC,kBAChCC,iCAAkC,oBAClCC,2BAA4B,aAC5BC,6BAA8B,eAE9BC,qBAAsB,MACtBC,sBAAuB,KAEvBC,gBAAiB,OAEjBC,UAAW,cACXC,WAAY,eACZC,MAAO,QAEPC,2BAA4B,QAC5BC,eAAgB,eAChBC,iBAAkB,gBAElBC,yBAA0B,QAC1BC,YAAapoE,GAAQ,YAAJa,OAAgBb,GACjCqoE,cAAeroE,GAAQ,oBAAJa,OAAwBb,GAE3CsoE,kBAAmB,sBACnBC,kBAAmB,SACnBC,oBAAqB,WAErBC,mBAAoB,CAAC,EAErBC,wBAAyB,iBAEzBC,0BAA2B,cAC3BC,4BAA6B,MAC7BC,4BAA6B,MAC7BC,4BAA6B,MAC7BC,4BAA6B,MAC7BC,6BAA8B,Q,gBChJhC,MAAMnpE,GAAY,CAAC,QAAS,QAAS,QAAS,gB,gBCA9C,MAAMA,GAAY,CAAC,aAiBbopE,IAA8BlpE,EAAAA,GAAAA,GAAO,MAAO,CAChDC,KAAM,cACNN,KAAM,sBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOkM,qBAHXtM,EAIjC,KAAM,CACPO,QAAS,OACT4L,WAAY,SACZC,MAAO,MAEI+8D,GAAuCllE,EAAAA,YAAiB,SAAiC9D,EAAOgE,GAC3G,MAAM,UACFS,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EAxBkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,wBAEoB0L,EAAyBxF,EAAQ,EAiB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKwhE,IAA6B1nE,EAAAA,EAAAA,GAAS,CAC7D2C,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,GAC9BjE,WAAYqG,GACXpB,GACL,ICtCA,MAAM9F,GAAY,CAAC,YAAa,oBAmB1BspE,IAA2BppE,EAAAA,GAAAA,GAAO,MAAO,CAC7CC,KAAM,cACNN,KAAM,mBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOipE,kBAHdrpE,EAI9BoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,MAAM,CACLvC,WAAY,SACZtB,QAAS,OACT0sC,OAAQ1rC,EAAM8P,QAAQ,EAAG,GACzBlF,WAAY,SACZC,MAAO,EACP3J,OAAQ,EACR,CAAClB,EAAM+nE,YAAYC,GAAG,OAAQ,CAC5Bp9D,WAAY,UACZC,MAAO,OACP3J,OAAQ,QAEX,IACK+mE,GAAoCvlE,EAAAA,YAAiB,SAA8B9D,EAAOgE,GAC9F,MAAM,UACFS,EAAS,iBACTykE,GACElpE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACTp3B,GAAaqf,EAAAA,EAAAA,KACbzZ,EApCkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,qBAEoB0L,EAAyBxF,EAAQ,EA6B9CE,CAAkB9F,GAC5B8oE,EAAkBh2D,EAAOzB,QAAQ6kB,cAAc,oBAA7BpjB,CAAkD41D,GAC1E,OAAoB3hE,EAAAA,GAAAA,KAAK0hE,IAA0B5nE,EAAAA,EAAAA,GAAS,CAC1D2C,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,GAC9BjE,WAAYA,GACXiF,EAAO,CACRZ,SAAUykE,IAEd,ICvDM3pE,GAAY,CAAC,aAkBb4pE,IAA0B1pE,EAAAA,GAAAA,GAAO,MAAO,CAC5CC,KAAM,cACNN,KAAM,kBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO4pD,iBAHfhqD,CAI7B,CACDO,QAAS,OACToB,eAAgB,gBAChBE,WAAY,SACZ4N,UAAW,GACXa,UAAW,cAEPq5D,GAAmC1lE,EAAAA,YAAiB,SAA6B9D,EAAOgE,GAC5F,MAAM,UACFS,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EA1BkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,kBAAmB,oBAEC0L,EAAyBxF,EAAQ,EAmB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKgiE,IAAyBloE,EAAAA,EAAAA,GAAS,CACzD2C,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,GAC9BjE,WAAYqG,GACXpB,GACL,IC9BMgkE,GAA0B3lE,EAAAA,YAAiB,SAAoB9D,EAAOgE,GAC1E,IAAIkd,EAAsBC,EAC1B,MAAM7N,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZhC,EAAwB9J,EAAgBT,EAAQsK,IAChDsrD,EAAmBn1D,EAAgBT,EAAQ8lB,IAC3CwB,EAA0B7mB,EAAgBT,EAAQyQ,IAClD2lD,GAA2B7iE,EAAU8iE,4BAA8BT,EAAmB,GAAiB3hE,EAAAA,GAAAA,KAAK8hE,GAAsB,CACtIH,iBAAkBA,KACF3hE,EAAAA,GAAAA,KAAK,MAAO,CAAC,GACzBqiE,EAAmB/iE,EAAUgjE,oBAAuBhjE,EAAUyzB,WAG9D,MAHwF/yB,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMykE,gBAAgBzoE,EAAAA,EAAAA,GAAS,CAAC,EAAmD,OAA/C6f,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB4oD,eAAgB,CACnPlwC,SAAU/b,EACV2uC,gBAAiB5xB,KAEbmvC,EAAoBljE,EAAUyzB,aAAezzB,EAAUmjE,sBAAwBnjE,EAAUxB,MAAMi1B,aAA2B/yB,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMi1B,YAAYj5B,EAAAA,EAAAA,GAAS,CAAC,EAAoD,OAAhD8f,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBmZ,aACrQ,OAAoBhzB,EAAAA,GAAAA,MAAMkiE,IAAqBnoE,EAAAA,EAAAA,GAAS,CACtD2C,IAAKA,GACJhE,EAAO,CACR6E,SAAU,CAAC6kE,EAAyBE,EAAiBG,KAEzD,IC/BMpqE,GAAY,CAAC,YAAa,WAAY,mBAmBtCsqE,IAAmBpqE,EAAAA,GAAAA,GAAO,MAAO,CACrCC,KAAM,cACNN,KAAM,WACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO25B,UAHtB/5B,EAItBoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,MAAM,CACLvC,WAAY,SACZtB,QAAS,OACT0sC,OAAQ1rC,EAAM8P,QAAQ,EAAG,GAC1B,IACKg5D,GAA4BpmE,EAAAA,YAAiB,SAAsB9D,EAAOgE,GAC9E,MAAM,UACFS,EAAS,SACTm1B,EAAQ,gBACR4yB,GACExsD,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACTp3B,GAAaqf,EAAAA,EAAAA,KACbzZ,EA7BkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,aAEoB0L,EAAyBxF,EAAQ,EAsB9CE,CAAkB9F,GAClC,GAAiB,IAAbo5B,EACF,OAAO,KAET,MAAM1xB,EAAOskD,EAAkB5yB,EAAWtmB,EAAOzB,QAAQ6kB,cAAc,yBAA7BpjB,CAAuDk5C,EAAiB5yB,GAAYA,EAAS4a,iBACvI,OAAoBltC,EAAAA,GAAAA,MAAM2iE,IAAkB5oE,EAAAA,EAAAA,GAAS,CACnD2C,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,GAC9BjE,WAAYA,GACXiF,EAAO,CACRZ,SAAU,CAACyO,EAAOzB,QAAQ6kB,cAAc,mBAAoB,IAAKxuB,KAErE,IC5CaiiE,GAAoCrmE,EAAAA,YAAiB,SAA8B9D,EAAOgE,GACrG,IAAIomE,EAAuBlpD,EAAsBC,EACjD,MAAM7N,EAASskB,KACT/c,EAAU9G,EAAgBT,EAAQ6H,GAClCtU,GAAYgZ,EAAAA,EAAAA,KACZwqD,EAAuBt2D,EAAgBT,EAAQw+C,IAC/CwY,EAAeh3D,EAAOzB,QAAQqjB,6BAA6B,kBAAmB,KAAyE,OAAlEk1C,EAAwBC,EAAqBE,kBAA4BH,EAAwBjnB,GAA0BqnB,SACtN,OAAoBjjE,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMolE,OAAOppE,EAAAA,EAAAA,GAAS,CACvD2C,IAAKA,EACLmD,GAAIN,EAAUxB,MAAM02C,WACpBjI,KAAMj5B,EAAQxI,OAAS,GAAKg4D,EAAqBv2B,KACjD/6B,GAAIsxD,EAAqBK,QACzB,kBAAmBL,EAAqBn9B,SACS,OAA/ChsB,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBupD,MAAOzqE,EAAwD,OAAhDmhB,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsB46B,WAAY,CACvMl3C,SAAUylE,IAEd,I,gBCvBA,MAAM3qE,GAAY,CAAC,aAkBbgrE,IAAkB9qE,EAAAA,GAAAA,GAAO,MAAO,CACpCC,KAAM,cACNN,KAAM,UACNO,kBAAmBA,CAACqT,EAAGnT,IAAWA,EAAO2qE,SAHnB/qE,CAIrB,CACDoM,MAAO,OACP3J,OAAQ,OACRlC,QAAS,OACTkR,UAAW,SACX5P,WAAY,SACZF,eAAgB,SAChBwB,gBAAiB,+CAEb6nE,GAA2B/mE,EAAAA,YAAiB,SAAqB9D,EAAOgE,GAC5E,MAAM,UACFS,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EA5BkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,YAEoB0L,EAAyBxF,EAAQ,EAqB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKojE,IAAiBtpE,EAAAA,EAAAA,GAAS,CACjD2C,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,GAC9BjE,WAAYqG,GACXpB,GACL,ICvCMqlE,GAAkChnE,EAAAA,YAAiB,SAA4B9D,EAAOgE,GAC1F,OAAoBuD,EAAAA,GAAAA,KAAKsjE,IAAaxpE,EAAAA,EAAAA,GAAS,CAC7C2C,IAAKA,GACJhE,EAAO,CACR6E,UAAuB0C,EAAAA,GAAAA,KAAKwjE,GAAAA,EAAkB,CAAC,KAEnD,ICNMC,GAAiClnE,EAAAA,YAAiB,SAA2B9D,EAAOgE,GACxF,MACMg+D,EADSpqC,KACY/lB,QAAQ6kB,cAAc,eACjD,OAAoBnvB,EAAAA,GAAAA,KAAKsjE,IAAaxpE,EAAAA,EAAAA,GAAS,CAC7C2C,IAAKA,GACJhE,EAAO,CACR6E,SAAUm9D,IAEd,I,oGCLA,UAAex6D,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACtDE,EAAG,+DACD,YCFJ,IAAeD,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACtDE,EAAG,+DACD,aCPJ,IAAIwjE,GAAeC,GAAgBC,GAAqBC,GAAoBC,GAAqBC,GAAsBC,GAAiBC,GACxI,MAAM7rE,GAAY,CAAC,sBAAuB,QAAS,WAAY,mBAAoB,sBAAuB,eAAgB,OAAQ,cAAe,kBAAmB,iBAAkB,aA8ItL,GA/H4CmE,EAAAA,YAAiB,SAAgC9D,EAAOgE,GAClG,IAAIynE,EAAuBC,EAAuBC,EAAuBC,EACzE,MAAM,oBACFC,EAAmB,MACnB/I,EAAK,SACLj6D,GAAW,EAAK,iBAChBijE,EAAgB,oBAChBC,EAAmB,aACnBC,EAAY,KACZ/xC,EAAI,YACJgyC,EAAW,gBACXC,EAAe,eACfC,EAAc,UACd7mE,GACEtF,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCyB,GAAQ27C,EAAAA,GAAAA,KAad,OAAoBz1C,EAAAA,GAAAA,MAAM,OAAOjG,EAAAA,EAAAA,GAAS,CACxC2C,IAAKA,GACJyB,EAAO,CACRZ,SAAU,CAACqnE,IAAgC3kE,EAAAA,GAAAA,KAAK6kE,GAAAA,GAAY/qE,EAAAA,EAAAA,GAAS,CACnEy8C,QAhB+BnvB,IACjCq9C,EAAar9C,EAAO,EAAE,EAgBpB9lB,SAAUA,GAAqB,IAAToxB,EACtB,aAAc6xC,EAAiB,QAAS7xC,GACxC0rB,MAAOmmB,EAAiB,QAAS7xC,IACgD,OAA/EwxC,EAAqC,MAAbnmE,OAAoB,EAASA,EAAU+mE,aAAuBZ,EAAwB,CAAC,EAAG,CACpH5mE,SAA8B,QAApBzD,EAAM48C,UAAsBitB,KAAkBA,IAA6B1jE,EAAAA,GAAAA,KAAK+kE,GAAc,CAAC,IAAMpB,KAAmBA,IAA8B3jE,EAAAA,GAAAA,KAAKglE,GAAe,CAAC,QACrKhlE,EAAAA,GAAAA,KAAK6kE,GAAAA,GAAY/qE,EAAAA,EAAAA,GAAS,CAC1Cy8C,QApB0BnvB,IAC5Bq9C,EAAar9C,EAAOsL,EAAO,EAAE,EAoB3BpxB,SAAUA,GAAqB,IAAToxB,EACtBh5B,MAAO,UACP,aAAc6qE,EAAiB,WAAY7xC,GAC3C0rB,MAAOmmB,EAAiB,WAAY7xC,IACgD,OAAlFyxC,EAAqC,MAAbpmE,OAAoB,EAASA,EAAUknE,gBAA0Bd,EAAwBG,EAAqB,CACxIhnE,SAA8B,QAApBzD,EAAM48C,UAAsBmtB,KAAwBA,IAAmC5jE,EAAAA,GAAAA,KAAKklE,GAAAA,EAAoB,CAAC,IAAMrB,KAAuBA,IAAkC7jE,EAAAA,GAAAA,KAAKmlE,GAAAA,EAAmB,CAAC,QACnMnlE,EAAAA,GAAAA,KAAK6kE,GAAAA,GAAY/qE,EAAAA,EAAAA,GAAS,CAC1Cy8C,QAzB0BnvB,IAC5Bq9C,EAAar9C,EAAOsL,EAAO,EAAE,EAyB3BpxB,SAAUA,IAAwB,IAAXi6D,GAAe7oC,GAAQhR,KAAK6Q,KAAKgpC,EAAQmJ,GAAe,EAC/EhrE,MAAO,UACP,aAAc6qE,EAAiB,OAAQ7xC,GACvC0rB,MAAOmmB,EAAiB,OAAQ7xC,IACgD,OAA9E0xC,EAAqC,MAAbrmE,OAAoB,EAASA,EAAUqnE,YAAsBhB,EAAwBI,EAAqB,CACpIlnE,SAA8B,QAApBzD,EAAM48C,UAAsBqtB,KAAwBA,IAAmC9jE,EAAAA,GAAAA,KAAKmlE,GAAAA,EAAmB,CAAC,IAAMpB,KAAyBA,IAAoC/jE,EAAAA,GAAAA,KAAKklE,GAAAA,EAAoB,CAAC,OACpNN,IAA+B5kE,EAAAA,GAAAA,KAAK6kE,GAAAA,GAAY/qE,EAAAA,EAAAA,GAAS,CAC5Dy8C,QA9B8BnvB,IAChCq9C,EAAar9C,EAAO1F,KAAKhkB,IAAI,EAAGgkB,KAAK6Q,KAAKgpC,EAAQmJ,GAAe,GAAG,EA8BlEpjE,SAAUA,GAAYoxB,GAAQhR,KAAK6Q,KAAKgpC,EAAQmJ,GAAe,EAC/D,aAAcH,EAAiB,OAAQ7xC,GACvC0rB,MAAOmmB,EAAiB,OAAQ7xC,IACgD,OAA9E2xC,EAAqC,MAAbtmE,OAAoB,EAASA,EAAUsnE,YAAsBhB,EAAwB,CAAC,EAAG,CACnH/mE,SAA8B,QAApBzD,EAAM48C,UAAsButB,KAAoBA,IAA+BhkE,EAAAA,GAAAA,KAAKglE,GAAe,CAAC,IAAMf,KAAmBA,IAA8BjkE,EAAAA,GAAAA,KAAK+kE,GAAc,CAAC,UAG/L,I,gBClFO,SAASO,GAA+BrtE,GAC7C,OAAOC,EAAAA,EAAAA,GAAqB,qBAAsBD,EACpD,CACA,MACA,IAD+BE,EAAAA,EAAAA,GAAuB,qBAAsB,CAAC,OAAQ,UAAW,SAAU,cAAe,aAAc,SAAU,aAAc,QAAS,WAAY,gBAAiB,YCDrM,IAAIotE,GACJ,MAAMntE,GAAY,CAAC,mBAAoB,sBAAuB,YAAa,UAAW,YAAa,QAAS,WAAY,mBAAoB,qBAAsB,mBAAoB,sBAAuB,eAAgB,sBAAuB,OAAQ,cAAe,qBAAsB,cAAe,kBAAmB,iBAAkB,aAmB/UotE,IAAsBltE,EAAAA,EAAAA,IAAOsO,GAAAA,EAAW,CAC5CrO,KAAM,qBACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAHnBL,EAIzBoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,MAAM,CACLyL,SAAU,OACVzO,OAAQG,EAAM6B,MAAQ7B,GAAO8B,QAAQgF,KAAKiH,QAC1CnN,SAAUZ,EAAMS,WAAWI,QAAQ,IAEnC,eAAgB,CACdI,QAAS,GAEZ,IACK2qE,IAAyBntE,EAAAA,EAAAA,IAAOotE,GAAAA,EAAS,CAC7CntE,KAAM,qBACNN,KAAM,UACNO,kBAAmBA,CAACC,EAAOC,KAAWoB,EAAAA,EAAAA,GAAS,CAC7C,CAAC,MAADV,OAAOusE,GAAuBhiC,UAAYjrC,EAAOirC,SAChDjrC,EAAOohB,UALmBxhB,EAM5BsE,IAAA,IAAC,MACF/C,GACD+C,EAAA,MAAM,CACLmL,UAAW,GACX69D,aAAc,EACd,CAAC,GAADxsE,OAAIS,EAAM+nE,YAAYC,GAAG,MAAK,kCAAkC,CAC9D95D,UAAW,IAEb,CAAClO,EAAM+nE,YAAYC,GAAG,OAAQ,CAC5B95D,UAAW,GACX69D,aAAc,GAEhB,CAAC,MAADxsE,OAAOusE,GAAuBhiC,UAAY,CACxC5qC,WAAY,EACZ+J,WAAY,IAEf,IACK+iE,IAAwBvtE,EAAAA,EAAAA,IAAO,MAAO,CAC1CC,KAAM,qBACNN,KAAM,SACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOotE,QAHjBxtE,CAI3B,CACDmP,KAAM,aAEFs+D,IAA6BztE,EAAAA,EAAAA,IAAO,IAAK,CAC7CC,KAAM,qBACNN,KAAM,cACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOstE,aAHZ1tE,EAIhCsB,IAAA,IAAC,MACFC,GACDD,EAAA,OAAKE,EAAAA,EAAAA,GAAS,CAAC,EAAGD,EAAMS,WAAWuN,MAAO,CACzC9O,WAAY,GACZ,IACIktE,IAAwB3tE,EAAAA,EAAAA,IAAO4tE,GAAAA,EAAQ,CAC3C3tE,KAAM,qBACNN,KAAM,SACNO,kBAAmBA,CAACC,EAAOC,KAAWoB,EAAAA,EAAAA,GAAS,CAC7C,CAAC,MAADV,OAAOusE,GAAuBQ,aAAeztE,EAAOytE,WACpD,CAAC,MAAD/sE,OAAOusE,GAAuBS,SAAW1tE,EAAO0tE,QAC/C1tE,EAAOq4B,MAAOr4B,EAAO2tE,aANI/tE,CAO3B,CACDoB,MAAO,UACPe,SAAU,UACV1B,WAAY,EACZgK,YAAa,GACbD,WAAY,EACZ,CAAC,MAAD1J,OAAOusE,GAAuBS,SAAW,CACvCE,YAAa,EACbV,aAAc,GACdW,UAAW,QACXC,cAAe,WAIbC,IAA0BnuE,EAAAA,EAAAA,IAAOglD,GAAAA,EAAU,CAC/C/kD,KAAM,qBACNN,KAAM,WACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOguE,UAHfpuE,CAI7B,CAAC,GACEquE,IAA+BruE,EAAAA,EAAAA,IAAO,IAAK,CAC/CC,KAAM,qBACNN,KAAM,gBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOkuE,eAHVtuE,EAIlC4gD,IAAA,IAAC,MACFr/C,GACDq/C,EAAA,OAAKp/C,EAAAA,EAAAA,GAAS,CAAC,EAAGD,EAAMS,WAAWuN,MAAO,CACzC9O,WAAY,GACZ,IACF,SAAS8tE,GAAyBlsB,GAI/B,IAJgC,KACjC74B,EAAI,GACJglD,EAAE,MACFvL,GACD5gB,EACC,MAAO,GAAPvhD,OAAU0oB,EAAI,UAAA1oB,OAAI0tE,EAAE,QAAA1tE,QAAkB,IAAXmiE,EAAeA,EAAQ,aAAHniE,OAAgB0tE,GACjE,CACA,SAASC,GAAoBzkE,GAC3B,MAAO,SAAPlJ,OAAgBkJ,EAAI,QACtB,CACA,MA2SA,GArRqC/F,EAAAA,YAAiB,SAAyBC,EAASC,GACtF,IAAIuqE,EACJ,MAAMvuE,GAAQuE,EAAAA,GAAAA,GAAc,CAC1BvE,MAAO+D,EACPjE,KAAM,wBAEF,iBACF0uE,EAAmBC,GAAsB,oBACzC5C,EAAmB,UACnBpnE,EACAiqE,QAASC,EAAW,UACpBjqE,EAAYyJ,GAAAA,EAAS,MACrB20D,EAAK,SACLj6D,GAAW,EAAK,iBAChBijE,EAAmBwC,GAAmB,mBACtCM,EAAqBR,GAAyB,iBAC9CS,EAAmB,iBAAgB,oBACnC9C,EAAmB,aACnBC,EAAY,oBACZ8C,EAAmB,KACnB70C,EAAI,YACJgyC,EAAW,mBACX8C,EAAqB,CAAC,GAAI,GAAI,GAAI,KAAI,YACtCC,EAAc,CAAC,EAAC,gBAChB9C,GAAkB,EAAK,eACvBC,GAAiB,EAAK,UACtB7mE,GACEtF,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCa,EAAaR,EACboG,EApDkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAaJ,OAAO6F,EAAAA,EAAAA,GAZO,CACZnG,KAAM,CAAC,QACPmhB,QAAS,CAAC,WACVgsD,OAAQ,CAAC,UACTE,YAAa,CAAC,eACdI,OAAQ,CAAC,UACTr1C,MAAO,CAAC,SACRo1C,WAAY,CAAC,cACbO,SAAU,CAAC,YACXE,cAAe,CAAC,iBAChBjjC,QAAS,CAAC,YAEiB2hC,GAAgCzmE,EAAQ,EAoCrDE,CAAkB9F,GAC5ByuE,EAAqF,OAAtEV,EAAiC,MAAbjpE,OAAoB,EAASA,EAAUqoE,QAAkBY,EAAoBS,EAChHE,EAAoBD,EAAY1hC,OAAS,SAAWygC,GAC1D,IAAIU,EACAhqE,IAAcyJ,GAAAA,GAA2B,OAAdzJ,IAC7BgqE,EAAUC,GAAe,KAG3B,MAAMxhC,GAAW9M,EAAAA,GAAAA,GAAM4uC,EAAYl2D,IAC7Bm0B,GAAU7M,EAAAA,GAAAA,GAAM4uC,EAAY/hC,SAOlC,OAAoB3lC,EAAAA,GAAAA,KAAKwlE,IAAqB1rE,EAAAA,EAAAA,GAAS,CACrDqtE,QAASA,EACT1qE,IAAKA,EACLmD,GAAIzC,EACJlE,WAAYA,EACZiE,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,IAC7BgB,EAAO,CACRZ,UAAuByC,EAAAA,GAAAA,MAAM0lE,GAAwB,CACnDvoE,UAAW2B,EAAQib,QACnBxc,SAAU,EAAc0C,EAAAA,GAAAA,KAAK6lE,GAAuB,CAClD3oE,UAAW2B,EAAQinE,SACjB0B,EAAmB18D,OAAS,IAAkB9K,EAAAA,GAAAA,KAAK+lE,GAA4B,CACjF7oE,UAAW2B,EAAQmnE,YACnBx0D,GAAIm0B,EACJroC,SAAUgqE,IACRE,EAAmB18D,OAAS,IAAkB9K,EAAAA,GAAAA,KAAKimE,IAAuBnsE,EAAAA,EAAAA,GAAS,CACrFX,QAAS,aACPuuE,EAAYvuE,SAAW,CACzB43B,MAAOw0C,KAAeA,IAA0BvlE,EAAAA,GAAAA,KAAKk1B,GAAAA,GAAW,CAAC,KAChE,CACD5mB,MAAOo2D,EACPlzC,SAAU+1C,EACV/1D,GAAIo0B,EACJD,QAASA,GACR+hC,EAAa,CACd7oE,SAAS/E,EAAAA,EAAAA,GAAS,CAAC,EAAG4tE,EAAY7oE,QAAS,CAEzClG,MAAMkH,EAAAA,EAAAA,GAAKhB,EAAQkyB,MAAOlyB,EAAQwnE,YAAaqB,EAAY7oE,SAAW,CAAC,GAAGlG,MAC1EytE,QAAQvmE,EAAAA,EAAAA,GAAKhB,EAAQunE,QAASsB,EAAY7oE,SAAW,CAAC,GAAGunE,QAEzDpkE,MAAMnC,EAAAA,EAAAA,GAAKhB,EAAQsnE,YAAauB,EAAY7oE,SAAW,CAAC,GAAGmD,QAE7DV,SAAUA,EACVhE,SAAUkqE,EAAmB92D,KAAIk3D,IAAkCz1B,EAAAA,EAAAA,eAAew1B,GAAmB7tE,EAAAA,EAAAA,GAAS,CAAC,IAAI+tE,EAAAA,GAAAA,GAAgBF,IAAsB,CACvJ1uE,cACC,CACDiE,UAAW2B,EAAQ6nE,SACnB5iE,IAAK8jE,EAAkBllE,MAAQklE,EAAkBllE,MAAQklE,EACzDt5D,MAAOs5D,EAAkBt5D,MAAQs5D,EAAkBt5D,MAAQs5D,IACzDA,EAAkBllE,MAAQklE,EAAkBllE,MAAQklE,SACxC5nE,EAAAA,GAAAA,KAAK2mE,GAA8B,CACnDzpE,UAAW2B,EAAQ+nE,cACnBtpE,SAAU+pE,EAAmB,CAC3BvlD,KAAgB,IAAVy5C,EAAc,EAAI7oC,EAAOgyC,EAAc,EAC7CoC,IAjDS,IAAXvL,GACM7oC,EAAO,GAAKgyC,GAEE,IAAjBA,EAAqBnJ,EAAQ75C,KAAKD,IAAI85C,GAAQ7oC,EAAO,GAAKgyC,GA+C3DnJ,OAAkB,IAAXA,GAAgB,EAAIA,EAC3B7oC,YAEa1yB,EAAAA,GAAAA,KAAKinE,EAAkB,CACtC/pE,UAAW2B,EAAQ8kC,QACnB2gC,oBAAqBA,EACrB/I,MAAOA,EACPiJ,oBAAqBA,EACrBC,aAAcA,EACd/xC,KAAMA,EACNgyC,YAAaA,EACbC,gBAAiBA,EACjBC,eAAgBA,EAChB7mE,UAAwB,MAAbA,OAAoB,EAASA,EAAU4lC,QAClD4gC,iBAAkBA,EAClBjjE,SAAUA,SAIlB,ICrPMwmE,IAAqBxvE,EAAAA,EAAAA,IAAOyvE,GAAPzvE,EAAwBsE,IAAA,IAAC,MAClD/C,GACD+C,EAAA,MAAM,CACL,CAAC,MAADxD,OAAOusE,GAAuBK,cAAgB,CAC5CntE,QAAS,OACT,CAACgB,EAAM+nE,YAAYC,GAAG,OAAQ,CAC5BhpE,QAAS,UAGb,CAAC,MAADO,OAAOusE,GAAuB50C,QAAU,CACtCl4B,QAAS,OACT,CAACgB,EAAM+nE,YAAYC,GAAG,OAAQ,CAC5BhpE,QAAS,gBAGd,IACYmvE,GAA8BzrE,EAAAA,YAAiB,SAAwB9D,EAAOgE,GACzF,MAAMsP,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZ2a,EAAkBzmB,EAAgBT,EAAQinB,IAC1CK,EAA0B7mB,EAAgBT,EAAQyQ,IAClD6V,EAAW91B,EAAAA,SAAc,KAC7B,IAAIG,EAAMurE,EACV,OAAsH,OAA9GvrE,EAAqD,OAA7CurE,EAAsB3oE,EAAU+yB,UAAoB41C,EAAsB50C,GAAmC32B,EAAO,CAAC,GACpI,CAAC4C,EAAU+yB,SAAUgB,IAClB60C,EAAW3rE,EAAAA,SAAc,IAAMmlB,KAAKkjB,MAAMvS,GAAYY,EAAgBX,UAAY,KAAK,CAACD,EAAUY,EAAgBX,WAClH61C,EAAuB5rE,EAAAA,aAAkB6qB,IAC7C,MAAMkL,EAAW5zB,OAAO0oB,EAAM0C,OAAOxb,OACrCvC,EAAOzB,QAAQ89D,YAAY91C,EAAS,GACnC,CAACvmB,IACEs8D,EAAmB9rE,EAAAA,aAAkB,CAACsP,EAAG6mB,KAC7C3mB,EAAOzB,QAAQg+D,QAAQ51C,EAAK,GAC3B,CAAC3mB,IAwBJ,MAAMw8D,EAvBsCj2C,KAC1C,IAAK,IAAIrkB,EAAI,EAAGA,EAAI3O,EAAUipE,gBAAgBz9D,OAAQmD,GAAK,EAAG,CAC5D,MAAMmsB,EAAS96B,EAAUipE,gBAAgBt6D,GACzC,GAAsB,kBAAXmsB,GACT,GAAIA,IAAW9H,EACb,OAAO,OAEJ,GAAI8H,EAAO9rB,QAAUgkB,EAC1B,OAAO,CAEX,CACA,OAAO,CAAK,EAYUk2C,CAAoCv1C,EAAgBX,UAAYhzB,EAAUipE,gBAAkB,GACpH,OAAoBvoE,EAAAA,GAAAA,KAAK8nE,IAAoBhuE,EAAAA,EAAAA,GAAS,CACpD2C,IAAKA,EACLU,UAAW,MACXo+D,MAAOlpC,EACPK,KAAMO,EAAgBP,MAAQw1C,EAAWj1C,EAAgBP,KAAOw1C,EAChEV,mBAAoBe,EACpB7D,YAAazxC,EAAgBX,SAC7BmyC,aAAc4D,EACdd,oBAAqBY,GACpBp8D,EAAOzB,QAAQ6kB,cAAc,sBAAuB12B,GACzD,IC3EML,GAAY,CAAC,aASb2G,GAAoB9F,IACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,iBAEoB0L,EAAyBxF,EAAQ,EAE1D4pE,IAAuBnwE,EAAAA,GAAAA,GAAO,MAAO,CACzCC,KAAM,cACNN,KAAM,eACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOqqE,cAHlBzqE,CAI1B,CACDO,QAAS,OACTkB,cAAe,SACfoO,SAAU,OACVV,KAAM,MACNihE,UAAW,MAEb,SAASC,GAAiBlwE,GACxB,MAAM,UACFyE,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EAAUE,GAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKyoE,IAAsB3uE,EAAAA,EAAAA,GAAS,CACtDoD,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW2B,EAAQlG,MACnCM,WAAYqG,GACXpB,GACL,CCxCA,MAAM9F,GAAY,CAAC,aASb2G,GAAoB9F,IACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,gBAEoB0L,EAAyBxF,EAAQ,EAE1D+pE,IAAsBtwE,EAAAA,GAAAA,GAAO,MAAO,CACxCC,KAAM,cACNN,KAAM,cACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOmwE,aAHnBvwE,EAIzBoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,MAAM,CACL5B,QAASjB,EAAM8P,QAAQ,IACvB9Q,QAAS,OACToB,eAAgB,gBACjB,IACD,SAAS6uE,GAAgBrwE,GACvB,MAAM,UACFyE,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EAAUE,GAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAK4oE,IAAqB9uE,EAAAA,EAAAA,GAAS,CACrDoD,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW2B,EAAQlG,MACnCM,WAAYqG,GACXpB,GACL,C,gBCxCA,MAAM9F,GAAY,CAAC,YAAa,aAmB1B2wE,IAAuBzwE,EAAAA,EAAAA,IAAO,MAAO,CACzCC,KAAM,cACNN,KAAM,eACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOswE,cAHlB1wE,CAI1B,CACDO,QAAS,OACTkB,cAAe,SACf0N,KAAM,EACN,UAAW,CACTK,QAAS,KAGPmhE,GAAYA,KAAM,EAClBC,GAAgC3sE,EAAAA,YAAiB,SAA0B9D,EAAOgE,GACtF,MAAM,UACFS,EAAS,UACTa,EAAY,CAAC,GACXtF,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EA7BkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,iBAEoB0L,EAAyBxF,EAAQ,EAsB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKmpE,GAAAA,GAAWrvE,EAAAA,EAAAA,GAAS,CAC3CyyC,MAAM,EACN68B,qBAAqB,EACrBH,UAAWA,IACVlrE,EAAUsrE,UAAW,CACtB/rE,UAAuB0C,EAAAA,GAAAA,KAAK+oE,IAAsBjvE,EAAAA,EAAAA,GAAS,CACzD2C,IAAKA,EACLyhB,UAAW,EACXhhB,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW2B,EAAQlG,MACnCM,WAAYqG,GACXpB,MAEP,ICpDM9F,GAAY,CAAC,OAAQ,qBAAsB,eAAgB,qBAAsB,sBAAuB,2BAA4B,6BAA8B,kCAAmC,kBAAmB,iBAAkB,cAAe,gBAAiB,kBAAmB,0BAA2B,qBAAsB,mBAAoB,kBAAmB,YACzX04C,GAAa,CAAC,uBA8BVw4B,IAAqBhxE,EAAAA,EAAAA,IAAO,MAAO,CACvCC,KAAM,cACNN,KAAM,aACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO6wE,YAHpBjxE,EAIxBoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,MAAM,CACL7D,QAAS,OACTiC,QAASjB,EAAM8P,QAAQ,GACxB,IACK6/D,IAAuBlxE,EAAAA,EAAAA,IAAO,MAAO,CACzCC,KAAM,cACNN,KAAM,uBACNO,kBAAmBA,CAACqT,EAAGnT,IAAWA,EAAO+wE,sBAHdnxE,EAI1BsE,IAAA,IAAC,MACF/C,GACD+C,EAAA,MAAM,CACL7D,WAAY,EACZkB,eAAgB,WAChB8I,YAAalJ,EAAM8P,QAAQ,IAC3B+/D,aAAc7vE,EAAM8P,QAAQ,IAC7B,IACKggE,IAA+BrxE,EAAAA,EAAAA,IAAO,MAAO,CACjDC,KAAM,cACNN,KAAM,+BACNO,kBAAmBA,CAACqT,EAAGnT,IAAWA,EAAOkxE,8BAHNtxE,CAIlC,CACDqC,SAAU,GACVoI,YAAa,EACb9I,eAAgB,QAEZ4vE,IAAwBvxE,EAAAA,EAAAA,IAAO,MAAO,CAC1CC,KAAM,cACNN,KAAM,wBACNO,kBAAmBA,CAACqT,EAAGnT,IAAWA,EAAOoxE,uBAHbxxE,CAI3B,CACDoM,MAAO,MAEHqlE,IAA0BzxE,EAAAA,EAAAA,IAAO,MAAO,CAC5CC,KAAM,cACNN,KAAM,0BACNO,kBAAmBA,CAACqT,EAAGnT,IAAWA,EAAOsxE,yBAHX1xE,CAI7B,CACDoM,MAAO,MAEHulE,IAAuB3xE,EAAAA,EAAAA,IAAO,MAAO,CACzCC,KAAM,cACNN,KAAM,uBACNO,kBAAmBA,CAACqT,EAAGnT,IAAWA,EAAOwxE,sBAHd5xE,CAI1B,CACDoM,MAAO,MAYHylE,GAAiBt1D,GAAOA,EAAIy0B,YAAcz0B,EAAIf,MAC9CujB,GAAW,IAAIC,KAAKC,SACpB6yC,GAA8B7tE,EAAAA,YAAiB,SAAwB9D,EAAOgE,GAClF,IAAIkd,EAAsBC,EAAuB6rB,EAAuBC,EAAuBiN,EAAuB03B,EAAuBC,EAAuBC,EAAuBC,EAAuBC,EAClN,MAAM,KACF3tD,EAAI,mBACJ4tD,EAAkB,aAClBC,EAAY,mBACZC,EAAkB,oBAClBC,EAAmB,yBACnBC,EAAwB,2BACxBC,EAA0B,gCAC1BC,EAA+B,gBAC/B3yC,EAAe,eACf4yC,EAAiB,CAAC9vC,GAAkBG,IAAKH,GAAkB+vC,IAAG,YAC9DC,EAAW,cACXC,EAAa,gBACbC,EAAkB,CAAC,EAAC,wBACpBC,EAA0B,CAAC,EAAC,mBAC5BC,EAAqB,CAAC,EAAC,iBACvBC,EAAmB,CAAC,EAAC,gBACrBC,EAAkB,CAAC,GACjBhzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACTq7C,EAAoBl/D,EAAgBT,EAAQ6I,IAC5C0G,EAAc9O,EAAgBT,EAAQqP,IACtCuwD,GAAiB7yC,EAAAA,GAAAA,KACjB8yC,GAAsB9yC,EAAAA,GAAAA,KACtB+yC,GAAmB/yC,EAAAA,GAAAA,KACnBgzC,GAAwBhzC,EAAAA,GAAAA,KACxBx5B,GAAYgZ,EAAAA,EAAAA,KACZzZ,EA5GkB5F,KACxB,MAAM,QACJ4F,GACE5F,EASJ,OAAO6F,EAAAA,EAAAA,GARO,CACZnG,KAAM,CAAC,cACPozE,WAAY,CAAC,wBACbC,mBAAoB,CAAC,gCACrBC,YAAa,CAAC,yBACdC,cAAe,CAAC,2BAChBC,WAAY,CAAC,yBAEc9nE,EAAyBxF,EAAQ,EAgG9CE,CAAkBO,GAC5B8sE,EAAW7vE,EAAAA,OAAa,MACxB8vE,EAAoB9vE,EAAAA,OAAa,MACjC+vE,EAAyB5B,GAAsBO,EAAengE,OAAS,EACvEyhE,GAAwE,OAA/C5yD,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBwsB,kBAAoB,CAAC,EAElIqmC,EAAyE,OAAnD/mC,IAD8C,OAAhD7rB,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBksB,aAAe,CAAC,GAC5DE,SAAkBP,EAChFgnC,GAAwE,OAAhD/mC,EAAwBpmC,EAAUvB,gBAAqB,EAAS2nC,EAAsBU,iBAAmB,CAAC,EAClIH,IAA0E,OAAhD0M,EAAwBrzC,EAAUvB,gBAAqB,EAAS40C,EAAsBzM,mBAAqB,CAAC,GACtI,oBACFgH,IACEu+B,EACJiB,IAAuBvuE,EAAAA,EAAAA,GAA8BstE,EAAiB36B,IAClEnI,GAAkBpsC,EAAAA,SAAc,KACpC,QAAsBqC,IAAlBwsE,GAAwD,oBAAlBA,EACxC,OAAOM,EAET,MAAMiB,EAAiBvB,EAAc,CACnCt3D,MAAOgJ,EAAKhJ,MACZR,QAASo4D,EACTkB,gBAAgC,MAAftxD,OAAsB,EAASA,EAAYuB,QAAU,KAExE,OAAO6uD,EAAkBx3D,QAAOC,GAAUw4D,EAAenlC,SAASrzB,EAAOL,QAAO,GAC/E,CAACs3D,EAA8B,MAAf9vD,OAAsB,EAASA,EAAYuB,MAAO6uD,EAAmB5uD,EAAKhJ,QACvF+4D,GAAwBtwE,EAAAA,SAAc,KAC1C,OAAQ4uE,GACN,IAAK,MACH,OAAOxiC,GAAgBvxB,MAAK,CAAC3L,EAAGC,IAAM2rB,GAASoK,QAAQ0oC,GAAe1+D,GAAI0+D,GAAez+D,MAC3F,IAAK,OACH,OAAOi9B,GAAgBvxB,MAAK,CAAC3L,EAAGC,KAAO2rB,GAASoK,QAAQ0oC,GAAe1+D,GAAI0+D,GAAez+D,MAC5F,QACE,OAAOi9B,GACX,GACC,CAACA,GAAiBwiC,IACf2B,GAAgBhwD,EAAKhJ,MAAQ/H,EAAOzB,QAAQyrB,UAAUjZ,EAAKhJ,OAAS,KACpEi5D,GAAkBxwE,EAAAA,SAAc,KACpC,IAAIywE,EACJ,OAAKlwD,EAAKK,UAAa2vD,GAG2C,OAA1DE,EAAwBF,GAAc7vD,sBAA2B,EAAS+vD,EAAsB39D,MAAK8N,GAAYA,EAAS7O,QAAUwO,EAAKK,WAFxI,IAEiJ,GACzJ,CAACL,EAAMgwD,KACJG,GAAe1wE,EAAAA,aAAkB6qB,IACrC,MAAMtT,EAAQsT,EAAM0C,OAAOxb,MACrB6F,EAASpI,EAAOzB,QAAQyrB,UAAUjiB,GACxC,GAAIK,EAAOL,QAAUg5D,GAAch5D,MAEjC,OAIF,MAAMo5D,EAAc/4D,EAAO8I,gBAAgB5N,MAAK8N,GAAYA,EAAS7O,QAAUwO,EAAKK,YAAahJ,EAAO8I,gBAAgB,GAGlHkwD,GAAkBD,EAAY9vD,gBAAkB8vD,EAAY9vD,kBAAuC,MAAnB2vD,QAA0B,EAASA,GAAgB3vD,gBACzIwtD,GAAmB9wE,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CACpChJ,QACAqJ,SAAU+vD,EAAY5+D,MACtBA,MAAO6+D,OAAiBvuE,EAAYke,EAAKxO,QACxC,GACF,CAACvC,EAAQ6+D,EAAoB9tD,EAAMgwD,GAAeC,KAC/CK,GAAiB7wE,EAAAA,aAAkB6qB,IACvC,MAAMjK,EAAWiK,EAAM0C,OAAOxb,MACxB4+D,EAA+B,MAAjBJ,QAAwB,EAASA,GAAc7vD,gBAAgB5N,MAAKwrB,GAAMA,EAAGvsB,QAAU6O,IACrGgwD,IAAkC,MAAfD,GAAuBA,EAAY9vD,kBAAmC,MAAf8vD,OAAsB,EAASA,EAAY9vD,mBAAwC,MAAnB2vD,QAA0B,EAASA,GAAgB3vD,gBACnMwtD,GAAmB9wE,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CACpCK,WACA7O,MAAO6+D,OAAiBvuE,EAAYke,EAAKxO,QACxC,GACF,CAACs8D,EAAoB9tD,EAAMgwD,GAAeC,KACvCM,GAAsB9wE,EAAAA,aAAkB6qB,IAC5C,MAAMiU,EAAgBjU,EAAM0C,OAAOxb,QAAU6sB,GAAkBG,IAAIje,WAAa8d,GAAkBG,IAAMH,GAAkB+vC,GAC1HF,EAAgC3vC,EAAc,GAC7C,CAAC2vC,IAyBJ,OAVAzuE,EAAAA,oBAA0B87B,GAAiB,KAAM,CAC/C3a,MAAOA,KAEH,IAAI4vD,EADiB,MAAnBP,IAA2BA,GAAgB3vD,eAEjC,MAAZgvD,GAA8D,OAAzCkB,EAAoBlB,EAAS9hE,UAAoBgjE,EAAkB5vD,QAExF2uD,EAAkB/hE,QAAQoT,OAC5B,KAEA,CAACqvD,MACehtE,EAAAA,GAAAA,MAAMupE,IAAoBxvE,EAAAA,EAAAA,GAAS,CACrD2C,IAAKA,EACLS,UAAW2B,EAAQlG,KACnB,UAAWmkB,EAAKtL,GAChBvY,WAAYqG,GACXpB,EAAO,CACRZ,SAAU,EAAc0C,EAAAA,GAAAA,KAAKwpE,IAAsB1vE,EAAAA,EAAAA,GAAS,CAC1DX,QAAS,WACTyG,GAAIN,EAAUxB,MAAMqoC,iBACnBomC,EAAsBlB,EAAiB,CACxCnuE,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQktE,WAAYQ,EAAqBrvE,UAAWmuE,EAAgBnuE,WACpFjE,WAAYqG,EACZhC,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMi5C,gBAAgBj9C,EAAAA,EAAAA,GAAS,CACnE,aAAciS,EAAOzB,QAAQ6kB,cAAc,8BAC3CivB,MAAOryC,EAAOzB,QAAQ6kB,cAAc,8BACpConB,QAvCqBg3B,KACrBjuE,EAAU88B,qCACOx9B,IAAfke,EAAKxO,MACPq8D,EAAa7tD,GAGb8tD,GAAmB9wE,EAAAA,EAAAA,GAAS,CAAC,EAAGgjB,EAAM,CACpCxO,WAAO1P,KAIX+rE,EAAa7tD,EACf,EA4BIpc,KAAM,SAC4C,OAAhD2pE,EAAwB/qE,EAAUvB,gBAAqB,EAASssE,EAAsBtzB,eAAgB,CACxGz5C,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM0vE,sBAAuB,CACjE/yE,SAAU,iBAGEuF,EAAAA,GAAAA,KAAK2pE,IAA8B7vE,EAAAA,EAAAA,GAAS,CAC5DX,QAAS,WACTyG,GAAIN,EAAUxB,MAAMqoC,iBACnBomC,EAAsBjB,EAAyB,CAChDmC,IAAI3zE,EAAAA,EAAAA,GAAS,CACXjB,QAASyzE,EAAyB,OAAS,OAC3C7nE,WAAYqmE,EAA2B,UAAY,UAClDyB,EAAqBkB,IAAM,CAAC,EAAGnC,EAAwBmC,IAAM,CAAC,GACjEvwE,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQmtE,mBAAoBO,EAAqBrvE,UAAWouE,EAAwBpuE,WACpGjE,WAAYqG,EACZhC,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMgoC,YAAYhsC,EAAAA,EAAAA,GAAS,CAC/DsI,WAAY,CACV,aAAc2J,EAAOzB,QAAQ6kB,cAAc,6BAE7C7gB,MAAOu8D,EACPr5C,SAAU67C,GACV/rE,WAAYypE,GAAwD,IAA1BE,EAAengE,OACzDk7B,OAAQwmC,GAC0C,OAAhDlC,EAAwBhrE,EAAUvB,gBAAqB,EAASusE,EAAsBxkC,WAAY,CACpGxoC,SAAU2tE,EAAev6D,KAAI2qB,IAA8B8W,EAAAA,EAAAA,eAAe7yC,EAAUxB,MAAMooC,kBAAkBpsC,EAAAA,EAAAA,GAAS,CAAC,EAAGmsC,GAAuB,CAC9ID,OAAQwmC,EACR1oE,IAAKu3B,EAAche,WACnB/O,MAAO+sB,EAAche,aACnBtR,EAAOzB,QAAQ6kB,cAzLOkM,KAChC,OAAQA,GACN,KAAKF,GAAkBG,IACrB,MAAO,yBACT,KAAKH,GAAkB+vC,GACrB,MAAO,wBACT,QACE,MAAM,IAAIh+D,MAAM,mEACpB,EAiLuCwgE,CAA0BryC,cAE7Ct7B,EAAAA,GAAAA,MAAM8pE,IAAuB/vE,EAAAA,EAAAA,GAAS,CACtDX,QAAS,WACTyG,GAAIN,EAAUxB,MAAMqoC,iBACnBomC,EAAsBf,EAAkB,CACzCtuE,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQotE,YAAaM,EAAqBrvE,UAAWsuE,EAAiBtuE,WACtFjE,WAAYqG,EACZhC,SAAU,EAAc0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMsoC,gBAAgBtsC,EAAAA,EAAAA,GAAS,CAAC,EAAG2yE,EAAqB,CAC7FpnC,QAASsmC,EACTn6D,GAAIo6D,EACJtuE,SAAUyO,EAAOzB,QAAQ6kB,cAAc,0BACvBnvB,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMgoC,YAAYhsC,EAAAA,EAAAA,GAAS,CAC1D6rC,QAASimC,EACTp6D,GAAIm6D,EACJjpE,MAAOqJ,EAAOzB,QAAQ6kB,cAAc,sBACpC7gB,MAAOwO,EAAKhJ,OAAS,GACrB0d,SAAUy7C,GACVjnC,OAAQwmC,GAC0C,OAAhDjC,EAAwBjrE,EAAUvB,gBAAqB,EAASwsE,EAAsBzkC,WAAY,CACpGxoC,SAAUuvE,GAAsBn8D,KAAImE,IAAoBs9B,EAAAA,EAAAA,eAAe7yC,EAAUxB,MAAMooC,kBAAkBpsC,EAAAA,EAAAA,GAAS,CAAC,EAAGmsC,GAAuB,CAC3ID,OAAQwmC,EACR1oE,IAAK+Q,EAAIf,MACTxF,MAAOuG,EAAIf,QACTq2D,GAAet1D,cAEL9U,EAAAA,GAAAA,MAAMgqE,IAAyBjwE,EAAAA,EAAAA,GAAS,CACxDX,QAAS,WACTyG,GAAIN,EAAUxB,MAAMqoC,iBACnBomC,EAAsBhB,EAAoB,CAC3CruE,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQqtE,cAAeK,EAAqBrvE,UAAWquE,EAAmBruE,WAC1FjE,WAAYqG,EACZhC,SAAU,EAAc0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMsoC,gBAAgBtsC,EAAAA,EAAAA,GAAS,CAAC,EAAG2yE,EAAqB,CAC7FpnC,QAASwmC,EACTr6D,GAAIs6D,EACJxuE,SAAUyO,EAAOzB,QAAQ6kB,cAAc,2BACvBnvB,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMgoC,YAAYhsC,EAAAA,EAAAA,GAAS,CAC1D6rC,QAASmmC,EACTppE,MAAOqJ,EAAOzB,QAAQ6kB,cAAc,uBACpC3d,GAAIq6D,EACJv9D,MAAOwO,EAAKK,SACZqU,SAAU47C,GACVpnC,OAAQwmC,EACR/2C,SAAU42C,GACwC,OAAhD7B,EAAwBlrE,EAAUvB,gBAAqB,EAASysE,EAAsB1kC,WAAY,CACpGxoC,SAA2B,MAAjBwvE,IAAqF,OAA3DrC,EAAyBqC,GAAc7vD,sBAA2B,EAASwtD,EAAuB/5D,KAAIyM,IAAyBg1B,EAAAA,EAAAA,eAAe7yC,EAAUxB,MAAMooC,kBAAkBpsC,EAAAA,EAAAA,GAAS,CAAC,EAAGmsC,GAAuB,CACtPD,OAAQwmC,EACR1oE,IAAKqZ,EAAS7O,MACdA,MAAO6O,EAAS7O,QACd6O,EAASza,OAASqJ,EAAOzB,QAAQ6kB,cAAc,iBAAD/1B,QAAkBC,EAAAA,EAAAA,GAAW8jB,EAAS7O,oBAE1EtO,EAAAA,GAAAA,KAAKiqE,IAAsBnwE,EAAAA,EAAAA,GAAS,CACpDX,QAAS,WACTyG,GAAIN,EAAUxB,MAAMqoC,iBACnBomC,EAAsBG,GAAsB,CAC7CxvE,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQstE,WAAYI,EAAqBrvE,UAAWwvE,GAAqBxvE,WACzFjE,WAAYqG,EACZhC,SAA6B,MAAnByvE,IAA2BA,GAAgB3vD,gBAA8Bpd,EAAAA,GAAAA,KAAK+sE,GAAgB3vD,gBAAgBtjB,EAAAA,EAAAA,GAAS,CAC/HiS,OAAQA,EACR+Q,KAAMA,EACNsb,WAAYwyC,EACZvyC,gBAAiB+zC,GAChBW,GAAgB7/B,oBAAqBA,KAAwB,WAGtE,IC7UM90C,GAAY,CAAC,iBAAkB,cAAe,kBAAmB,wBAAyB,WAAY,yBAA0B,0BAehIu1E,GAAgB94D,IAAO,CAC3Bf,MAAOe,EAAIf,MACXqJ,SAAUtI,EAAIoI,gBAAgB,GAAG3O,MACjCkD,GAAIkQ,KAAKqa,MAAsB,IAAhBra,KAAKoB,YAEhB8qD,GAA+BrxE,EAAAA,YAAiB,SAAyB9D,EAAOgE,GACpF,IAAIkd,EAAsBC,EAC1B,MAAM7N,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZgD,EAAc9O,EAAgBT,EAAQqP,IACtCswD,EAAoBl/D,EAAgBT,EAAQ6I,IAC5Ci5D,EAAgBtxE,EAAAA,OAAa,MAC7BuxE,EAAoBvxE,EAAAA,OAAa,OACjC,eACF0uE,EAAiB,CAAC9vC,GAAkBG,IAAKH,GAAkB+vC,IAAG,YAC9DC,EAAW,gBACX4C,EAAe,sBACfC,EAAqB,uBACrBC,GAAyB,EAAK,uBAC9BC,GAAyB,GACvBz1E,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC+1E,EAAcpiE,EAAOzB,QAAQ8jE,iBAC7BC,EAA2B9xE,EAAAA,aAAkB4gB,IACjDpR,EAAOzB,QAAQgkE,uBAAuBnxD,EAAS,GAC9C,CAACpR,IACEwiE,EAAmBhyE,EAAAA,aAAkB,KACzC,IAAIiyE,EACJ,GAAIR,GAA0D,oBAA1BA,EAAsC,CAExE,MAAMS,EAAgBT,EAAsB,CAC1CpB,gBAAgC,MAAftxD,OAAsB,EAASA,EAAYuB,QAAU,GACtEvJ,QAASo4D,IAEX,GAAsB,OAAlB+C,EACF,OAAO,KAETD,EAAyB9C,EAAkBr8D,MAAK3S,IAAA,IAAC,MAC/CoX,GACDpX,EAAA,OAAKoX,IAAU26D,CAAa,GAC/B,MACED,EAAyB9C,EAAkBr8D,MAAKgmB,IAC9C,IAAIq5C,EACJ,OAA2D,OAAnDA,EAAwBr5C,EAAOpY,sBAA2B,EAASyxD,EAAsB5jE,MAAM,IAG3G,OAAK0jE,EAGEb,GAAca,GAFZ,IAEmC,GAC3C,CAAgB,MAAflzD,OAAsB,EAASA,EAAYuB,MAAO6uD,EAAmBsC,IACnEW,EAAepyE,EAAAA,aAAkB,KACrC,QAA8BqC,IAA1BovE,GAAwE,oBAA1BA,EAChD,OAAOO,IAET,MAAM3B,EAAiBtxD,EAAYuB,MAAM/R,OAASwQ,EAAYuB,MAAQ,CAAC0xD,KAAoBr6D,OAAOwqB,SAG5FkwC,EAAsBZ,EAAsB,CAChDpB,eAAgBA,EAChBt5D,QAASo4D,IAEX,GAA4B,OAAxBkD,EACF,OAAO,KAET,MAAMJ,EAAyB9C,EAAkBr8D,MAAKzS,IAAA,IAAC,MACrDkX,GACDlX,EAAA,OAAKkX,IAAU86D,CAAmB,IACnC,OAAKJ,EAGEb,GAAca,GAFZ,IAEmC,GAC3C,CAAClzD,EAAYuB,MAAO6uD,EAAmBsC,EAAuBO,IAC3D1xD,EAAQtgB,EAAAA,SAAc,IACtB+e,EAAYuB,MAAM/R,OACbwQ,EAAYuB,OAEhBixD,EAAkBxjE,UACrBwjE,EAAkBxjE,QAAUikE,KAEvBT,EAAkBxjE,QAAU,CAACwjE,EAAkBxjE,SAAW,KAChE,CAACgR,EAAYuB,MAAO0xD,IACjB7D,EAAqB7tD,EAAM/R,OAAS,EAQpC6/D,EAAepuE,EAAAA,aAAkBugB,IACrC,MAAM+xD,EAA0C,IAAjBhyD,EAAM/R,OACrCiB,EAAOzB,QAAQwkE,iBAAiBhyD,GAC5B+xD,GACF9iE,EAAOzB,QAAQykE,iBACjB,GACC,CAAChjE,EAAQ8Q,EAAM/R,SAoBlB,OAVAvO,EAAAA,WAAgB,KACV0uE,EAAengE,OAAS,GAAKwQ,EAAY+f,gBAAkB4vC,EAAezjC,SAASlsB,EAAY+f,gBACjGgzC,EAAyBpD,EAAe,GAC1C,GACC,CAACA,EAAgBoD,EAA0B/yD,EAAY+f,gBAC1D9+B,EAAAA,WAAgB,KACVsgB,EAAM/R,OAAS,GACjB+iE,EAAcvjE,QAAQoT,OACxB,GACC,CAACb,EAAM/R,UACU/K,EAAAA,GAAAA,MAAMmpE,IAAkBpvE,EAAAA,EAAAA,GAAS,CACnD2C,IAAKA,GACJyB,EAAO,CACRZ,SAAU,EAAc0C,EAAAA,GAAAA,KAAK2oE,GAAkB,CAC7CrrE,SAAUuf,EAAMnM,KAAI,CAACoM,EAAM9B,KAAuBhb,EAAAA,GAAAA,KAAKoqE,IAAgBtwE,EAAAA,EAAAA,GAAS,CAC9EgjB,KAAMA,EACN8tD,mBAAoBuD,EACpBxD,aAAcA,EACdD,mBAAoBA,EACpBI,yBAA0B9vD,EAAQ,EAClC6vD,oBAAqBvvD,EAAY+f,cACjC0vC,2BAAsC,IAAV/vD,EAC5BgwD,gCAAiCqD,EACjCh2C,gBAAiBrd,IAAU6B,EAAM/R,OAAS,EAAI+iE,EAAgB,KAC9D5C,eAAgBA,EAChBE,YAAaA,GACZ4C,GAA6B,MAAXjxD,EAAKtL,GAAawJ,EAAQ8B,EAAKtL,QACjDlS,EAAU88B,iCAAqC6xC,GAA0BC,EAYzE,MAZgHnuE,EAAAA,GAAAA,MAAM+oE,GAAiB,CAC1IxrE,SAAU,CAAE2wE,GAKOjuE,EAAAA,GAAAA,KAAK,OAAQ,CAAC,IALiBA,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMkxE,YAAYl1E,EAAAA,EAAAA,GAAS,CAC1Fy8C,QApDe04B,KACnB,MAAMC,EAAYP,IACbO,GAGLnjE,EAAOzB,QAAQ6kE,kBAAkB,IAAItyD,EAAOqyD,GAAW,EAgDnDE,WAAwBpvE,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMuxE,mBAAoB,CAAC,IACjB,OAA/C11D,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBq1D,WAAY,CAClG1xE,SAAUyO,EAAOzB,QAAQ6kB,cAAc,2BACH++C,EAKhC,MALsEluE,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMkxE,YAAYl1E,EAAAA,EAAAA,GAAS,CACpHy8C,QA3CkB+4B,KACD,IAAjBzyD,EAAM/R,aAAmClM,IAAnBie,EAAM,GAAGvO,QACjCvC,EAAOzB,QAAQwkE,iBAAiBjyD,EAAM,IACtC9Q,EAAOzB,QAAQykE,mBAEjBhjE,EAAOzB,QAAQilE,gBAAez1E,EAAAA,EAAAA,GAAS,CAAC,EAAGwhB,EAAa,CACtDuB,MAAO,KACN,EAqCCuyD,WAAwBpvE,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM0xE,yBAA0B,CAAC,IACtB,OAAhD51D,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBo1D,WAAY,CACpG1xE,SAAUyO,EAAOzB,QAAQ6kB,cAAc,iCAI/C,I,4BClKA,MAAM/2B,GAAY,CAAC,aASb2G,GAAoB9F,IACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,gBAEoB0L,EAAyBxF,EAAQ,EAE1D4wE,IAAsBn3E,EAAAA,GAAAA,GAAO,MAAO,CACxCC,KAAM,cACNN,KAAM,cACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOg3E,aAHnBp3E,EAIzBoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,MAAM,CACL5B,QAASjB,EAAM8P,QAAQ,GACxB,IACD,SAASgmE,GAAgBl3E,GACvB,MAAM,UACFyE,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EAAUE,GAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKyvE,IAAqB31E,EAAAA,EAAAA,GAAS,CACrDoD,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW2B,EAAQlG,MACnCM,WAAYqG,GACXpB,GACL,CCtBO,MChBD9F,GAAY,CAAC,OAAQ,kBAAmB,uBAAwB,uBAAwB,uBAAwB,uBA8BhHw3E,IAAuBt3E,EAAAA,EAAAA,IAAO,MAAO,CACzCC,KAAM,cACNN,KAAM,eACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOm3E,cAHlBv3E,CAI1B,CACDwC,QAAS,oBAELg1E,IAA0Bx3E,EAAAA,EAAAA,IAAO,MAAO,CAC5CC,KAAM,cACNN,KAAM,kBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOq3E,iBAHfz3E,EAI7BoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,MAAM,CACL7D,QAAS,OACToB,eAAgB,gBAChBa,QAAS,kBACT,CAAC,MAAD1B,OAAO42E,GAAAA,EAAcr3E,OAAS,CAC5BoK,YAAalJ,EAAM8P,QAAQ,KAE9B,IAIK0tB,KAHqB/+B,EAAAA,EAAAA,IAAOusE,GAAAA,EAAPvsE,CAAmB,CAC5C2B,eAAgB,aAED,IAAIq9B,KAAKC,UACpB04C,GAAyBA,CAAC97D,EAAQ+7D,KAC9B/7D,EAAOm1B,YAAcn1B,EAAOL,OAAO8yB,cAAcliB,QAAQwrD,IAAgB,ECxDnF,MAAM93E,GAAY,CAAC,WAAY,YAAa,WAc/B+3E,IAAmBh4E,EAAAA,EAAAA,GAAuB,cAAe,CAAC,QAAS,UAC1Ei4E,IAAgB93E,EAAAA,EAAAA,IAAOs7C,GAAAA,EAAQ,CACnCr7C,KAAM,cACNN,KAAM,QACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOwqE,OAHzB5qE,EAInBoE,IAAA,IAAC,MACF7C,GACD6C,EAAA,MAAM,CACLzB,OAAQpB,EAAMoB,OAAO64C,MACtB,IACKu8B,IAAgB/3E,EAAAA,EAAAA,IAAO28C,GAAAA,EAAO,CAClC18C,KAAM,cACNN,KAAM,QACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO6Q,OAHzBjR,EAInBsE,IAAA,IAAC,MACF/C,GACD+C,EAAA,MAAM,CACLnB,iBAAkB5B,EAAM6B,MAAQ7B,GAAO8B,QAAQ0L,WAAWkC,MAC1D5O,SAAU,IACV+tE,UAAW,IACX7vE,QAAS,OACV,IACKy3E,GAAyB/zE,EAAAA,YAAiB,CAAC9D,EAAOgE,KACtD,MAAM,SACFa,EAAQ,UACRJ,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZzZ,EAAUsxE,IACTI,EAAUC,GAAej0E,EAAAA,UAAe,GACzC+3C,EAAkB/3C,EAAAA,aAAkB,KACxCwP,EAAOzB,QAAQmmE,iBAAiB,GAC/B,CAAC1kE,IACEolB,EAAgB50B,EAAAA,aAAkB6qB,IAClCsI,GAAYtI,EAAMtjB,MACpBiI,EAAOzB,QAAQmmE,iBACjB,GACC,CAAC1kE,IACE2kE,EAAYn0E,EAAAA,SAAc,IAAM,CAAC,CACrChE,KAAM,OACNo4E,SAAS,GACR,CACDp4E,KAAM,WACNo4E,SAAS,EACTC,MAAO,OACPnmE,GAAIA,KACF+lE,GAAY,EAAK,EAEnBK,OAAQA,IAAM,KACZL,GAAY,EAAM,KAElB,KACG/7B,EAAUq8B,GAAev0E,EAAAA,SAAe,MAQ/C,OAPAA,EAAAA,WAAgB,KACd,IAAIw0E,EACJ,MAAMC,EAAkF,OAA1DD,EAAwBhlE,EAAOzB,QAAQgP,iBAAsF,OAA1Dy3D,EAAwBA,EAAsBzmE,cAAmB,EAASymE,EAAsB//C,cAAc,IAAD53B,OAAKkL,EAAYwE,gBAC3NkoE,GACFF,EAAYE,EACd,GACC,CAACjlE,IACC0oC,GAGez0C,EAAAA,GAAAA,KAAKowE,IAAet2E,EAAAA,EAAAA,GAAS,CAC/C2C,IAAKA,EACLi4C,UAAW,eACXx3C,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW2B,EAAQqkE,OACnCjqE,WAAYqG,EACZm1C,SAAUA,EACVi8B,UAAWA,GACVxyE,EAAO,CACRZ,UAAuB0C,EAAAA,GAAAA,KAAK40C,GAAAA,EAAmB,CAC7CE,WAAY,YACZD,YAAaP,EACbh3C,UAAuB0C,EAAAA,GAAAA,KAAKqwE,GAAe,CACzCnzE,UAAW2B,EAAQ0K,MACnBtQ,WAAYqG,EACZ2xE,UAAW,EACXx/C,UAAWN,EACX7zB,SAAUizE,GAAYjzE,SAlBnB,IAqBN,IClGE,SAAS4zE,GAAS/zE,GACvB,OAAoBZ,EAAAA,KAAWY,EAAWqO,EAC5C,CCHA,IAAI2lE,GCCJ,MAAM/4E,GAAY,CAAC,eAAgB,gCAEjCg5E,GAAa,CAAC,SAAU,QAAS,gBAAiB,QAAS,WAAY,WAAY,SAAU,QAAS,YAAa,kBAAmB,qBAAsB,MAAO,UAAW,oBAAqB,eAAgB,UAAW,gBAAiB,cAAe,YAAa,cAAe,YAAa,UAAW,cAAe,cACjUC,GAAa,CAAC,eAAgB,gCAe1BC,GAAoB,CACxB9/D,IAAK,EACLsC,MAAO,YACP3N,IAAK,CAAC,EACNqqB,QAAS,CACPhf,IAAK,EACL2F,MAAO,EACP7U,KAAM,OACN8zD,QAAS,EACTU,YAAa,MAEfzhC,OAAQ,CACN/yB,KAAM,SACNwR,MAAO,YACPW,cAAe,GAEjBw1C,SAAU1Z,GAAc8b,KACxB57B,UAAU,EACVvS,UAAW,EACX5P,MAAO,KACPy5B,eAAgB,YAChBkkB,YAAY,EACZvhC,IAAK,CAAC,GAEF3rB,GAAoB9F,IACxB,MAAM,MACJyoC,EAAK,gBACL6vC,EAAe,WACftlB,EAAU,WACVulB,EAAU,gBACVC,EAAe,QACf5yE,GACE5F,EACE6E,EAAQ,CACZnF,KAAM,CAAC,OAAQ,aAAFS,QAAeC,EAAAA,EAAAA,GAAWqoC,IAAUuqB,GAAc,iBAAkBulB,GAAc,WAAYD,GAAmB,wBAAyBE,IAAoBxlB,GAAc,sBAAuB,mBAChNylB,QAAS,CAAC,gBAEZ,OAAO5yE,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAQhE,MAyQM8yE,GAAsBT,GAzQS30E,EAAAA,YAAiB,CAAC9D,EAAOgE,KAC5D,MAAM,OACJ0X,EAAM,MACNge,EAAK,cACLy/C,GACEn5E,EACEsT,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZxE,EAAQK,EAAOL,MACf+9D,EAAoBrlE,EAAgBT,GAAQ,KAIhD,IACE,MACMyxB,EADazxB,EAAOzB,QAAQ4rB,cAAc/D,EAAOre,GAGvD,OADA0pB,EAAO9S,IAAM3e,EAAOzB,QACbkzB,CACT,CAAE,MAAO9rB,GACP,GAAIA,aAAa2mD,GACf,OAAOiZ,GAET,MAAM5/D,CACR,IACCrF,GACGmlE,EAAahlE,EAAgBT,GAAQ,IAAMA,EAAOzB,QAAQqjB,6BAA6B,kBAAkB,EAAO,CACpHnc,GAAI2gB,EACJre,YAEF,GAAI+9D,IAAsBP,GACxB,OAAO,KAET,MAAM,SACJrnB,EAAQ,SACRx5B,EAAQ,WACRw7B,EAAU,MACV39C,EAAK,eACLy5B,GACE8pC,EACEC,EAAkC,YAAhB39D,EAAO7R,KACzB4b,EAAyB,SAAb+rC,GAAwBgC,GAAgB6lB,GAAgD,EAA9BD,EAAkB3zD,UAE5Frf,QAASkzE,EAAW,iBACpBC,GACE1yE,EACE2yE,EAAalmE,EAAOzB,QAAQqjB,6BAA6B,gBAAiB,GAAI,CAClFnc,GAAI2gB,EACJre,UAQF,IAAIxW,EAMJ,GAZI6W,EAAOylD,eACTqY,EAAWnhE,KAAqC,oBAAzBqD,EAAOylD,cAA+BzlD,EAAOylD,cAAciY,GAAqB19D,EAAOylD,eAE5GoY,GACFC,EAAWnhE,KAAKkhE,EAAiBH,IAGd,MAAjBD,GAAyBz9D,EAAOqyB,aAClClpC,EAAW6W,EAAOqyB,WAAWqrC,GAC7BI,EAAWnhE,KAAKxM,EAAY,uBAC5B2tE,EAAWnhE,KAAoB,MAAfihE,OAAsB,EAASA,EAAY,wBAExC,MAAjBH,GAAyBz9D,EAAOguB,eAAgB,CAClD,MAAM+vC,EAAanmE,EAAOzB,QAAQwoD,wBAAwB3gC,EAAOhe,EAAOL,OAGlEq+D,GAAoBh0E,EAAAA,EAAAA,GAA8ByzE,EAAex5E,IACjEyY,GAAS/W,EAAAA,EAAAA,GAAS,CAAC,EAAG+3E,EAAmB,CAC7C1rE,IAAK+rE,GACJC,GACH70E,EAAW6W,EAAOguB,eAAetxB,GACjCohE,EAAWnhE,KAAKxM,EAAY,kBAC5B2tE,EAAWnhE,KAAoB,MAAfihE,OAAsB,EAASA,EAAY,iBAC7D,CACA,MAAM,MACJj0E,GACEwB,EACE8yE,EAAgBt0E,EAAMoH,KACtBmtE,GAAYv4E,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACpCgE,MACAqX,QACAi0B,iBACAtX,WACAw7B,aACAulB,aACAljE,QACA27C,WACA3sD,WACA4gB,WACAhhB,WAAW2C,EAAAA,EAAAA,GAAKoyE,KAElB,OAAoB11E,EAAAA,cAAoB61E,EAAeC,EAAU,KA6e7DC,GAAqBpB,GArQK30E,EAAAA,YAAiB,CAAC9D,EAAOgE,KACvD,IAAI81E,EAAa71E,EAAM81E,EAA+CC,EACtE,MAAM,OACFt+D,EAAM,MACNge,EAAK,cACLy/C,EAAa,MACblwC,EAAK,SACL8lB,EAAQ,OACRzsD,EAAM,MACN2J,EAAK,UACLxH,EAAS,gBACTq0E,EAAe,QACfpK,EAAO,kBACPuL,EAAiB,aACjBC,EAAY,QACZp8B,EAAO,cACPq8B,EAAa,YACbC,EAAW,UACXC,EAAS,YACTC,EAAW,UACXthD,EAAS,QACTuhD,EAAO,YACPC,EAAW,WACXC,GACEz6E,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAO24E,IACzCrlE,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZxE,EAAQK,EAAOL,MACf+9D,EAAoBrlE,EAAgBT,GAAQ,KAIhD,IACE,MACMyxB,EADazxB,EAAOzB,QAAQ4rB,cAAc/D,EAAOre,GAGvD,OADA0pB,EAAO9S,IAAM3e,EAAOzB,QACbkzB,CACT,CAAE,MAAO9rB,GACP,GAAIA,aAAa2mD,GACf,OAAOiZ,GAET,MAAM5/D,CACR,IACCrF,GACGmlE,EAAahlE,EAAgBT,GAAQ,IAAMA,EAAOzB,QAAQqjB,6BAA6B,kBAAkB,EAAO,CACpHnc,GAAI2gB,EACJre,aAEI,SACJm2C,EAAQ,SACRx5B,EAAQ,WACRw7B,EAAU,MACV39C,EAAK,eACLy5B,GACE8pC,EACEsB,EAAoC,YAAhBh/D,EAAO7R,OAAqE,OAA7CiwE,GAAe71E,EAAOyX,GAAQwhC,iBAAsB,EAAS48B,EAAY5vD,KAAKjmB,EAAMqP,EAAOzB,QAAQmqB,aAAatC,IAAQoK,MAAKz7B,IAAWA,EAAOrI,MAAM6I,YACxM4c,EAAyB,SAAb+rC,GAAwBgC,GAAgBknB,GAAkD,EAA9BtB,EAAkB3zD,UAE9Frf,QAASkzE,EAAW,iBACpBC,GACE1yE,EACE2yE,EAAalmE,EAAOzB,QAAQqjB,6BAA6B,gBAAiB,GAAI,CAClFnc,GAAI2gB,EACJre,UAEEK,EAAOylD,eACTqY,EAAWnhE,KAAqC,oBAAzBqD,EAAOylD,cAA+BzlD,EAAOylD,cAAciY,GAAqB19D,EAAOylD,eAE5GoY,GACFC,EAAWnhE,KAAKkhE,EAAiBH,IAEnC,MAAMuB,EAAkC,MAAlBrrC,EAAyBz5B,EAAQy5B,EACjDsrC,EAAU92E,EAAAA,OAAa,MACvB0c,IAAYC,EAAAA,EAAAA,GAAWzc,EAAK42E,GAC5Bh7C,GAAkB97B,EAAAA,OAAa,MAE/Bk1E,GAAgF,OAA7De,EAAwBlzE,EAAUg0E,yBAAkCd,EACvFv5E,GAAa,CACjByoC,QACA6vC,kBACAtlB,aACAptD,QAASS,EAAUT,QACnB2yE,aACAC,oBAEI5yE,GAAUE,GAAkB9F,IAC5Bs6E,GAAiBh3E,EAAAA,aAAkBqqB,GAAaQ,IACpD,MAAMvW,EAAS9E,EAAOzB,QAAQ4rB,cAAc/D,EAAOre,GAAS,IAC5D/H,EAAOzB,QAAQ+f,aAAazD,EAAW/V,EAAQuW,GAC3C0rD,GACFA,EAAU1rD,EACZ,GACC,CAACrb,EAAQ+H,EAAOg/D,EAAW3gD,IACxBqhD,GAAmBj3E,EAAAA,aAAkBqqB,GAAaQ,IACtD,MAAMvW,EAAS9E,EAAOzB,QAAQ4rB,cAAc/D,EAAOre,GAAS,IAC5D/H,EAAOzB,QAAQ+f,aAAazD,EAAW/V,EAAQuW,GAC3CyrD,GACFA,EAAYzrD,EACd,GACC,CAACrb,EAAQ+H,EAAO++D,EAAa1gD,IAC1BshD,GAAUl3E,EAAAA,aAAkB,CAACqqB,EAAW8sD,IAAgBtsD,IAE5D,IAAKrb,EAAOzB,QAAQkqB,OAAOrC,GACzB,OAEF,MAAMthB,EAAS9E,EAAOzB,QAAQ4rB,cAAc/D,EAAOre,GAAS,IAC5D/H,EAAOzB,QAAQ+f,aAAazD,EAAW/V,EAAQuW,GAC3CssD,GACFA,EAAYtsD,EACd,GACC,CAACrb,EAAQ+H,EAAOqe,IACb4X,GAAQxtC,EAAAA,SAAc,KAC1B,GAAIo2E,EACF,MAAO,CACL73E,QAAS,EACTyN,QAAS,EACT7D,MAAO,EACPmC,OAAQ,GAUZ,MAPkB,CAChBlM,SAAU+J,EACVo8B,SAAUp8B,EACVqD,UAAWhN,EACX2tE,UAAsB,SAAX3tE,EAAoB,OAASA,EAG1B,GACf,CAAC2J,EAAO3J,EAAQ43E,IAoBnB,GAnBAp2E,EAAAA,WAAgB,KACd,IAAKk0B,GAAYw5B,IAAa1Z,GAAc2Z,KAC1C,OAEF,MAAM7J,GAAMI,EAAAA,GAAAA,GAAc10C,EAAOzB,QAAQgP,eAAehP,SACxD,GAAI+oE,EAAQ/oE,UAAY+oE,EAAQ/oE,QAAQiqC,SAAS8L,EAAIjM,eAAgB,CACnE,MAAMu/B,EAAmBN,EAAQ/oE,QAAQ0mB,cAAc,kBACjD4iD,EAAiBv7C,GAAgB/tB,SAAWqpE,GAAoBN,EAAQ/oE,QAC9E,QD1gBgC1L,IAAhCuyE,IACFtnC,SAASC,cAAc,OAAOpsB,MAAM,CAClC,iBAAIuT,GAEF,OADAkgD,IAA8B,GACvB,CACT,IAGGA,GCmgBDyC,EAAel2D,MAAM,CACnBuT,eAAe,QAEZ,CACL,MAAM4iD,EAAiB9nE,EAAOzB,QAAQwpE,oBACtCF,EAAel2D,QACf3R,EAAOzB,QAAQypE,OAAOF,EACxB,CACF,IACC,CAACpjD,EAAUw5B,EAAUl+C,IACpB8lE,IAAsBP,GACxB,OAAO,KAET,IAgBIh0E,GAhBA02E,GAAc91E,EAAM+1E,QAsBxB,GALqB,MAAjBrC,GAAyBz9D,EAAOqyB,aAClClpC,GAAW6W,EAAOqyB,WAAWqrC,GAC7BI,EAAWnhE,KAAKxM,EAAY,uBAC5B2tE,EAAWnhE,KAAoB,MAAfihE,OAAsB,EAASA,EAAY,wBAExC,MAAjBH,GAAyBz9D,EAAOguB,eAAgB,CAClD,MAAM+vC,EAAanmE,EAAOzB,QAAQwoD,wBAAwB3gC,EAAOhe,EAAOL,OAGlEq+D,GAAoBh0E,EAAAA,EAAAA,GAA8ByzE,EAAeP,IACjExgE,GAAS/W,EAAAA,EAAAA,GAAS,CAAC,EAAG+3E,EAAmB,CAC7C1rE,IAAK+rE,GACJC,GACH70E,GAAW6W,EAAOguB,eAAetxB,GACjCohE,EAAWnhE,KAAKxM,EAAY,kBAC5B2tE,EAAWnhE,KAAoB,MAAfihE,OAAsB,EAASA,EAAY,iBAC7D,CACA,QAAiBnzE,IAAbtB,GAAwB,CAC1B,MAAM42E,EAA+B,MAAjBd,OAAwB,EAASA,EAAc/1D,WACnE/f,IAAwB0C,EAAAA,GAAAA,KAAK,MAAO,CAClC9C,UAAW2B,GAAQ6yE,QACnBtzB,MAAO81B,EACPz7D,KAAM,eACNnb,SAAU42E,GAEd,CACkB33E,EAAAA,eAAqBe,KAAa61E,IAClD71E,GAAwBf,EAAAA,aAAmBe,GAAU,CACnD+6B,sBAGJ,MAAM87C,GAAyBzB,EAAoB,KAAO,CACxDO,YAAaQ,GAAQ,gBAAiBR,GACtCC,WAAYO,GAAQ,eAAgBP,IAEhCv6D,GAAsE,OAA5D85D,EAAyBnzE,EAAUoZ,2BAAgC,EAAS+5D,EAAuB95D,OACnH,OAGE3Y,EAAAA,GAAAA,KAAK,OAAOlG,EAAAA,EAAAA,GAAS,CACnB2C,IAAKwc,GACL/b,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW+0E,EAAYpzE,GAAQlG,MAC/C8f,KAAME,GAAS,WAAa,OAC5B,aAAc7E,EACd,gBAAiB0zC,EACjB,gBAAiBA,EAAW,EAC5B,eAAgB2f,EAChBp9B,MAAOA,GACP7rB,SAAUA,EACVq4B,QAASk9B,GAAQ,YAAal9B,GAC9Bq8B,cAAea,GAAQ,kBAAmBb,GAC1CG,YAAaU,GAAQ,gBAAiBV,GACtCF,YAAaW,GAAiB,iBAC9BV,UAAWS,GAAe,eAC1B9hD,UAAWgiD,GAAQ,cAAehiD,GAClCuhD,QAASS,GAAQ,YAAaT,IAC7BmB,GAAwBj2E,EAAO,CAChC+1E,QAASD,GACT12E,SAAUA,KACT,KCrmBDlF,GAAY,CAAC,WAAY,UAAW,QAAS,MAAO,QAAS,QAAS,WAAY,YAAa,YAAa,iBAAkB,kBAAmB,iBAAkB,sBAAuB,qBAAsB,gBAAiB,mCAAoC,eAAgB,cAAe,eAAgB,UAAW,gBAAiB,eAAgB,eAAgB,aAAc,eAuCpY,SAASg8E,GAAS13E,GAEf,IAFgB,MACjBgI,GACDhI,EACC,IAAKgI,EACH,OAAO,KAET,MAAMqlC,EAAQ,CACZrlC,SAEF,OAAoB1E,EAAAA,GAAAA,KAAK,MAAO,CAC9B9C,UAAW,GAAF9D,OAAKkL,EAAYY,KAAI,KAAA9L,OAAIkL,EAAYiC,iBAC9CwjC,MAAOA,GAEX,CAEA,MAwUMsqC,GAAkBnD,GAxUK30E,EAAAA,YAAiB,SAAiB9D,EAAO67E,GACpE,MAAM,SACFC,EAAQ,QACRC,EAAO,MACPriD,EAAK,IACLhsB,EAAG,MACH6U,EACA+uB,MAAO0qC,EAAS,SAChB77E,EAAQ,UACR+rC,EAAS,UACTznC,EAAS,eACTmX,EAAc,gBACdqgE,EAAe,eACfC,EAAc,oBACd/5B,EAAmB,cACnBg6B,GAAgB,EAAK,iCACrBC,EAAgC,aAChClC,EAAY,YACZnnC,EAAW,QACX+K,EAAO,cACPq8B,EAAa,aACbkC,EAAY,aACZC,EAAY,WACZC,EAAU,YACVjC,GACEt6E,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACT5zB,EAAMF,EAAAA,OAAa,MACnB+C,GAAYgZ,EAAAA,EAAAA,KACZ86C,EAAclN,GAAmBn6C,EAAQzM,GACzC21E,EAAoBzoE,EAAgBT,EAAQ2I,IAC5CkG,EAAYpO,EAAgBT,EAAQ4O,IACpCu6D,EAAY1oE,EAAgBT,EAAQkL,IACpCsB,EAAyB/L,EAAgBT,EAAQ6J,IACjDu/D,EAAgB3oE,EAAgBT,EAAQ4+C,IACxC1xC,GAAYC,EAAAA,EAAAA,GAAWzc,EAAK63E,GAC5Bc,EAAep6D,EAAQzC,EAAyB,EAWhD1Z,EA7EkB5F,KACxB,MAAM,SACJqoC,EAAQ,QACRolB,EAAO,SACP6tB,EAAQ,cACRK,EAAa,UACbjwC,EAAS,QACT9lC,GACE5F,EACE6E,EAAQ,CACZnF,KAAM,CAAC,MAAO47E,GAAY,WAAYjzC,GAAY,gBAAiBolB,GAAW,eAAgBkuB,GAAiB,mBAAkC,SAAdjwC,GAAwB,uBAE7J,OAAO7lC,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAiE9CE,CATG,CACjBw1E,WACAC,UACAI,gBACA/1E,QAASS,EAAUT,QACnB6nD,QAAS36C,EAAOzB,QAAQ+lD,WAAWl+B,KAAWqe,GAAa0Z,KAC3D5oB,SAAUhiC,EAAU2xC,WAAaX,GAAcyB,IAC/CpN,cAGFpoC,EAAAA,iBAAsB,KACF,SAAdooC,GAAwBloC,EAAI6N,SAAqC,qBAAnBqV,gBAEhD5T,EAAOzB,QAAQ+qE,mCAAmCljD,EAAO11B,EAAI6N,QAAQ8vD,aAAcxhE,EACrF,GACC,CAACmT,EAAQ44B,EAAWxS,EAAOv5B,IAC9B2D,EAAAA,iBAAsB,KACpB,GAAI62D,EAAYjpB,MAAO,CAMrB,MAAM2d,EAAW/7C,EAAOzB,QAAQgrD,iCAAiCnjC,GAEjD,MAAZ21B,GACF/7C,EAAOzB,QAAQgrE,iCAAiCxtB,EAEpD,CACA,MAAMytB,EAAc94E,EAAI6N,QAExB,IAAKirE,GADgC,SAAd5wC,GACyC,qBAAnBhlB,eAC3C,OAEF,MAAM61D,EAAiB,IAAI71D,gBAAehR,IACxC,MAAOP,GAASO,EACV5T,EAASqT,EAAMqnE,eAAiBrnE,EAAMqnE,cAAc3qE,OAAS,EAAIsD,EAAMqnE,cAAc,GAAGC,UAAYtnE,EAAMunE,YAAY56E,OAC5HgR,EAAOzB,QAAQ+qE,mCAAmCljD,EAAOp3B,EAAQnC,EAAS,IAG5E,OADA48E,EAAez1D,QAAQw1D,GAChB,IAAMC,EAAeI,YAAY,GACvC,CAAC7pE,EAAQqnD,EAAYjpB,MAAOnvB,EAAO2pB,EAAWxS,EAAOv5B,IACxD,MAAM66E,EAAUl3E,EAAAA,aAAkB,CAACqqB,EAAW8sD,IAAgBtsD,KAI9B,IAA1BA,EAAM0C,OAAO+rD,UAAmBzuD,EAAMuhC,cAAcpU,SAASntB,EAAM0C,UAKlE/d,EAAOzB,QAAQkqB,OAAOrC,KAG3BpmB,EAAOzB,QAAQ+f,aAAazD,EAAW7a,EAAOzB,QAAQmqB,aAAatC,GAAQ/K,GACvEssD,GACFA,EAAYtsD,GACd,GACC,CAACrb,EAAQomB,IACN2jD,EAAev5E,EAAAA,aAAkB6qB,IACrC,MAAMliB,EAAO6yD,GAA+B3wC,EAAM0C,OAAQxlB,EAAYY,MAChE4O,EAAgB,MAAR5O,OAAe,EAASA,EAAKg/C,aAAa,cAIxD,GAAIpwC,EAAO,CAET,GAAIA,IAAUizB,GAAgCjzB,MAC5C,OAIF,GAAIA,IAAUuyC,GACZ,OAIF,GAAc,gBAAVvyC,EACF,OAIF,GAAI/H,EAAOzB,QAAQyhD,YAAY55B,EAAOre,KAAWy8B,GAAc2Z,KAC7D,OAIF,MAAM/1C,EAASpI,EAAOzB,QAAQyrB,UAAUjiB,GACxC,IAAe,MAAVK,OAAiB,EAASA,EAAO7R,QAAU80C,GAC9C,MAEJ,CACAq8B,EAAQ,WAAYl9B,EAApBk9B,CAA6BrsD,EAAM,GAClC,CAACrb,EAAQwqC,EAASk9B,EAASthD,KACxB,MACJr0B,EAAK,UACLC,EAAS,qBACTg4E,GACEz2E,EACE8yE,GAAgBt0E,EAAMoH,OAAS8wE,GAAaA,GAAaC,GACzDC,GAAgB52E,EAAU42E,cAC1BC,GAAUA,CAAChiE,EAAQk+D,KACvB,IAAI+D,EAAuBC,EAC3B,MAAM3D,EAAoBqD,GAAwB5hE,EAAO8yB,iBAAmBivC,MAAmBt7D,EAAU9P,QAAUoqE,EAAY,GAAK3pE,OAAOkX,KAAK0yD,GAAerqE,OAAS,EAClK8mE,EAAiJ,OAAhIwE,EAAyE,OAAhDC,EAAuBlB,EAAchjD,SAAkB,EAASkkD,EAAqBliE,EAAOL,QAAkBsiE,EAAwB,KACtL,IAAIE,GAAmB,EAIvB,YAHyC13E,IAArCi2E,GAAkDxgE,EAAewgE,GAAkC/gE,QAAUK,EAAOL,QACtHwiE,GAAmB,IAEDt2E,EAAAA,GAAAA,KAAKoyE,IAAet4E,EAAAA,EAAAA,GAAS,CAC/Cqa,OAAQA,EACRzP,MAAO2tE,EAAU3tE,MACjBytB,MAAOA,EACPp3B,OAAQ4pC,EACR4sC,gBAAiBc,EAAUd,gBAC3B7vC,MAAOvtB,EAAOutB,OAAS,OACvB8lB,SAAU6qB,EAAUkE,0BACpBpP,QAASkL,EAAUlL,QACnBuL,kBAAmBA,EACnBd,cAAeA,EACfe,aAAc2D,GACA,MAAbv4E,OAAoB,EAASA,EAAUmH,MAAOiP,EAAOL,MAAM,EAE1D0iE,GAAQhqE,EAAgBT,GAAQ,KAAMjS,EAAAA,EAAAA,GAAS,CAAC,EAAGiS,EAAOzB,QAAQmsE,6BAA6BtkD,KAAS9lB,GAC9G,IAAItE,GAAY48B,EAChB,GAAkB,SAAd58B,IAAwByuE,GAAO,CACjC,IAAIE,EAAoB,EACxB,MAAMC,EAAcprE,OAAOoD,QAAQ6nE,IAAOxhE,QAAO,CAACC,EAAGrY,KAAkB,IAAfkH,EAAKpD,GAAK9D,EAEhE,MADqB,aAAagkC,KAAK98B,IAIvC4yE,GAAqB,EACjBh2E,EAAOuU,EACFvU,EAEFuU,GANEA,CAMC,GACT,GACC0hE,EAAc,GAAKD,EAAoB,IACzC3uE,GAAY4uE,EAEhB,CACA,MAAM5sC,GAAQxtC,EAAAA,SAAc,KAC1B,GAAIo2E,EACF,MAAO,CACLpqE,QAAS,EACT7D,MAAO,EACP3J,OAAQ,GAGZ,MAAM67E,GAAW98E,EAAAA,EAAAA,GAAS,CAAC,EAAG26E,EAAW,CACvC/L,UAAyB,SAAd/jC,EAAuB,OAASA,EAE3C58B,eAEF,GAAa,MAATyuE,IAAiBA,GAAMK,WAAY,CAErCD,EAD8C,WAA7Bt3E,EAAUw3E,eAA8B,iBAAmB,aACvDN,GAAMK,UAC7B,CACA,GAAa,MAATL,IAAiBA,GAAMO,cAAe,CACxC,MAAMC,EAAwC,WAA7B13E,EAAUw3E,eAA8B,oBAAsB,eAC/E,IAAIG,EAAgBL,EAASI,GAEA,kBAAlBC,IACTA,EAAgBC,SAASD,GAAiB,IAAK,KAEjDA,GAAiBT,GAAMO,cACvBH,EAASI,GAAYC,CACvB,CACA,OAAOL,CAAQ,GACd,CAACjE,EAAchuC,EAAW8vC,EAAW1sE,GAAWyuE,GAAOl3E,EAAUw3E,iBAC9DK,GAAgBprE,EAAOzB,QAAQqjB,6BAA6B,eAAgB,GAAIwE,GACtF,GAAyC,oBAA9B7yB,EAAU83E,gBAAgC,CACnD,IAAIC,GACJ,MAAMC,EAA6Bt8D,IAAsD,OAA3Cq8D,GAAqBjkB,EAAYjpB,YAAiB,EAASktC,GAAmB5jD,gBAAkB,GACxI68B,GAAYx2D,EAAAA,EAAAA,GAAS,CAAC,EAAGiS,EAAOzB,QAAQmqB,aAAatC,GAAQ,CACjEolD,eAA+C,IAA/BD,EAChB1C,cAAe0C,IAA+BlkB,EAAYp9C,KAAKlL,OAAS,EACxEwsE,+BAEFH,GAAcrmE,KAAKxR,EAAU83E,gBAAgB9mB,GAC/C,CACA,MAAMknB,GAAe50D,GAAoB,IAAO,GAAI,IAC9C4N,GAAUzkB,EAAOzB,QAAQipD,WAAWphC,GAC1C,IAAK3B,GACH,OAAO,KAET,MAAMinD,GAAUjnD,GAAQluB,KAClBo1E,GAAQ,GACd,IAAK,IAAIzpE,EAAI,EAAGA,EAAIymE,EAAgB5pE,OAAQmD,GAAK,EAAG,CAClD,MAAMkG,EAASugE,EAAgBzmE,GAC/B,IAAIsoE,EAA4B37B,EAAsB3sC,OACbrP,IAArCi2E,GAAkDrpC,IAChDn3B,EAAewgE,GAAkC/gE,QAAUK,EAAOL,MACpEyiE,EAA4B1B,EAE5B0B,GAA6B,GAGjC,MAAMt7B,EAAkBlvC,EAAOzB,QAAQ4wC,4BAA4B/oB,EAAOokD,GAC1E,GAAIt7B,IAAoBA,EAAgBE,iBACtC,GAAgB,gBAAZs8B,GAA2B,CAC7B,MAAM,QACJtQ,EAAO,MACPziE,GACEu2C,EAAgBo3B,UACdA,EAAY,CAChB3tE,QACAyiE,UACAoK,gBAAiBjyE,EAAUq4E,uBAC3BpB,6BAEFmB,GAAM5mE,KAAKqlE,GAAQhiE,EAAQk+D,GAC7B,KAAO,CACL,MAAM,MACJ3tE,GACEu2C,EAAgBo3B,UACduF,EAAel2D,KAAKqa,MAAMy7C,MAChCE,GAAM5mE,MAAmB9Q,EAAAA,GAAAA,KAAKlC,EAAM+5E,aAAc,CAChDnzE,MAAOA,EACPkzE,aAAcA,EACd9jE,MAAOK,EAAOL,MACd4tB,MAAOvtB,EAAOutB,OACbvtB,EAAOL,OACZ,CAEJ,CACA,MAAMgkE,GAAiBnD,EAAiBM,EAClC8C,GAAgB5xE,EAAM,CAC1BowC,QAASu/B,EACTlD,cAAea,EAAQ,iBAAkBb,GACzCkC,aAAcrB,EAAQ,gBAAiBqB,GACvCC,aAActB,EAAQ,gBAAiBsB,GACvCC,WAAYvB,EAAQ,cAAeuB,GACnCjC,YAAaU,EAAQ,eAAgBV,IACnC,KACJ,OAAoBhzE,EAAAA,GAAAA,MAAM,OAAOjG,EAAAA,EAAAA,GAAS,CACxC2C,IAAKwc,EACL,UAAWkZ,EACX,gBAAiBnX,EACjBvC,KAAM,MACNvb,WAAW2C,EAAAA,EAAAA,MAAQs3E,GAAet4E,EAAQlG,KAAMuE,EAAWs3E,GAAW,eACtE,gBAAiBY,EACjB,gBAAiBb,EACjBxqC,MAAOA,IACNguC,GAAe75E,EAAO,CACvBZ,SAAU,CAACo6E,GAAOI,GAAiB,IAAkB93E,EAAAA,GAAAA,KAAKo0E,GAAW,CACnE1vE,MAAOozE,QAGb,K,gBCrTA,SAASE,GAA4Bv/E,GACnC,IAAIkhB,EACJ,MAAM,UACJ88B,EAAS,MACTz7B,EAAK,aACLgc,GACEv+B,EACEsT,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KAIZzZ,EArCkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZkD,KAAM,CAAC,aAEoBqC,EAAyBxF,EAAQ,EA8B9CE,EAHGjF,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCoG,QAASS,EAAUT,WAGfo5E,EA7BR,SAAiBC,EAAOzhC,EAAWv5C,EAAW85B,GAC5C,IAAI8N,EACJ,MAAMqzC,EAAY,CAAC,EASnB,MARkB,QAAd1hC,EACF3R,EAAOozC,EAAME,0BACU,SAAd3hC,EACT3R,EAAOozC,EAAMG,4BAEbvzC,EAAOozC,EAAMI,mBACbH,EAAUnhD,aAAeA,GAEpB8N,GAAoB9kC,EAAAA,GAAAA,KAAK8kC,GAAMhrC,EAAAA,EAAAA,GAAS,CAC7CW,SAAU,QACVyC,UAAWA,GACVi7E,IAAc,IACnB,CAcsBI,CAAQj5E,EAAUxB,MAAO24C,EAAW53C,EAAQmD,KAAMg1B,GACtE,IAAKihD,EACH,OAAO,KAET,MAAMO,GAA0Bx4E,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMi5C,gBAAgBj9C,EAAAA,EAAAA,GAAS,CAC5EokB,UAAW,EACX,aAAcnS,EAAOzB,QAAQ6kB,cAAc,6BAC3CivB,MAAOryC,EAAOzB,QAAQ6kB,cAAc,6BACpCzuB,KAAM,SAC2C,OAA/CiZ,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBo9B,eAAgB,CACtGz5C,SAAU26E,KAEZ,OAAoBl4E,EAAAA,GAAAA,MAAM0hE,GAAyB,CACjDnkE,SAAU,CAAU,MAAT0d,IAA8Bhb,EAAAA,GAAAA,KAAKb,GAAAA,EAAO,CACnDvB,aAAcod,EACdthB,MAAO,UACP4D,SAAUk7E,IACC,MAATx9D,GAAiBw9D,IAEzB,CACA,MAAMC,GAAwCl8E,EAAAA,KAAWy7E,ICnD5CU,GAAoCn8E,EAAAA,MAAW9D,IAC1D,IAAIkhB,EAAsBC,EAC1B,MAAM,OACJyb,EAAM,KACNkX,EAAI,aACJosC,EAAY,mBACZC,EAAkB,cAClBC,GACEpgF,EACEsT,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KAIZzZ,EAzBkB5F,KACxB,MAAM,QACJ4F,EAAO,KACP0tC,GACEtzC,EACE6E,EAAQ,CACZnF,KAAM,CAAC,WAAY4zC,GAAQ,YAC3BuK,OAAQ,CAAC,mBAEX,OAAOh4C,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAgB9CE,EAHGjF,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCoG,QAASS,EAAUT,WAGfi6E,EAAsBv8E,EAAAA,aAAkB6qB,IAC5CA,EAAMyvB,iBACNzvB,EAAMgK,kBACNrlB,EAAOzB,QAAQg/C,iBAAiBj0B,EAAOvhB,MAAM,GAC5C,CAAC/H,EAAQspB,EAAOvhB,QACnB,OAAoB9T,EAAAA,GAAAA,KAAK,MAAO,CAC9B9C,UAAW2B,EAAQlG,KACnB2E,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMi7E,aAAaj/E,EAAAA,EAAAA,GAAS,CAChEskD,MAAOryC,EAAOzB,QAAQ6kB,cAAc,mBACpC6pD,WAAY,KACqC,OAA/Cr/D,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBo/D,YAAa,CACnGz7E,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMi5C,gBAAgBj9C,EAAAA,EAAAA,GAAS,CACnE2C,IAAKo8E,EACL36D,UAAW,EACXhhB,UAAW2B,EAAQi4C,OACnB,aAAc/qC,EAAOzB,QAAQ6kB,cAAc,mBAC3CzuB,KAAM,QACN61C,QAASuiC,EACT,gBAAiB,OACjB,gBAAiBvsC,EACjB,gBAAiBA,EAAOosC,OAAe/5E,EACvC4S,GAAIonE,GAC8C,OAAhDh/D,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBm9B,eAAgB,CACxGz5C,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMm7E,eAAgB,CAC1Dx+E,SAAU,iBAIhB,ICtDJ,SAASy+E,GAAoBx8E,GAS1B,IAT2B,aAC5Bi8E,EAAY,mBACZC,EAAkB,iBAClBO,EAAgB,sBAChBC,EAAqB,MACrBtlE,EAAK,KACLy4B,EAAI,OACJziB,EAAM,SACNkqB,GACDt3C,EACC,MAAMqP,EAASskB,KACTgF,EAAStpB,EAAOzB,QAAQyrB,UAAUjiB,GAClCqiC,GAAWuX,EAAAA,GAAAA,IAAiBtmC,IAC5BA,IAEFA,EAAMgK,kBACQ,MAAVtH,GAAkBA,EAAOyqB,SAASntB,EAAM0C,UAI9C/d,EAAOzB,QAAQ+uE,gBAAgB,IAEjC,OAAKvvD,GAAWuL,GAGIr1B,EAAAA,GAAAA,KAAK+zC,GAAU,CACjCW,UAAW,UAAFt7C,OAA6B,UAAjBi8B,EAAOqM,MAAoB,QAAU,OAC1D6K,KAAMA,EACNziB,OAAQA,EACR+nB,QAASsE,EACTnC,SAAUA,EACV12C,UAAuB0C,EAAAA,GAAAA,KAAKm5E,GAAkBr/E,EAAAA,EAAAA,GAAS,CACrDu7B,OAAQA,EACR8gB,SAAUA,EACV5J,KAAMA,EACN/6B,GAAImnE,EACJW,WAAYV,GACXQ,MAdI,IAgBX,CC5CA,MAAMhhF,GAAY,CAAC,aAmBbmhF,IAA4BjhF,EAAAA,GAAAA,GAAO,MAAO,CAC9CC,KAAM,cACNN,KAAM,oBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO8gF,mBAHblhF,CAI/B,CACD8Q,aAAc,WACdjB,SAAU,SACVC,WAAY,SACZ7N,WAAY,wCAERk/E,GAAsCl9E,EAAAA,YAAiB,SAAgC9D,EAAOgE,GAClG,MAAM,UACFS,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EAzBkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,sBAEoB0L,EAAyBxF,EAAQ,EAkB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKu5E,IAA2Bz/E,EAAAA,EAAAA,GAAS,CAC3D2C,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,GAC9BjE,WAAYqG,GACXpB,GACL,IAEA,SAASw7E,GAAsBjhF,GAC7B,IAAIkhB,EACJ,MAAM,MACJjX,EAAK,YACLi3E,GACElhF,EACE6G,GAAYgZ,EAAAA,EAAAA,KACZshE,EAAWr9E,EAAAA,OAAa,OACvBs9E,EAASC,GAAcv9E,EAAAA,SAAe,IACvCw9E,EAAkBx9E,EAAAA,aAAkB,KACxC,IAAKo9E,GAA2B,MAAZC,GAAoBA,EAAStvE,QAAS,CACxD,MAAM0vE,GvCvDgBppD,EuCuDKgpD,EAAStvE,SvCtDzB2vE,aAAerpD,EAAQwpC,cAAgBxpC,EAAQspD,YAActpD,EAAQupD,YuCwD9EL,EADEE,EACSt3E,EAEA,GAEf,CvC7DG,IAAqBkuB,CuC6DxB,GACC,CAAC+oD,EAAaj3E,IACjB,OAAoB1C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMi7E,aAAaj/E,EAAAA,EAAAA,GAAS,CAC7DskD,MAAOu7B,GAAeE,GAC2B,OAA/ClgE,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBo/D,YAAa,CACnGz7E,UAAuB0C,EAAAA,GAAAA,KAAKy5E,GAAwB,CAClD1G,YAAagH,EACbt9E,IAAKm9E,EACLt8E,SAAUoF,MAGhB,CCvEA,MAAMtK,GAAY,CAAC,YAAa,WAAY,SAAU,QAOtD,IAAIgiF,GAA8C,SAAUA,GAG1D,OAFAA,EAAqC,KAAI,OACzCA,EAAsC,MAAI,QACnCA,CACT,CAJkD,CAIhDA,IAAkC,CAAC,GAcrC,SAASC,GAA6B5hF,GACpC,MAAM,OACFsC,EAAM,KACNu/E,EAAOF,GAA+BG,OACpC9hF,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KAKZzZ,EAxBkB5F,KACxB,MAAM,UACJioC,EAAS,SACTs5C,EAAQ,QACR37E,EAAO,KACPy7E,GACErhF,EACE6E,EAAQ,CACZnF,KAAM,CAAC,kBAAmBuoC,GAAa,6BAA8Bs5C,GAAY,4BAA6BF,GAAQ,wBAAJlhF,QAA4BC,EAAAA,EAAAA,GAAWihF,KACzJt4E,KAAM,CAAC,kBAET,OAAOlD,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAa9CE,EAJGjF,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrC6hF,OACAz7E,QAASS,EAAUT,WAGf47E,EAAYl+E,EAAAA,aAAkB6qB,IAClCA,EAAMyvB,iBACNzvB,EAAMgK,iBAAiB,GACtB,IACH,OAGEpxB,EAAAA,GAAAA,KAAK,OAAOlG,EAAAA,EAAAA,GAAS,CACnBoD,UAAW2B,EAAQlG,KACnBoxC,MAAO,CACLhiC,UAAWhN,EACXwN,QAASjJ,EAAUo7E,yBAA2B,EAAI,IAEnDx8E,EAAO,CACRq4C,QAASkkC,EACTn9E,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM68E,iBAAkB,CAC5Dz9E,UAAW2B,EAAQmD,SAI3B,CACA,MAAM44E,GAAyCr+E,EAAAA,KAAW89E,IC1DpDjiF,GAAY,CAAC,UAAW,iBAAkB,WAAY,SAAU,aAAc,gBAAiB,WAAY,WAAY,gBAAiB,cAAe,kBAAmB,cAAe,YAAa,QAAS,uBAAwB,aAAc,yBAA0B,kBAAmB,QAAS,YAAa,0BAA2B,8BAUnVyiF,GAA2Ct+E,EAAAA,YAAiB,SAAqC9D,EAAOgE,GAC5G,MAAM,QACFoC,EAAO,eACPi8E,EAAc,SACdtzB,EAAQ,OACRzsD,EAAM,WACNggF,EAAU,cACV9/D,EAAa,SACbwV,EAAQ,SACRvS,EAAQ,cACR88D,EAAa,YACbC,EAAW,gBACXC,EAAe,YACfvB,EAAW,MACXj1E,EAAK,qBACLy2E,EAAuB,KAAI,WAC3B58D,EAAa,KAAI,uBACjB68D,EAAyB,KAAI,gBAC7BvhB,EAAe,MACfn3D,EAAK,UACLw+B,EAAS,wBACTm6C,EAAuB,2BACvBC,GACE7iF,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASiB,IACT1N,GAAYgZ,EAAAA,EAAAA,KACZijE,EAAgBh/E,EAAAA,OAAa,OAC5Bi/E,EAAoBC,GAAyBl/E,EAAAA,SAAeu+E,GAC7D7hE,GAAYC,EAAAA,EAAAA,GAAWqiE,EAAe9+E,GAC5C,IAAIi/E,EAAW,OAkBf,OAjBqB,MAAjBzgE,IACFygE,EAA6B,QAAlBzgE,EAA0B,YAAc,cAErD1e,EAAAA,WAAgB,KACTi/E,GACHC,EAAsBX,EACxB,GACC,CAACU,EAAoBV,IACxBv+E,EAAAA,iBAAsB,KACpB,MAAM8iB,EAAkBtT,EAAOzB,QAAQ6B,MAAMoS,WAC7C,GAAIkS,IAAapR,EAAgBktB,KAAM,CACrC,MACMqnC,EADmB2H,EAAcjxE,QAAQ0mB,cAAc,mBAClBuqD,EAAcjxE,QACvC,MAAlBspE,GAA0BA,EAAel2D,QACzC3R,EAAOzB,QAAQgW,iCAAiChW,QAAQqxE,WAAa,CACvE,IACC,CAAC5vE,EAAQ0kB,KACQ1wB,EAAAA,GAAAA,MAAM,OAAOjG,EAAAA,EAAAA,GAAS,CACxC2C,IAAKwc,EACL/b,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMkhE,GAC9B9vB,MAAO,CACLhvC,SACA2J,QACA/J,SAAU+J,EACVo8B,SAAUp8B,GAEZ+T,KAAM,eACNyF,SAAUA,EACV,gBAAiBspC,EAAW,EAC5B,YAAak0B,EACb,aAAiC,MAAnBR,EAA0Bx4E,OAAQ9D,GAC/CV,EAAO,CACRZ,SAAU,EAAcyC,EAAAA,GAAAA,MAAM,OAAOjG,EAAAA,EAAAA,GAAS,CAC5CoD,UAAW2B,EAAQ+8E,mBACnBC,UAAWZ,EACXxiE,KAAM,gBACL4iE,EAAyB,CAC1B/9E,SAAU,EAAcyC,EAAAA,GAAAA,MAAM,MAAO,CACnC7C,UAAW2B,EAAQi9E,eACnBrjE,KAAM,eACNnb,SAAU,EAAc0C,EAAAA,GAAAA,KAAK,MAAO,CAClC9C,UAAW2B,EAAQk9E,sBACnBz+E,cAA8BsB,IAApBs8E,EAAgCA,GAA+Bl7E,EAAAA,GAAAA,KAAK05E,GAAuB,CACnGh3E,MAAOA,EACPi3E,YAAaA,EACbqC,YAAat3E,MAEb02E,KACFD,OACYn7E,EAAAA,GAAAA,KAAK46E,IAA2B9gF,EAAAA,EAAAA,GAAS,CACzDonC,WAAY5hC,EAAU28E,uBAAyB/6C,EAC/Cs5C,SAAUO,EACVhgF,OAAQA,EACRu/E,KAAMU,GACLM,IAA8B/8D,KAErC,ICjEA,SAAS29D,GAAqBzjF,GAC5B,IAAIkhB,EAAsBwiE,EAAsBviE,EAAuBwiE,EACvE,MAAM,OACJ/mD,EAAM,eACNylD,EAAc,SACdtzB,EAAQ,aACR7L,EAAY,WACZo/B,EAAU,cACV9/D,EAAa,UACbC,EAAS,mBACTmhE,EAAkB,SAClB5rD,EAAQ,SACRvS,EAAQ,eACR+oB,EAAc,cACd+zC,GACEviF,EACEsT,EAASiB,IACT1N,GAAYgZ,EAAAA,EAAAA,KACZijE,EAAgBh/E,EAAAA,OAAa,MAC7Bo8E,GAAe7/C,EAAAA,GAAAA,KACf8/C,GAAqB9/C,EAAAA,GAAAA,KACrB+/C,EAAgBt8E,EAAAA,OAAa,OAC5Bi/E,EAAoBC,GAAyBl/E,EAAAA,SAAeu+E,GAC7DG,EAAc1+E,EAAAA,SAAc,KAAO+C,EAAUy2E,uBAAyB9uC,IAAmB5R,EAAO4R,gBAAgB,CAAC3nC,EAAUy2E,qBAAsB9uC,EAAgB5R,EAAO4R,iBAC9K,IAAIi0C,EACA7lD,EAAO+R,eACT8zC,EAAkB7lD,EAAO+R,aAAar7B,EAAOzB,QAAQiuD,sBAAsBljC,EAAOvhB,SAEpF,MAIMjV,EArDkB5F,KACxB,MAAM,OACJo8B,EAAM,QACNx2B,EAAO,WACPy9E,EAAU,cACVrhE,EAAa,gBACbs2D,EAAe,mBACf8K,GACEpjF,EACEsjF,EAAkC,MAAjBthE,EACjBuhE,EAAyC,MAAtBH,GAA8BA,EAAqB,EAEtEI,EAAkC,WAAhBpnD,EAAO/yB,KACzBxE,EAAQ,CACZnF,KAAM,CAAC,eAAuC,SAAvB08B,EAAOkR,aAA0B,0BAAkD,WAAvBlR,EAAOkR,aAA4B,4BAAoD,UAAvBlR,EAAOkR,aAA2B,2BAA4BlR,EAAO4L,UAAY,yBAA0Bq7C,GAAc,uBAAwBC,GAAkB,uBAAwBC,GAAoB,yBAA0BC,GAAmB,wBAAyB,kBAAmBlL,GAAmB,iCAC9cqK,mBAAoB,CAAC,kCACrBE,eAAgB,CAAC,8BACjBC,sBAAuB,CAAC,sCAE1B,OAAOj9E,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAkC9CE,EAJGjF,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCoG,QAASS,EAAUT,QACnB0yE,gBAAiBjyE,EAAUo7E,4BAGvBjH,EAAUl3E,EAAAA,aAAkBqqB,GAAaQ,IAGxCA,EAAMuhC,cAAcpU,SAASntB,EAAM0C,SAGxC/d,EAAOzB,QAAQ+f,aAAazD,EAAW7a,EAAOzB,QAAQiuD,sBAAsBljC,EAAOvhB,OAAQsT,EAAM,GAChG,CAACrb,EAAQspB,EAAOvhB,QACb4oE,EAAsBngF,EAAAA,SAAc,KAAM,CAC9Cg6C,QAASk9B,EAAQ,qBACjBb,cAAea,EAAQ,2BACvBV,YAAaU,EAAQ,oBAErBuB,WAAYvB,EAAQ,mBAEpBqB,aAAcrB,EAAQ,qBAEtBsB,aAActB,EAAQ,qBAEtBhiD,UAAWgiD,EAAQ,uBACnBQ,QAASR,EAAQ,qBACjBkJ,OAAQlJ,EAAQ,uBACd,CAACA,IACCU,EAAyB53E,EAAAA,SAAc,IAAM0+E,EAAc,CAC/D2B,YAAanJ,EAAQ,yBACrBR,YAAaQ,EAAQ,yBACrBP,WAAYO,EAAQ,wBACpBoJ,UAAWpJ,EAAQ,wBACjB,CAAC,GAAG,CAACwH,EAAaxH,IAChB6H,EAA6B/+E,EAAAA,SAAc,KAAM,CACrDs2E,YAAaY,EAAQ,4BACrBb,cAAea,EAAQ,iCACrB,CAACA,IACLl3E,EAAAA,WAAgB,KACTi/E,GACHC,EAAsBX,EACxB,GACC,CAACU,EAAoBV,IACxB,MAAMgC,EAAevgF,EAAAA,aAAkB,KACrCk/E,GAAsB,EAAM,GAC3B,IACGN,GAAwB77E,EAAU0nC,oBAAsB3R,EAAO2R,oBAAkChnC,EAAAA,GAAAA,KAAK04E,GAAsB,CAChIrjD,OAAQA,EACRsjD,aAAcA,EACdC,mBAAoBA,EACpBrsC,KAAMivC,EACN3C,cAAeA,IAEXt6D,GAA0Bve,EAAAA,GAAAA,KAAKk5E,GAAsB,CACzDP,aAAcA,EACdC,mBAAoBA,EACpB9kE,MAAOuhB,EAAOvhB,MACdy4B,KAAMuuC,EACNhxD,OAAQ+uD,EAAcvuE,QACtB6uE,iBAAkB75E,EAAUxB,MAAMygB,WAClC66D,sBAAuE,OAA/Cz/D,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB4E,WAC5Gy1B,SAAU8oC,IAEN9lD,EAA+D,OAA/CmlD,EAAuB9mD,EAAO2B,cAAwBmlD,EAAuB78E,EAAU03B,aACvGokD,GAAsCr7E,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CAChEe,SAAU,EAAEgC,EAAUy9E,sBAAoC/8E,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMk/E,8BAA8BljF,EAAAA,EAAAA,GAAS,CACpHga,MAAOuhB,EAAOvhB,MACdmpE,QAASZ,GACyC,OAAhDziE,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBojE,+BAAgC3nD,EAAO4L,WAAa5L,EAAO6nD,gBAA8Bl9E,EAAAA,GAAAA,KAAKy4E,GAA0B,CAChNhiC,UAAWx7B,EACXD,MAAOE,EACP8b,aAAcA,OAGlBz6B,EAAAA,iBAAsB,KACpB,MAAM8iB,EAAkBtT,EAAOzB,QAAQ6B,MAAMoS,WAC7C,GAAIkS,IAAapR,EAAgBktB,KAAM,CACrC,MACMqnC,EADmB2H,EAAcjxE,QAAQ0mB,cAAc,mBAClBuqD,EAAcjxE,QACvC,MAAlBspE,GAA0BA,EAAel2D,QACzC3R,EAAOzB,QAAQgW,iCAAiChW,QAAQqxE,WAAa,CACvE,IACC,CAAC5vE,EAAQ0kB,IACZ,MAAMopC,EAAoD,oBAA3BxkC,EAAOwkC,gBAAiCxkC,EAAOwkC,gBAAgB,CAC5F/lD,MAAOuhB,EAAOvhB,MACduhB,WACGA,EAAOwkC,gBACNn3D,EAAoD,OAA3C05E,EAAqB/mD,EAAOiU,YAAsB8yC,EAAqB/mD,EAAOvhB,MAC7F,OAAoB9T,EAAAA,GAAAA,KAAK66E,IAA6B/gF,EAAAA,EAAAA,GAAS,CAC7D2C,IAAK8+E,EACL18E,QAASA,EACTi8E,eAAgBA,EAChBtzB,SAAUA,EACVzsD,OAAQ4gD,EACRo/B,WAAYA,EACZ9/D,cAAeA,EACfwV,SAAUA,EACVvS,SAAUA,EACV88D,cAAeA,EACfC,YAAaA,EACbC,gBAAiBA,EACjBvB,YAAatkD,EAAOskD,YACpBwD,UAAW9nD,EAAOvhB,MAClBpP,MAAO2wB,EAAO5gB,cACd0mE,qBAAsBA,EACtBC,uBAAwBA,EACxBvhB,gBAAiBA,EACjBn3D,MAAOA,EACPw+B,WAAY5hC,EAAU28E,uBAAyB5mD,EAAO6L,UACtD,aAAc7L,EAAOvhB,MACrByK,WAAYA,EACZ88D,wBAAyBlH,EACzBmH,2BAA4BA,GAC3BoB,GACL,CC3KO,MAAMU,GAA6BjxE,GAASA,EAAMkxE,eAM5CC,GAAoCnsE,EAAeisE,IAA4BjxE,GAASA,EAAMwkE,UAM9F4M,GAA0CpsE,EAAeisE,IAA4BjxE,GAASA,EAAMqxE,oBCf3GplF,GAAY,CAAC,SACjB04C,GAAa,CAAC,SAsBT,SAAS2sC,GAAaC,EAAQnpE,GAAwD,IAA7CopE,EAAU9yE,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,EAAG+yE,EAAQ/yE,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG0J,EAAUzJ,OACnF,GAAIyJ,EAAUzJ,QAAU,EACtB,OAAQ,EAEV,GAAI6yE,GAAcC,EAChB,OAAOD,EAET,MAAME,EAAQF,EAAaj8D,KAAKkjB,OAAOg5C,EAAWD,GAAc,GAEhE,OAAOD,GADYnpE,EAAUspE,GACCJ,GAAaC,EAAQnpE,EAAWopE,EAAYE,GAASJ,GAAaC,EAAQnpE,EAAWspE,EAAQ,EAAGD,EAChI,CASO,MAAME,GAAuBlkF,IAM9B,IAN+B,WACnCmkF,EAAU,UACVC,EAAS,OACTC,EAAM,cACNC,EAAa,aACbC,GACDvkF,EACC,MAAO,CAAC4nB,GAAMu8D,EAAaE,EAAQC,EAAeC,GAAe38D,GAAMw8D,EAAYC,EAAQC,EAAeC,GAAc,EAE7GC,GAAyBA,CAACC,EAAUC,IAC3CD,IAAaC,GAGVD,EAAS5qD,gBAAkB6qD,EAAS7qD,eAAiB4qD,EAAS3qD,eAAiB4qD,EAAS5qD,cAAgB2qD,EAAS9iC,mBAAqB+iC,EAAS/iC,kBAAoB8iC,EAASE,kBAAoBD,EAASC,gBAI5MC,GAAkB,CACtB5wE,QAAS,GAEE6wE,GAAyBhmF,IACpC,IAAIimF,EAAqBC,EACzB,MAAM5yE,EAASiB,IACT1N,GAAYgZ,EAAAA,EAAAA,KACZjE,EAAiB7H,EAAgBT,EAAQkI,IACzC08D,EAAUnkE,EAAgBT,EAAQuxE,IAClCE,EAAoBhxE,EAAgBT,EAAQwxE,KAC5C,IACJ9gF,EAAG,wBACHmiF,EAAuB,yBACvBC,EAA2B,EAAC,yBAC5BC,EAA2BzqE,EAAevJ,OAAM,YAChDi0E,GACEtmF,EACEoB,GAAQ27C,EAAAA,GAAAA,KACR12B,EAAkBtS,EAAgBT,EAAQuI,IAC1C2gE,EAAoBzoE,EAAgBT,EAAQ2I,IAC5CgkD,EAAYlsD,EAAgBT,EAAQ4R,IACpCg7C,EAAensD,EAAgBT,EAAQoS,IACvCuhC,EAAWlzC,EAAgBT,EAAQ0zC,IACnCu/B,EAAqBxyE,EAAgBT,EAAQmmB,IAC7CkhC,EAAclN,GAAmBn6C,EAAQzM,GACzC2/E,EAAgB1iF,EAAAA,OAAa,MAC7BoiB,EAAUpiB,EAAAA,OAAa,MACvB0c,GAAYC,EAAAA,EAAAA,GAAWzc,EAAKkiB,IAC3BugE,EAAeC,GAAyB5iF,EAAAA,SAAe,MACxD6iF,EAAoB7iF,EAAAA,OAAa2iF,GACjCrL,EAAiBt3E,EAAAA,OAAa,CAClCR,IAAK,EACLM,KAAM,KAEDgjF,EAAqBC,GAA0B/iF,EAAAA,SAAe,CACnEmI,MAAO,KACP3J,OAAQ,OAEJwkF,EAAiBhjF,EAAAA,OAAa04E,IAM7BuK,EAAcC,GAAmBljF,EAAAA,SAAe,MACjDmjF,EAAgBnjF,EAAAA,OAAagP,OAAOnQ,OAAO,OAC3CukF,EAAkBpjF,EAAAA,SAClBqjF,EAAmBrjF,EAAAA,SACnBsjF,EAAwBtjF,EAAAA,OAAa8Q,GAAe,CAACiG,EAASsnC,EAAqBklC,EAAoBC,EAAgBC,EAAeC,KAI1I,IAAIpL,EAYJ,OAVIoL,GAAgC,IAE9BrlC,EAAsBqlC,GAAgCA,GAAgCF,GAIjFD,EAAqBG,GAAgCA,EAA+BD,KAH3FnL,EAAmCoL,GAOhC,CACLpL,mCACAH,gBAbsBphE,EAAQ0gB,MAAM4mB,EAAqBklC,GAc1D,GACAtB,KACGyB,EAA+B1jF,EAAAA,SAAc,IAC/B,OAAdm8D,EACKrkD,EAAexF,WAAUsF,GAAUA,EAAOL,QAAU4kD,EAAU5kD,SAE/D,GACP,CAAC4kD,EAAWrkD,IACT6rE,EAA0B3jF,EAAAA,aAAkBmhF,IAChD,IAAIrG,EAAoB8I,EACxB,MAAMC,EAAqCr0E,EAAOzB,QAAQ+1E,0BAC1D,IAAIC,EAAkBF,IAAuCr/C,IACb,OAA3Cs2C,EAAqBjkB,EAAYjpB,QAAkBktC,EAAmB3jD,eAAiB4sD,IAE1FA,EAAkBF,GAAsChtB,EAAYjpB,MAAMzW,cAE5E,MAAM6sD,EAAyC/+D,GAAM4+D,IAAoF,OAA5CD,EAAsB/sB,EAAYjpB,YAAiB,EAASg2C,EAAoB1sD,gBAAkB,GAAI,EAAGisB,EAASnrC,UAAUzJ,QACzN,OAAIw1E,GAAmB5gC,EAASnrC,UAAUgsE,IAA2C7C,EAG5ED,GAAaC,EAAQh+B,EAASnrC,WAhH3C,SAA2BmpE,EAAQnpE,EAAWyG,GAC5C,IAAIwlE,EAAW,EACf,KAAOxlE,EAAQzG,EAAUzJ,QAAU4W,KAAK++D,IAAIlsE,EAAUyG,IAAU0iE,GAC9D1iE,GAASwlE,EACTA,GAAY,EAEd,OAAO/C,GAAaC,EAAQnpE,EAAWmN,KAAKkjB,MAAM5pB,EAAQ,GAAI0G,KAAKD,IAAIzG,EAAOzG,EAAUzJ,QAC1F,CAgHW41E,CAAkBhD,EAAQh+B,EAASnrC,UAAWgsE,EAAuC,GAC3F,CAACx0E,EAAqD,OAA5C2yE,EAAsBtrB,EAAYjpB,YAAiB,EAASu0C,EAAoBjrD,cAA4D,OAA5CkrD,EAAsBvrB,EAAYjpB,YAAiB,EAASw0C,EAAoBjrD,aAAcgsB,EAASnrC,YAC9MosE,EAAuBpkF,EAAAA,aAAkB,KAC7C,IAAKo0E,EACH,MAAO,CACLl9C,cAAe,EACfC,aAAc0/B,EAAYp9C,KAAKlL,OAC/BywC,iBAAkB,EAClBgjC,gBAAiBlqE,EAAevJ,QAGpC,MAAM,IACJ/O,EAAG,KACHM,GACEw3E,EAAevpE,QAIbmpB,EAAgB/R,KAAKD,IAAIy+D,EAAwBnkF,GAAM2jD,EAASnrC,UAAUzJ,OAAS,GACnF4oB,EAAep0B,EAAUyF,WAAa0uB,EAAgB2/B,EAAYp9C,KAAKlL,OAASo1E,EAAwBnkF,EAAMsjF,EAAoBtkF,QACxI,IAAIwgD,EAAmB,EACnBgjC,EAAkBz/D,EAAgBhU,OACtC,GAAI0yE,EAAmB,CACrB,IAAIoD,GAAuB,EAC3B,MAAO/lC,EAAkBC,GAAmBgjC,GAAqB,CAC/DC,WAAYtqD,EACZuqD,UAAWtqD,EACXwqD,cAAe,EACfC,aAAc/qB,EAAYp9C,KAAKlL,OAC/BmzE,OAAQ3+E,EAAUuhF,YAEpB,IAAK,IAAI5yE,EAAI4sC,EAAkB5sC,EAAI6sC,IAAoB8lC,EAAsB3yE,GAAK,EAAG,CACnF,MAAM9H,EAAMitD,EAAYp9C,KAAK/H,GAC7B2yE,EAAuB70E,EAAOzB,QAAQw2E,iBAAiB36E,EAAIqL,GAC7D,CACKovE,IACHrlC,EAAmBkiC,GAAa/7D,KAAK++D,IAAIpkF,GAAOyiB,GAChDy/D,EAAkBd,GAAa/7D,KAAK++D,IAAIpkF,GAAQgjF,EAAoB36E,MAAOoa,GAE/E,CACA,MAAO,CACL2U,gBACAC,eACA6nB,mBACAgjC,kBACD,GACA,CAAC5N,EAAS6M,EAAmB0C,EAAyBxgC,EAASnrC,UAAUzJ,OAAQxL,EAAUyF,WAAYzF,EAAUuhF,UAAWztB,EAAYp9C,KAAM8I,EAAiBzK,EAAevJ,OAAQiB,EAAQszE,KACjM5lE,EAAAA,EAAAA,IAAkB,KACZk3D,GAEFhyD,EAAQrU,QAAQqxE,WAAa,EAC7Bh9D,EAAQrU,QAAQ+vD,UAAY,GAE5B4kB,EAAc30E,QAAQy/B,MAAM9tC,UAAY,4BAC1C,GACC,CAAC00E,KACJl3D,EAAAA,EAAAA,IAAkB,KAChB6lE,EAAuB,CACrB56E,MAAOia,EAAQrU,QAAQ6vE,YACvBp/E,OAAQ4jB,EAAQrU,QAAQ8vD,cACxB,GACD,CAAC1a,EAASgD,yBACb,MAAMq+B,EAAexkF,EAAAA,aAAkB,KACjCoiB,EAAQrU,SACVg1E,EAAuB,CACrB56E,MAAOia,EAAQrU,QAAQ6vE,YACvBp/E,OAAQ4jB,EAAQrU,QAAQ8vD,cAE5B,GACC,IACH1zC,GAAuB3a,EAAQ,kBAAmBg1E,GAClD,MAAMC,EAA2BzkF,EAAAA,aAAkB0kF,IACjD,MAAOpmC,EAAkBC,GAAmBgjC,GAAqB,CAC/DC,WAAYkD,EAAkBxtD,cAC9BuqD,UAAWiD,EAAkBvtD,aAC7BwqD,cAAe,EACfC,aAAc/qB,EAAYp9C,KAAKlL,OAC/BmzE,OAAQ3+E,EAAUuhF,aAEbK,GAA8BpD,GAAqB,CACxDC,WAAYkD,EAAkB1lC,iBAC9ByiC,UAAWiD,EAAkB1C,gBAC7BL,cAAeW,EACfV,aAAcW,EACdb,OAAQ3+E,EAAUm8C,eAEdb,EAAsBF,GAAiC,CAC3DE,oBAAqBsmC,EACrBn1E,SACA8uC,mBACAC,kBACAC,YAAaqY,EAAYp9C,OAErBygC,EAAgC,QAApB58C,EAAM48C,UAAsB,GAAK,EAC7C16C,EAAM0jD,GAAqB1zC,EAAOzB,QAAQ6B,OAAOoI,UAAUsmC,GAC3Dx+C,EAAOo6C,EAAYniC,GAA4BvI,GAAQ6uC,GAC7DqkC,EAAc30E,QAAQy/B,MAAM9tC,UAAY,eAAH7C,OAAkBiD,EAAI,QAAAjD,OAAO2C,EAAG,YAC9B,oBAA5B6iF,GACTA,EAAwB,CACtB7iF,MACAM,QAEJ,GACC,CAAC0P,EAAQqnD,EAAYp9C,KAAM4oE,EAAyBC,EAA0BC,EAA0Bx/E,EAAUm8C,aAAcn8C,EAAUuhF,UAAWhnF,EAAM48C,YACxJ0qC,EAAmB5kF,EAAAA,aAAkB,IAAM6iF,EAAkB90E,SAAS,IACtE82E,EAAmB7kF,EAAAA,aAAkB0kF,IACzC,GAAI7B,EAAkB90E,SAAW8zE,GAAuB6C,EAAmB7B,EAAkB90E,SAE3F,YADA02E,EAAyBC,GAG3B9B,EAAsB8B,GACtBD,EAAyBC,GACzB,MAAOpmC,EAAkBC,GAAmBgjC,GAAqB,CAC/DC,WAAYkD,EAAkBxtD,cAC9BuqD,UAAWiD,EAAkBvtD,aAC7BwqD,cAAe,EACfC,aAAc/qB,EAAYp9C,KAAKlL,OAC/BmzE,OAAQ3+E,EAAUuhF,YAEpB90E,EAAOzB,QAAQ+f,aAAa,6BAA8B,CACxDwwB,mBACAC,oBAEFskC,EAAkB90E,QAAU22E,CAAiB,GAC5C,CAACl1E,EAAQozE,EAAuBC,EAAmBhsB,EAAYp9C,KAAKlL,OAAQxL,EAAUuhF,UAAWG,KACpGvnE,EAAAA,EAAAA,IAAkB,KAChB,GAAiC,MAA7B4lE,EAAoB36E,MACtB,OAEF,MAAM28E,EAAuBV,IAC7BS,EAAiBC,GACjB,MAAM,IACJtlF,EAAG,KACHM,GACEw3E,EAAevpE,QACbuG,EAAS,CACb9U,MACAM,OACA6iF,cAAemC,GAEjBt1E,EAAOzB,QAAQ+f,aAAa,uBAAwBxZ,EAAO,GAC1D,CAAC9E,EAAQ40E,EAAsBtB,EAAoB36E,MAAO08E,IAC7D,MAAME,GAAe5zB,EAAAA,GAAAA,IAAiBtmC,IACpC,MAAM,UACJizC,EAAS,WACTshB,GACEv0D,EAAMuhC,cAKV,GAJAkrB,EAAevpE,QAAQvO,IAAMs+D,EAC7BwZ,EAAevpE,QAAQjO,KAAOs/E,GAGzByD,EAAkB90E,SAAW+vD,EAAY,EAC5C,OAEF,GAAwB,QAApBxgE,EAAM48C,WACJklC,EAAa,EACf,OAGJ,GAAwB,QAApB9hF,EAAM48C,WACJklC,EAAa,EACf,OAKJ,MAAMsF,EAAoBtQ,EAAUgQ,IAAyBvB,EAAkB90E,QACzEi3E,EAAqC7/D,KAAK++D,IAAIQ,EAAkBxtD,cAAgB2rD,EAAkB90E,QAAQmpB,eAC1G+tD,EAAwC9/D,KAAK++D,IAAIQ,EAAkBvtD,aAAe0rD,EAAkB90E,QAAQopB,cAC5G+tD,EAAwC//D,KAAK++D,IAAIQ,EAAkB1lC,iBAAmB6jC,EAAkB90E,QAAQixC,kBAChHmmC,EAA2ChgE,KAAK++D,IAAIQ,EAAkB1C,gBAAkBa,EAAkB90E,QAAQi0E,iBAClHoD,EAAiBJ,GAAsCjiF,EAAUsiF,cAAgBJ,GAAyCliF,EAAUsiF,cAAgBH,GAAyCniF,EAAUuiF,iBAAmBH,GAA4CpiF,EAAUuiF,iBAAmBtC,EAAej1E,UAAY2qE,EACpUlpE,EAAOzB,QAAQ+f,aAAa,uBAAwB,CAClDtuB,IAAKs+D,EACLh+D,KAAMs/E,EACNuD,cAAeyC,EAAiBV,EAAoB7B,EAAkB90E,SACrE8c,GACCu6D,IAEFG,GAAAA,WAAmB,KACjBV,EAAiBH,EAAkB,IAErC1B,EAAej1E,QAAU2qE,EAC3B,IAEI8M,IAAcr0B,EAAAA,GAAAA,IAAiBtmC,IACnCrb,EAAOzB,QAAQ+f,aAAa,uBAAwB,CAAC,EAAGjD,EAAM,IAE1D46D,IAAkBt0B,EAAAA,GAAAA,IAAiBtmC,IACvCrb,EAAOzB,QAAQ+f,aAAa,2BAA4B,CAAC,EAAGjD,EAAM,IAE9D66D,GAA4B1lF,EAAAA,SAAc,IAC5B,OAAdm8D,EACKtF,EAAYp9C,KAAKnH,WAAU1I,GAAOA,EAAIqL,KAAOknD,EAAUlnD,MAExD,GACP,CAACknD,EAAWtF,EAAYp9C,OAC3B0Q,GAAuB3a,EAAQ,gBAAgB,CAAC8E,EAAQuW,KACtD,IAAI86D,EACA96D,EAAMuhC,cAAcpU,SAASntB,EAAM+6D,gBAGvC1C,EAA4C,OAA3ByC,EAAarxE,EAAOW,IAAc0wE,EAAa,KAAK,IAEvEx7D,GAAuB3a,EAAQ,eAAe,CAAC8E,EAAQuW,KACjDA,EAAMuhC,cAAcpU,SAASntB,EAAM+6D,gBAGvC1C,EAAgB,KAAK,IAEvB,MA8KM2C,GAA2B/C,EAAoB36E,OAASuwE,GAAqBoK,EAAoB36E,MACjG29E,GAAc9lF,EAAAA,SAAc,KAIhC,MAAMxB,EAAS2mB,KAAKhkB,IAAIgiD,EAASgD,uBAAwB,GACzD,IAAI4/B,GAAsB,EACX,MAAX3jE,GAAmBA,EAAQrU,SAAWvP,IAAsB,MAAX4jB,OAAkB,EAASA,EAAQrU,QAAQ8vD,gBAC9FkoB,GAAsB,GAExB,MAAM5hF,EAAO,CACXgE,MAAO09E,GAA2BnN,EAAoB,OACtDl6E,SACAgN,UAAWu6E,EAAsB,OAAS,QAM5C,OAJIhjF,EAAUyF,YAA0C,IAA5BquD,EAAYp9C,KAAKlL,SAC3CpK,EAAK3F,OAAS2pC,GAAwB34B,EAAQzM,EAAUqlC,YAGnDjkC,CAAI,GACV,CAACqL,EAAQ4S,EAASs2D,EAAmBv1B,EAASgD,uBAAwB0/B,GAA0B9iF,EAAUyF,WAAYzF,EAAUqlC,UAAWyuB,EAAYp9C,KAAKlL,SAC/JvO,EAAAA,WAAgB,KACdwP,EAAOzB,QAAQ+f,aAAa,mCAAmC,GAC9D,CAACte,EAAQs2E,KACZ,MAAME,GAAYhmF,EAAAA,SAAc,KAC9B,MAAMwtC,EAAQ,CAAC,EAOf,OANKq4C,KACHr4C,EAAMy4C,UAAY,UAEhBljF,EAAUyF,aACZglC,EAAM04C,UAAY,UAEb14C,CAAK,GACX,CAACq4C,GAA0B9iF,EAAUyF,aAIxC,OAHAgH,EAAOzB,QAAQ+O,SAAS,UAAW,CACjC8nE,qBAEK,CACLjC,gBACA8B,2BACA0B,QAtNc,WAEV,IAFW7xE,EAAMhG,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CACxBq0E,iBAEA,IAAIvlE,EACJ,MAAM,YACJgpE,EACAzD,cAAe+B,EAAiB,eAChClB,EAAiBlB,EAAwB,cACzCmB,EAAgBlB,EAAwB,eACxC8D,EAAiBvD,EAAoB36E,MAAK,eAC1Cm+E,EAAiB,EAAC,SAClBjqF,EAAW,UACTiY,EACJ,IAAKowE,GAAuC,MAAlB2B,EACxB,OAAO,KAET,MAAM/B,EAAYlQ,EAAUrxE,EAAUuhF,UAAY,EAC5CplC,EAAek1B,EAAUrxE,EAAUm8C,aAAe,GACjDZ,EAAkBC,GAAmBgjC,GAAqB,CAC/DC,WAAYkD,EAAkBxtD,cAC9BuqD,UAAWiD,EAAkBvtD,aAC7BwqD,cAAe,EACfC,aAAc/qB,EAAYp9C,KAAKlL,OAC/BmzE,OAAQ4C,IAEJiC,EAAe,GACrB,GAAIjyE,EAAOmF,KACTnF,EAAOmF,KAAKnS,SAAQsC,IAClB28E,EAAahyE,KAAK3K,GAClB4F,EAAOzB,QAAQy4E,iBAAiB,CAC9B5wD,MAAOhsB,EAAIqL,GACXuuE,iBACAC,gBACA1sE,QAASe,GACT,QAEC,CACL,IAAK++C,EAAYjpB,MACf,OAAO,KAET,IAAK,IAAIl8B,EAAI4sC,EAAkB5sC,EAAI6sC,EAAiB7sC,GAAK,EAAG,CAC1D,MAAM9H,EAAMitD,EAAYp9C,KAAK/H,GAC7B60E,EAAahyE,KAAK3K,GAClB4F,EAAOzB,QAAQy4E,iBAAiB,CAC9B5wD,MAAOhsB,EAAIqL,GACXuuE,iBACAC,gBACA1sE,QAASe,GAEb,CACF,CAKA,IAAI2uE,GAAiC,EACrC,GAAIf,IAA6B,EAAG,CAClC,MAAMgB,EAAqB7vB,EAAYp9C,KAAKisE,KACxCpnC,EAAmBonC,IAA6BnnC,EAAkBmnC,MACpEe,GAAiC,EAC7Bf,GAA4BpnC,EAC9BioC,EAAahyE,KAAKmyE,GAElBH,EAAa/zE,QAAQk0E,GAEvBl3E,EAAOzB,QAAQy4E,iBAAiB,CAC9B5wD,MAAO8wD,EAAmBzxE,GAC1BuuE,iBACAC,gBACA1sE,QAASe,IAGf,CACA,MAAO6sE,EAA4BpB,GAAsBhC,GAAqB,CAC5EC,WAAYkD,EAAkB1lC,iBAC9ByiC,UAAWiD,EAAkB1C,gBAC7BL,cAAe6B,EACf5B,aAAc6B,EACd/B,OAAQxiC,IAEJb,EAAsBF,GAAiC,CAC3DE,oBAAqBsmC,EACrBn1E,SACA8uC,mBACAC,kBACAC,YAAaqY,EAAYp9C,OAE3B,IAAIktE,GAAmC,GACnCtoC,EAAsBqlC,GAAgCH,EAAqBG,KAC7EiD,GAAmC,GAErC,MAAM,iCACJrO,EAAgC,gBAChCH,GACEmL,EAAsBv1E,QAAQ+J,EAAgBumC,EAAqBklC,EAAoBC,EAAgBC,EAAekD,EAAmCjD,GAAgC,GACvLvjF,GAAwD,OAA/Cid,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBxT,MAAQ,CAAC,GAExG4jC,MAAOo5C,GACLzmF,EACJ0mF,GAAejlF,EAAAA,EAAAA,GAA8BzB,EAAMtE,KACnBunF,EAAgBr1E,UAAYy0E,GAAea,EAAiBt1E,UAAY64E,KAExGzD,EAAcp1E,QAAUiB,OAAOnQ,OAAO,OAExC,MAAM4a,EAAO,GACb,IAAIqtE,GAA+B,EACnC,IAAK,IAAIp1E,EAAI,EAAGA,EAAI60E,EAAah4E,OAAQmD,GAAK,EAAG,CAC/C,IAAIq1E,EACJ,MAAM,GACJ9xE,EAAE,MACFuG,GACE+qE,EAAa70E,GACXs1E,EAAkBP,GAAkCtqB,EAAUlnD,KAAOA,EACrEgyE,EAAsBR,EAAiCnoC,EAAmB5sC,IAAMmlD,EAAYp9C,KAAKlL,OAAS+vC,EAAmB5sC,IAAMmlD,EAAYp9C,KAAKlL,OAAS,EAC7J24E,EAAiB13E,EAAOzB,QAAQw2E,iBAAiBtvE,GAAiD,OAA3CzF,EAAOzB,QAAQm6B,sBAAsBjzB,GAClG,IAAIggE,EAEFA,EAD4B,MAA1BwN,EAAmBxtE,IAGRzF,EAAOzB,QAAQgnB,gBAAgB9f,GAE1CmxE,GACFA,EAAYnxE,GAEd,MAAMg6B,EAA4B,OAAdktB,GAAsBA,EAAUlnD,KAAOA,EAAKknD,EAAU5kD,MAAQ,KAC5E4vE,OAAuE9kF,IAArCi2E,GAAkDxgE,EAAewgE,GACnG8O,EAAiCD,GAAmCl4C,EAAc,CAACk4C,KAAoChP,GAAmBA,EAChJ,IAAIkP,EAAe,KACnB,GAAqB,OAAjBjrB,GAAyBA,EAAannD,KAAOA,EAAI,CAEnDoyE,EAAuC,SADpB73E,EAAOzB,QAAQ4rB,cAAc1kB,EAAImnD,EAAa7kD,OACvCm2C,SAAsB0O,EAAa7kD,MAAQ,IACvE,CACA,MAAMlX,EAA+B,oBAAhBmiF,GAA8BA,EAAYvtE,EAAIuG,IAAU,CAAC,GAE1EgyB,MAAO6sC,GACLh6E,EACJinF,GAAW1lF,EAAAA,EAAAA,GAA8BvB,EAAOk0C,IAClD,IAAK4uC,EAAcp1E,QAAQkH,GAAK,CAC9B,MAAMu4B,GAAQjwC,EAAAA,EAAAA,GAAS,CAAC,EAAG88E,EAAUuM,GACrCzD,EAAcp1E,QAAQkH,GAAMu4B,CAC9B,CACA,IAAI/uB,EAAQ6nE,IAAkC,MAAfzvB,GAAoE,OAA5CkwB,EAAsBlwB,EAAYjpB,YAAiB,EAASm5C,EAAoB7vD,gBAAkB,GAAKonB,EAAmB5sC,EAC7K+0E,IAAgD,MAAbtqB,OAAoB,EAASA,EAAUlnD,MAAQA,GACpFwJ,EAAQinE,GACRoB,GAA+B,GACtBA,IACTroE,GAAS,GAEXhF,EAAKlF,MAAmB9Q,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMqI,KAAKrM,EAAAA,EAAAA,GAAS,CACzDqM,IAAK4R,EACLoa,MAAO3gB,EACPqjE,iCAAkCA,EAClClC,aAAc4Q,EACd5+C,UAAW8+C,EACXj4C,YAAaA,EACbo4C,aAAcA,EACdlP,gBAAiBiP,EACjBtvE,eAAgBA,EAChBumC,oBAAqBA,EACrBklC,mBAAoBA,EACpBvL,SAAU/C,EACVx2D,MAAOA,EACP25D,eAAgBiO,EAChBhO,cAAe4O,EACf5qF,SAAUA,GACTirF,EAAUT,EAAc,CACzB5O,QAASgL,IAAiBhuE,EAC1Bu4B,MAAO21C,EAAcp1E,QAAQkH,KAC3BA,GACN,CAGA,OAFAmuE,EAAgBr1E,QAAUy0E,EAC1Ba,EAAiBt1E,QAAU64E,EACpBntE,CACT,EA0CE8tE,aAAc,eAAC1hF,EAAUyI,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK/Q,EAAAA,EAAAA,GAAS,CAC1C2C,IAAKwc,EACL8qE,SAAUzC,EACV0C,QAASjC,GACTkC,YAAajC,IACZ5/E,EAAY,CACb2nC,MAAO3nC,EAAW2nC,OAAQjwC,EAAAA,EAAAA,GAAS,CAAC,EAAGsI,EAAW2nC,MAAOw4C,IAAaA,GACtE9pE,KAAM,gBACN,EACFyrE,gBAAiB,eAAC,MAChBn6C,GACDl/B,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAAM,CACVk/B,MAAOA,GAAQjwC,EAAAA,EAAAA,GAAS,CAAC,EAAGiwC,EAAOs4C,IAAeA,GAClD5pE,KAAM,eACP,EACD0rE,mBAAoBA,KAAA,CAClB1nF,IAAKwiF,EACLxmE,KAAM,aAET,EC7jBH,SAAS2rE,GAAsB3rF,GAC7B,IAAI4rF,EACJ,MAAM,QACJ96C,EAAO,MACP7kC,EAAK,MACLyS,EAAK,SACLrB,EAAQ,OACR+mC,EAAM,OACN9hD,EAAM,SACNysD,EAAQ,SACR/2B,EAAQ,SACRvS,EAAQ,aACRomE,GACE7rF,EACE6G,GAAYgZ,EAAAA,EAAAA,KACZijE,EAAgBh/E,EAAAA,OAAa,MAC7BwP,EAASskB,KACTk0D,EAAqB/3E,EAAgBT,EAAQwJ,IAC7C0X,EAAQsc,EAAUg7C,EAAmBh7C,GAAW,CAAC,GACjD,WACJD,GAAwB,MAAXC,EAAkBA,EAAU,IAAE,YAC3CowC,EAAc,GAAE,YAChBpzC,GACEtZ,EACJ,IAAIiuD,EACJ,MAAMsJ,EAASj7C,IAAqE,OAAxD86C,EAAwBE,EAAmBh7C,SAAoB,EAAS86C,EAAsBI,mBACpHC,EAAenoF,EAAAA,SAAc,KAAM,CACvCgtC,UACAD,aACAqwC,cACAxiE,QACArB,WACA+mC,SACA2K,WACA88B,kBACE,CAAC/6C,EAASD,EAAYqwC,EAAaxiE,EAAOrB,EAAU+mC,EAAQ2K,EAAU88B,IACtE/6C,GAAWi7C,IACbtJ,EAAkBsJ,EAAOE,IAE3B,MAAMC,EAAmBrlF,EAAUo7E,yBAC7BzhF,GAAaa,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCoG,QAASS,EAAUT,QACnB8lF,mBACAp+C,cACApvB,QACAmlE,YAAY,IAER55E,EAAsB,MAAd4mC,EAAqBA,EAAaC,EAC1C/3B,GAAKsnB,EAAAA,GAAAA,KACLqkD,EAAwB,OAAZ5zC,EAAmB,oBAAHnwC,OAAuBoY,GAAO+3B,EAC1D1qC,EAlEkB5F,KACxB,MAAM,QACJ4F,EAAO,YACP0nC,EAAW,WACX+1C,EAAU,iBACVqI,EAAgB,QAChBp7C,GACEtwC,EACE6E,EAAQ,CACZnF,KAAM,CAAC,eAAgC,SAAhB4tC,GAA0B,0BAA2C,WAAhBA,GAA4B,4BAA6C,UAAhBA,GAA2B,2BAA4B+1C,GAAc,uBAAwBqI,GAAoB,iCAAkCA,GAAoB,gCAAiC,kBAA+B,OAAZp7C,EAAmB,2BAA6B,6BAChZqyC,mBAAoB,CAAC,kCACrBE,eAAgB,CAAC,6BAA8B,mBAC/CC,sBAAuB,CAAC,sCAE1B,OAAOj9E,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAoD9CE,CAAkB9F,GAClCsD,EAAAA,iBAAsB,KACpB,GAAIk0B,EAAU,CACZ,MACMmjD,EADmB2H,EAAcjxE,QAAQ0mB,cAAc,mBAClBuqD,EAAcjxE,QACvC,MAAlBspE,GAA0BA,EAAel2D,OAC3C,IACC,CAAC3R,EAAQ0kB,IACZ,MAAMgjD,EAAUl3E,EAAAA,aAAkBqqB,GAAaQ,IAGxCA,EAAMuhC,cAAcpU,SAASntB,EAAM0C,SAGxC/d,EAAOzB,QAAQ+f,aAAazD,EAAW89D,EAAct9D,EAAM,GAI7D,CAACrb,EAAQ24E,IACHhI,EAAsBngF,EAAAA,SAAc,KAAM,CAC9Ck1B,UAAWgiD,EAAQ,4BACnBQ,QAASR,EAAQ,0BACjBkJ,OAAQlJ,EAAQ,4BACd,CAACA,IACC5Z,EAAmD,oBAA1B5sC,EAAM4sC,gBAAiC5sC,EAAM4sC,gBAAgB6qB,GAAgBz3D,EAAM4sC,gBAClH,OAAoB75D,EAAAA,GAAAA,KAAK66E,IAA6B/gF,EAAAA,EAAAA,GAAS,CAC7D2C,IAAK8+E,EACL18E,QAASA,EACTi8E,gBAAgB,EAChBtzB,SAAUA,EACVzsD,OAAQA,EACRggF,YAAY,EACZ9/D,cAAe,KACfwV,UAAU,EACVvS,SAAUA,EACV+8D,aAAa,EACbC,gBAAiBA,EACjBrhB,gBAAiBA,EACjB8f,YAAaA,EACbwD,UAAWA,EACXz4E,MAAOA,EACPy2E,qBAAsB,KACtBC,uBAAwB,KACxBl6C,WAAW,EACXx+B,MAAOA,EACP,eAAgBm6C,EAAO/xC,OAGvB,cAAe,KAAF1R,OAAOyjD,EAAO1xC,KAAK,OAAM,OACrCuxE,GACL,CC7GA,MAAMkI,IAAsBtsF,EAAAA,EAAAA,IAAO,MAAO,CACxCC,KAAM,cACNN,KAAM,kBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOmsF,iBAHnBvsF,EAIzB,KAAM,CACPO,QAAS,WAKJ,MCzBDT,GAAY,CAAC,aAiBb0sF,IAAwBxsF,EAAAA,GAAAA,GAAO,MAAO,CAC1CC,KAAM,cACNN,KAAM,gBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOoQ,eAHjBxQ,CAI3B,CACDM,SAAU,WACVuP,SAAU,SACVtP,QAAS,OACTsB,WAAY,SACZC,UAAW,aACXuO,aAAc,YACdo8E,oBAAqB,kCACrBC,qBAAsB,oCAEXC,GAAqC1oF,EAAAA,YAAiB,SAA2B9D,EAAOgE,GACnG,MAAM,UACFS,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EA7BkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,gBAAiB,oBAEG0L,EAAyBxF,EAAQ,EAsB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAK8kF,IAAuBhrF,EAAAA,EAAAA,GAAS,CACvD2C,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW2B,EAAQlG,MACnCM,WAAYqG,GACXpB,EAAO,CACRua,KAAM,iBAEV,IC7CMrgB,GAAY,CAAC,aAAc,aAoB3B8sF,IAA6B5sF,EAAAA,GAAAA,GAAO,MAAO,CAC/CC,KAAM,cACNN,KAAM,qBACNO,kBAAmBA,CAACC,EAAOC,IAAW,CAAC,CACrC,CAAC,KAADU,OAAMkL,EAAY6gF,uBAAyBzsF,EAAOysF,sBACjDzsF,EAAOupD,qBALuB3pD,EAMhC,KAAM,CACPO,QAAS,OACTsB,WAAY,aACZJ,cAAe,SACf,CAAC,KAADX,OAAMkL,EAAY6gF,qBAAoB,MAAA/rF,OAAKkL,EAAYsB,iCAAmC,CACxFhD,OAAQ,QAEV,CAAC,KAADxJ,OAAMkL,EAAY,kCAAiC,MAAAlL,OAAKkL,EAAYmB,aAAY,gBAAgB,CAC9F2/E,YAAa,YAGJC,GAAsC9oF,EAAAA,YAAiB,SAAgC9D,EAAOgE,GACzG,IAAI68C,EAAuBC,EAC3B,MAAM,WACF+iC,EAAU,UACVp/E,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC2T,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZrf,GAAaa,EAAAA,EAAAA,GAAS,CAAC,EAAGwF,EAAW,CACzCg9E,aACAgJ,WAA4J,OAA/IhsC,EAAyF,OAAhEC,EAAyBxtC,EAAOzB,QAAQoW,0BAA+B,EAAS64B,EAAuB+rC,aAAsBhsC,IAE/Jz6C,EAzCkB5F,KACxB,MAAM,WACJqjF,EAAU,WACVgJ,EAAU,QACVzmF,GACE5F,EACE6E,EAAQ,CACZnF,KAAM,CAAC,qBAAsB2jF,GAAc,uBAAwBgJ,GAAc,mCAEnF,OAAOxmF,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAgC9CE,CAAkB9F,GAClC,OAAoB+G,EAAAA,GAAAA,KAAKklF,IAA4BprF,EAAAA,EAAAA,GAAS,CAC5D2C,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAK3C,EAAW2B,EAAQlG,MACnCM,WAAYA,GACXiF,GACL,ICxDM9F,GAAY,CAAC,WAAY,YAAa,iBAAkB,mBAAoB,qBAAsB,kBAAmB,4BAA6B,iCAAkC,oBAAqB,yBAA0B,gBAAiB,yBAA0B,kBAAmB,mBAAoB,8BAA+B,gCAoGpVmtF,GAA4BrU,GA1FK30E,EAAAA,YAAiB,SAA4B9D,EAAOgE,GACzF,MAAM,SACFkkB,EAAQ,eACRtM,EAAc,iBACdwK,EAAgB,mBAChBD,EAAkB,gBAClBE,EAAe,0BACfC,EAAyB,+BACzBE,EAA8B,kBAC9BC,EAAiB,uBACjBC,EAAsB,cACtBC,EAAa,uBACb7G,EAAsB,gBACtB8G,EAAe,iBACfC,EAAgB,4BAChBC,EAA2B,6BAC3BC,GACE/mB,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,KACzC,WACJkkF,EAAU,aACVwH,EAAY,cACZ0B,EAAa,iBACbC,EAAgB,sBAChBC,GHTgCjtF,KAClC,MACEkoB,SAAUglE,EAAY,eACtBnqC,EAAiB,EAAC,eAClBnnC,EAAc,iBACdwK,EAAgB,mBAChBD,EAAkB,gBAClBE,EAAe,0BACfC,EAAyB,+BACzBE,EAA8B,kBAC9BC,EAAiB,uBACjBC,EAAsB,cACtBC,EAAa,uBACb7G,EAAsB,gBACtB8G,EAAe,iBACfC,EAAgB,4BAChBC,EAA2B,6BAC3BC,GACE/mB,EACEoB,GAAQ27C,EAAAA,GAAAA,MACPowC,EAASC,GAActpF,EAAAA,SAAe,KACtCupF,EAAWC,GAAgBxpF,EAAAA,SAAe,IAC3CwP,EAASiB,IACTg5E,EAAoBx5E,EAAgBT,EAAQwxE,IAC5Cj+E,GAAYgZ,EAAAA,EAAAA,KACZqI,EAAWpkB,EAAAA,OAAa,MACxB0pF,GAAiB/sE,EAAAA,EAAAA,GAAWysE,EAAchlE,IACzCu+D,EAAegH,GAAuB3pF,EAAAA,SAAe,MACtD6iF,EAAoB7iF,EAAAA,OAAa2iF,GACjCiH,EAAiB5pF,EAAAA,OAAa,GAC9B62D,EAAclN,GAAmBn6C,EAAQzM,GACzC8mF,EAAoB1qC,GAAqB3vC,EAAQzM,EAAUqjD,oBAC3DhH,EAAej6B,KAAKkjB,MAAMtlC,EAAUqjD,mBAAqBvjC,GACzDgiE,EAAmB7kF,EAAAA,aAAkB0kF,IACrC/B,GAAiB+B,GAAqB7C,GAAuBc,EAAe+B,IAGhFiF,EAAoBjF,EAAkB,GACrC,CAAC/B,IACJ3iF,EAAAA,WAAgB,KACdwP,EAAOzB,QAAQgW,iCAAiChW,QAAQqxE,WAAa,CAAC,GACrE,CAAC5vE,IAGJ,MAAMs6E,EAAiC9pF,EAAAA,OAAa8Q,EAAeguC,GAA6B,CAC9F5tC,cAAeA,CAAChC,EAAGC,IAAM,CAAC,mBAAoB,iBAAkB,gBAAgB6E,OAAMzM,GAAO2H,EAAE3H,KAAS4H,EAAE5H,QAEtGwiF,EAAsB/pF,EAAAA,aAAkB0kF,IAC5C,MAAOpmC,EAAkBC,GAAmBgjC,GAAqB,CAC/DC,WAAYkD,EAAkBxtD,cAC9BuqD,UAAWiD,EAAkBvtD,aAC7BwqD,cAAe,EACfC,aAAc/qB,EAAYp9C,KAAKlL,OAC/BmzE,OAAQ3+E,EAAUuhF,YAEdjmC,EAAsByrC,EAA+B/7E,QAAQ,CACjEixC,iBAAkB0lC,EAAkB1lC,iBACpCC,iBACAC,aAAcn8C,EAAUm8C,aACxBZ,mBACAC,kBACA/uC,SACAgvC,YAAaqY,EAAYp9C,OAErBygC,EAAgC,QAApB58C,EAAM48C,UAAsB,GAAK,EAC7CinC,EAAS9iC,EAAsB,EAAIurC,EAAe77E,QAAUmsC,EAAY33B,EAAgB87B,GAAuBurC,EAAe77E,QACpIqW,EAASrW,QAAQy/B,MAAM9tC,UAAY,eAAH7C,QAAmBskF,EAAM,gBAAe,GACvE,CAAC5+D,EAAiB08B,EAAgBl8C,EAAUm8C,aAAc1vC,EAAQqnD,EAAYp9C,KAAM1W,EAAUuhF,UAAWhnF,EAAM48C,YAClHl6C,EAAAA,iBAAsB,KAChB2iF,GACFoH,EAAoBpH,EACtB,GACC,CAACA,EAAeoH,IACnB,MAAMhF,EAAe/kF,EAAAA,aAAkB,CAAAG,EAGpC0qB,KAAU,IAH2B,KACtC/qB,EACA6iF,cAAe+B,EAAoB,MACpCvkF,EACC,IAAI6pF,EAAuBC,EAC3B,IAAK7lE,EAASrW,QACZ,OAKF,GAAI67E,EAAe77E,UAAYjO,IAAgE,OAAtDkqF,EAAwBnH,EAAkB90E,cAAmB,EAASi8E,EAAsBhrC,qBAA4C,MAArB0lC,OAA4B,EAASA,EAAkB1lC,oBAA8E,OAAvDirC,EAAyBpH,EAAkB90E,cAAmB,EAASk8E,EAAuBjI,oBAA2C,MAArB0C,OAA4B,EAASA,EAAkB1C,iBACnZ,OAEF4H,EAAe77E,QAAUjO,EAIzB,IAAIoqF,GAAyB,EACzBxF,IAAsB7B,EAAkB90E,SAAY80E,EAAkB90E,QAexEm8E,GAAyB,GA9G/B,SAAmBr/D,GACjB,QAASA,EAAM0C,MACjB,CA+FU48D,CAAUt/D,IAIZ06D,GAAAA,WAAmB,KACjBV,EAAiBH,EAAkB,IAErCwF,GAAyB,GAEzBrF,EAAiBH,GAEnB7B,EAAkB90E,QAAU22E,GAM1BA,GAAqBwF,GACvBH,EAAoBrF,EACtB,GACC,CAACqF,EAAqBlF,IACnBuF,EAA0BpqF,EAAAA,aAAkBsU,GAAUk1E,EAAal1E,EAAOiD,QAAQ,IAClF8yE,EAAyBrqF,EAAAA,aAAkB,IAAMwpF,EAAa,KAAK,IACnEc,EAA2BtqF,EAAAA,aAAkBsU,GAAUg1E,EAAWh1E,EAAOiD,QAAQ,IACjFgzE,EAA0BvqF,EAAAA,aAAkB,IAAMspF,EAAW,KAAK,IACxEn/D,GAAuB3a,EAAQ,oBAAqB46E,GACpDjgE,GAAuB3a,EAAQ,mBAAoB66E,GACnDlgE,GAAuB3a,EAAQ,wBAAyB86E,GACxDngE,GAAuB3a,EAAQ,sBAAuB+6E,GACtDpgE,GAAuB3a,EAAQ,uBAAwBu1E,GAGvD,MAAMyF,EAAqBl2E,IACzB,MACEquE,cAAe+B,EAAoB/B,EAAa,eAChDa,EAAiBvkC,EAAc,cAC/BwkC,EAAgB3rE,EAAevJ,QAC7B+F,GAAU,CAAC,EACf,IAAKowE,EACH,OAAO,KAET,MAAOpmC,EAAkBC,GAAmBgjC,GAAqB,CAC/DC,WAAYkD,EAAkBxtD,cAC9BuqD,UAAWiD,EAAkBvtD,aAC7BwqD,cAAe,EACfC,aAAc/qB,EAAYp9C,KAAKlL,OAC/BmzE,OAAQ3+E,EAAUuhF,YAEdjmC,EAAuBorC,EAAwBK,EAA+B/7E,QAAQ,CAC1FixC,iBAAkB0lC,EAAkB1lC,iBACpCC,eAAgBukC,EAChBtkC,aAAcn8C,EAAUm8C,aACxB1vC,SACA8uC,mBACAC,kBACAC,YAAaqY,EAAYp9C,OAPsB,EAS3C8pE,EAAsBkG,EAAoCtkE,KAAKD,IAAIw/D,EAAkB1C,gBAAkBj/E,EAAUm8C,aAAcukC,GAArFA,EAEhD,MAAO,CACLtL,gBAFsBrgE,EAAe2f,MAAM4mB,EAAqBklC,GAGhEllC,sBACAklC,qBACAC,iBACAC,gBACD,EAwIGuC,EAAY,CAChBx6E,UAAWq+E,EACX1d,UAAW0d,EACXvrF,WAAY,GAAFzB,OAAKuiD,EAAY,OAE7B,MAAO,CACLujC,gBACAuG,iBA7IuB,SAAC50E,GAAuB,IAAf3S,EAAK2M,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzC,MAAMm8E,EAAkBD,EAAmBl2E,GAC3C,GAAuB,MAAnBm2E,EACF,OAAO,KAET,MAAM,gBACJtS,EAAe,oBACf95B,GACEosC,EACE1zE,EAAU,GAChB,IAAK,IAAIrF,EAAI,EAAGA,EAAIymE,EAAgB5pE,OAAQmD,GAAK,EAAG,CAClD,MAAMonB,EAASq/C,EAAgBzmE,GACzBg5E,EAAcrsC,EAAsB3sC,EACpCi5E,EAAgC,IAAhBD,EAChB/oE,EAAyC,OAA9Ba,GAAsCA,EAA0BjL,QAAUuhB,EAAOvhB,OAASozE,IAAkB1nE,EAA+B,GAAK,EAC3JiR,EAAiC,OAAtBvR,GAA8BA,EAAkBpL,QAAUuhB,EAAOvhB,MAC5Ey4B,EAAOltB,EAAgBktB,MAAQltB,EAAgBvL,QAAUuhB,EAAOvhB,MACtER,EAAQxC,MAAmB9Q,EAAAA,GAAAA,KAAKk8E,IAAsBpiF,EAAAA,EAAAA,GAAS,CAAC,EAAG+kB,EAAiBwW,EAAOvhB,OAAQ,CACjGgnE,eAAgBvuC,EAChB8vC,mBAAoBz9D,EAAmByW,EAAOvhB,QAAU8K,EAAmByW,EAAOvhB,OAAOhJ,OACzF6wC,aAAcA,EACd2gC,WAAYjnD,EAAOvhB,QAAU8xE,EAC7BvwD,OAAQA,EACRmyB,SAAUy/B,EACVlM,WAAY+K,IAAczwD,EAAOvhB,MACjC2c,SAAUA,EACVvS,SAAUA,GACThgB,GAAQm3B,EAAOvhB,OACpB,CACA,OAAoB9T,EAAAA,GAAAA,KAAK4kF,GAAqB,CAC5CnsE,KAAM,MACN,gBAAiBF,EAAyB,EAC1Ctf,WAAYqG,EACZhC,SAAUgW,GAEd,EA2GEyzE,qBACArB,sBA3G4B70E,IAC5B,GAA+B,IAA3B0H,EACF,OAAO,KAET,MAAMyuE,EAAkBD,EAAmBl2E,GAC3C,GAAuB,MAAnBm2E,GAAsE,IAA3CA,EAAgBtS,gBAAgB5pE,OAC7D,OAAO,KAET,MAAM,oBACJ8vC,EAAmB,mBACnBklC,GACEkH,EACE1zE,EAAU,GACV6zE,EAAiB,GACvB,IAAK,IAAIhwE,EAAQ,EAAGA,EAAQoB,EAAwBpB,GAAS,EAAG,CAC9D,IAAIiwE,EAAuBC,EAC3B,MAAMC,EAAe/nE,EAA4BpI,GAC3CowE,EAA2BlzE,EAAeumC,GAAqB9mC,MAC/D0zE,EAA8H,OAAxGJ,EAAwBr7E,EAAOzB,QAAQ4+B,4BAA4Bq+C,GAA0BpwE,IAAkBiwE,EAAwB,KAC7JK,EAAkBH,EAAaz4E,WAAUjS,IAAA,IAAC,QAC9C2sC,EAAO,aACP5K,GACD/hC,EAAA,OAAK2sC,IAAYi+C,GAAsB7oD,EAAa6I,SAAS+/C,EAAyB,IACjFG,EAA0BrzE,EAAeyrE,EAAqB,GAAGhsE,MACjE6zE,EAA6H,OAAxGN,EAAyBt7E,EAAOzB,QAAQ4+B,4BAA4Bw+C,GAAyBvwE,IAAkBkwE,EAAyB,KAC7JO,EAAiBN,EAAaz4E,WAAUjV,IAAA,IAAC,QAC7C2vC,EAAO,aACP5K,GACD/kC,EAAA,OAAK2vC,IAAYo+C,GAAqBhpD,EAAa6I,SAASkgD,EAAwB,IAC/EG,EAA2BP,EAAatzD,MAAMyzD,EAAiBG,EAAiB,GAAGl3E,KAAIo3E,IACpFhuF,EAAAA,EAAAA,GAAS,CAAC,EAAGguF,EAAgB,CAClCnpD,aAAcmpD,EAAenpD,aAAazqB,QAAOJ,IAAqC,IAA5BwL,EAAiBxL,SAE5EI,QAAO4zE,GAAkBA,EAAenpD,aAAa7zB,OAAS,IAC3Di9E,EAA0BF,EAAyB,GAAGlpD,aAAaja,QAAQ6iE,GAE3ES,EADqBH,EAAyB,GAAGlpD,aAAa3K,MAAM,EAAG+zD,GACrC/yE,QAAO,CAACC,EAAKnB,KACnD,IAAIm0E,EAEJ,OAAOhzE,GAAyD,OAAjDgzE,EADAl8E,EAAOzB,QAAQyrB,UAAUjiB,GACMW,eAAyBwzE,EAAwB,EAAE,GAChG,GACH,IAAIhB,EAAcrsC,EAClB,MAAMstC,EAAWL,EAAyBn3E,KAAIwoC,IAGxC,IAHyC,QAC7C3P,EAAO,aACP5K,GACDua,EACC,MAAMzoB,EAAsC,OAA3BtR,GAAmCA,EAAuBhI,QAAUA,GAASwnB,EAAa6I,SAASroB,EAAuBrL,OACrIoK,EAA8C,OAAnCe,GAA2CA,EAA+B9H,QAAUA,GAASwnB,EAAa6I,SAASvoB,EAA+BnL,OAAS,GAAK,EAC3Kq0E,EAAa,CACjB5+C,UACA7kC,MAAOi6B,EAAa3pB,QAAO,CAACC,EAAKnB,IAAUmB,EAAMlJ,EAAOzB,QAAQyrB,UAAUjiB,GAAOW,eAAe,GAChGooC,OAAQle,EACR6oB,SAAUy/B,EACVx2D,WACAvS,YAGF,OADA+oE,GAAetoD,EAAa7zB,OACrBq9E,CAAU,IAEnBhB,EAAer2E,KAAK,CAClBk3E,eACAE,YAEJ,CAiCA,OAhCAf,EAAetjF,SAAQ,CAACukF,EAAWC,KACjC/0E,EAAQxC,MAAmB9Q,EAAAA,GAAAA,KAAK4kF,GAAqB,CACnD76C,MAAO,CACLhvC,OAAQ,GAAF3B,OAAKuiD,EAAY,MACvB1/C,UAAW,eAAF7C,OAAiBgvF,EAAUJ,aAAY,QAElDvvE,KAAM,MACN,gBAAiB4vE,EAAa,EAC9BpvF,WAAYqG,EACZhC,SAAU8qF,EAAUF,SAASx3E,KAAI,CAAAiqC,EAO9B2tC,KAAe,IAPgB,QAChC/+C,EAAO,MACP7kC,EAAK,OACLm4C,EAAM,SACN2K,EAAQ,SACR/2B,EAAQ,SACRvS,GACDy8B,EACC,OAAoB36C,EAAAA,GAAAA,KAAKokF,GAAuB,CAC9C76C,QAASA,EACT7kC,MAAOA,EACPm4C,OAAQA,EACR2K,SAAUA,EACVrwC,MAAOkxE,EACP/D,aAAc98B,IAAanzC,EAAevJ,OAAS+xC,EAAO/xC,OAC1DgL,SAAUqxE,EAAer8E,OACzB/P,OAAQ4gD,EACRlrB,SAAUA,EACVvS,SAAUA,GACToqE,EAAW,KAEfD,GAAY,IAEV/0E,CAAO,EAYdgpE,aAAcsJ,EACd9B,aAAc,eAAC5lF,EAAK2M,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK/Q,EAAAA,EAAAA,GAAS,CACrCiwC,MAAOw4C,GACNrkF,EAAM,EACTsnF,cAAeA,KAAA,CACb/oF,IAAKwpF,EACLxtE,KAAM,aAERkjC,eACD,EGhTG4sC,CAAqB,CACvB5nE,WACAtM,iBACAwK,mBACAD,qBACAE,kBACAC,4BACAE,iCACAC,oBACAC,yBACAC,gBACA7G,yBACA8G,kBACAC,mBACAC,8BACAC,iCAEF,OAAoBxf,EAAAA,GAAAA,KAAKilF,IAAuBnrF,EAAAA,EAAAA,GAAS,CACvD2C,IAAKA,GACJqnF,EAAa5lF,GAAQ,CACtBZ,UAAuByC,EAAAA,GAAAA,MAAMslF,IAAwBvrF,EAAAA,EAAAA,GAAS,CAC5DwiF,WAAYA,GACXkJ,IAAiB,CAClBloF,SAAU,CAACooF,IAAyBD,UAG1C,K,gBC7DA,MAAMrtF,GAAY,CAAC,gBCAbA,GAAY,CAAC,WAAY,SAAU,KAAM,aAAc,YAAa,WAAY,QAShFowF,IAAiBlwF,EAAAA,EAAAA,IAAO4+C,GAAAA,EAAP5+C,EAAiB,KAAM,CAC5CqC,SAAU,QAEN8tF,GAAuClsF,EAAAA,YAAiB,SAAiC9D,EAAOgE,GACpG,MAAM,SACF05C,EAAQ,GACR3kC,EAAE,WACF8nE,EAAU,UACVp8E,EAAS,SACTI,EAAQ,KACRivC,GACE9zC,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCswF,EAAoBnsF,EAAAA,aAAkB6qB,IhIKjBtjB,MgIJrB8rB,GAASxI,EAAMtjB,MACjBsjB,EAAMyvB,iBhIGiB/yC,EgIDPsjB,EAAMtjB,KhICQ8rB,GAAS9rB,IAAQ4rB,GAAY5rB,KgIA3DqyC,EAAS/uB,EACX,GACC,CAAC+uB,IACJ,OAAoBn2C,EAAAA,GAAAA,KAAKwoF,IAAgB1uF,EAAAA,EAAAA,GAAS,CAChD0X,GAAIA,EACJ/U,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAKyE,EAAY4B,SAAUhJ,GACtC,kBAAmBo8E,EACnB7nD,UAAWi3D,EACXC,UAAWp8C,GACVruC,EAAO,CACRZ,SAAUA,IAEd,I,4BChCA,SAASsrF,GAAuBnwF,GAC9B,MAAM,OACJ48B,EAAM,QACNkhB,GACE99C,EACEsT,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KAIZhX,EAAsC,IAHrB2S,GAAqClI,GACrBmI,QAAOW,IAAiC,IAA1BA,EAAImyB,oBAExBl8B,OAC3B+9E,EAAetsF,EAAAA,aAAkB6qB,IAMjC9lB,IAGJyK,EAAOzB,QAAQw+E,oBAAoBzzD,EAAOvhB,OAAO,GACjDyiC,EAAQnvB,GAAM,GACb,CAACrb,EAAQspB,EAAOvhB,MAAOyiC,EAASj1C,IACnC,OAAIhC,EAAUypF,wBAGU,IAApB1zD,EAAO2L,SAFF,MAKWjhC,EAAAA,GAAAA,MAAMu9C,GAAAA,EAAU,CAClC/G,QAASsyC,EACTvnF,SAAUA,EACVhE,SAAU,EAAc0C,EAAAA,GAAAA,KAAKgpF,GAAAA,EAAc,CACzC1rF,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMmrF,mBAAoB,CAC9DxuF,SAAU,aAEGuF,EAAAA,GAAAA,KAAKkpF,GAAAA,EAAc,CAClC5rF,SAAUyO,EAAOzB,QAAQ6kB,cAAc,4BAG7C,CCxCA,SAASg6D,GAAyB1wF,GAChC,MAAM,QACJ89C,GACE99C,EACEsT,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZ8wE,EAAc7sF,EAAAA,aAAkB6qB,IACpCmvB,EAAQnvB,GACRrb,EAAOzB,QAAQ++E,gBAAgBztC,GAA0BtoC,QAAQ,GAChE,CAACvH,EAAQwqC,IACZ,OAAIj3C,EAAUypF,sBACL,MAEWhpF,EAAAA,GAAAA,MAAMu9C,GAAAA,EAAU,CAClC/G,QAAS6yC,EACT9rF,SAAU,EAAc0C,EAAAA,GAAAA,KAAKgpF,GAAAA,EAAc,CACzC1rF,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMwrF,4BAA6B,CACvE7uF,SAAU,aAEGuF,EAAAA,GAAAA,KAAKkpF,GAAAA,EAAc,CAClC5rF,SAAUyO,EAAOzB,QAAQ6kB,cAAc,+BAG7C,CC/BA,MAAM/2B,GAAY,CAAC,eAAgB,mBAAoB,QAAS,aASnDmxF,GAAyB,CACpCC,mBCDF,SAAgC/wF,GAC9B,IAAI0jF,EACJ,MAAM,OACJ9mD,EAAM,QACNkhB,GACE99C,EACEsT,EAASskB,KACTzV,EAAYpO,EAAgBT,EAAQ4O,IACpCrb,GAAYgZ,EAAAA,EAAAA,KACZ2C,EAAgB1e,EAAAA,SAAc,KAClC,IAAK84B,EACH,OAAO,KAET,MAAMta,EAAWH,EAAUvL,MAAKyN,GAAQA,EAAKhJ,QAAUuhB,EAAOvhB,QAC9D,OAAmB,MAAZiH,OAAmB,EAASA,EAAS3D,IAAI,GAC/C,CAACie,EAAQza,IACNoc,EAA+D,OAA/CmlD,EAAuB9mD,EAAO2B,cAAwBmlD,EAAuB78E,EAAU03B,aACvGyyD,EAAsBltF,EAAAA,aAAkB6qB,IAC5CmvB,EAAQnvB,GACR,MAAMqvB,EAAYrvB,EAAMuhC,cAAczE,aAAa,eAAiB,KACpEn4C,EAAOzB,QAAQo/E,WAAWr0D,EAAQohB,IAAcx7B,EAAgB,KAAOw7B,EAAU,GAChF,CAAC1qC,EAAQspB,EAAQkhB,EAASt7B,IAC7B,IAAKoa,IAAWA,EAAO4L,WAAajK,EAAauF,MAAKzf,KAAUA,IAC9D,OAAO,KAET,MAAM6sE,EAAW7lF,IACf,MAAMpB,EAAQqJ,EAAOzB,QAAQ6kB,cAAcrrB,GAC3C,MAAwB,oBAAVpB,EAAuBA,EAAM2yB,GAAU3yB,CAAK,EAE5D,OAAoB3C,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CACxCe,SAAU,CAAC05B,EAAawQ,SAAS,QAA4B,QAAlBvsB,GAAuClb,EAAAA,GAAAA,MAAMu9C,GAAAA,EAAU,CAChG/G,QAASkzC,EACT,aAAc,MACdnsF,SAAU,EAAc0C,EAAAA,GAAAA,KAAKgpF,GAAAA,EAAc,CACzC1rF,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM8rF,4BAA6B,CACvEnvF,SAAU,aAEGuF,EAAAA,GAAAA,KAAKkpF,GAAAA,EAAc,CAClC5rF,SAAUqsF,EAAS,0BAElB,KAAM3yD,EAAawQ,SAAS,SAA6B,SAAlBvsB,GAAwClb,EAAAA,GAAAA,MAAMu9C,GAAAA,EAAU,CAClG/G,QAASkzC,EACT,aAAc,OACdnsF,SAAU,EAAc0C,EAAAA,GAAAA,KAAKgpF,GAAAA,EAAc,CACzC1rF,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM+rF,6BAA8B,CACxEpvF,SAAU,aAEGuF,EAAAA,GAAAA,KAAKkpF,GAAAA,EAAc,CAClC5rF,SAAUqsF,EAAS,2BAElB,KAAM3yD,EAAawQ,SAAS,OAA0B,MAAjBvsB,GAAqClb,EAAAA,GAAAA,MAAMu9C,GAAAA,EAAU,CAC7F/G,QAASkzC,EACTnsF,SAAU,EAAc0C,EAAAA,GAAAA,KAAKgpF,GAAAA,EAAc,CAAC,IAAiBhpF,EAAAA,GAAAA,KAAKkpF,GAAAA,EAAc,CAC9E5rF,SAAUyO,EAAOzB,QAAQ6kB,cAAc,yBAEtC,OAET,EDvDE26D,qBEJF,SAAkCrxF,GAChC,MAAM,OACJ48B,EAAM,QACNkhB,GACE99C,EACEsT,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZyxE,EAAaxtF,EAAAA,aAAkB6qB,IACnCmvB,EAAQnvB,GACRrb,EAAOzB,QAAQ0/E,gBAAgB30D,EAAOvhB,MAAM,GAC3C,CAAC/H,EAAQspB,EAAOvhB,MAAOyiC,IAC1B,OAAIj3C,EAAUy9E,sBAAwB1nD,EAAOvgB,WACpC,MAEW/U,EAAAA,GAAAA,MAAMu9C,GAAAA,EAAU,CAClC/G,QAASwzC,EACTzsF,SAAU,EAAc0C,EAAAA,GAAAA,KAAKgpF,GAAAA,EAAc,CACzC1rF,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMmsF,qBAAsB,CAChExvF,SAAU,aAEGuF,EAAAA,GAAAA,KAAKkpF,GAAAA,EAAc,CAClC5rF,SAAUyO,EAAOzB,QAAQ6kB,cAAc,wBAG7C,EFnBE+6D,sBGPF,SAAmCzxF,GACjC,OAAoBsH,EAAAA,GAAAA,MAAMxD,EAAAA,SAAgB,CACxCe,SAAU,EAAc0C,EAAAA,GAAAA,KAAK4oF,IAAwB9uF,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,KAAsBuH,EAAAA,GAAAA,KAAKmpF,IAA0BrvF,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,MAExI,GHKa0xF,GAA8B,CACzCX,mBAAoB,CAClBY,aAAc,IAEhBN,qBAAsB,CACpBM,aAAc,IAEhBF,sBAAuB,CACrBE,aAAc,KAGZC,GAAqC9tF,EAAAA,YAAiB,SAA+B9D,EAAOgE,GAChG,MAAM,aACF6tF,EAAY,iBACZC,EAAgB,MAChBzsF,EAAK,UACLC,GACEtF,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCoyF,EJ7BuB/xF,KAC7B,MAAMsT,EAASiB,KACT,aACJs9E,EAAY,iBACZC,EAAgB,MAChBzsF,EAAQ,CAAC,EAAC,UACVC,EAAY,CAAC,EAAC,SACdo4C,EAAQ,OACR9gB,EAAM,YACNo1D,GAAc,GACZhyF,EACEiyF,EAAsBnuF,EAAAA,SAAc,KAAMzC,EAAAA,EAAAA,GAAS,CAAC,EAAGwwF,EAAcxsF,IAAQ,CAACwsF,EAAcxsF,IAC5F6sF,EAAqBpuF,EAAAA,SAAc,KACvC,IAAKwB,GAA+C,IAAlCwN,OAAOkX,KAAK1kB,GAAW+M,OACvC,OAAOy/E,EAET,MAAMK,GAAc9wF,EAAAA,EAAAA,GAAS,CAAC,EAAGiE,GAIjC,OAHAwN,OAAOoD,QAAQ47E,GAAkB1mF,SAAQnH,IAA6B,IAA3BoH,EAAK+mF,GAAiBnuF,EAC/DkuF,EAAY9mF,IAAOhK,EAAAA,EAAAA,GAAS,CAAC,EAAG+wF,EAAkB9sF,EAAU+F,IAAQ,CAAC,EAAE,IAElE8mF,CAAW,GACjB,CAACL,EAAkBxsF,IAChB+sF,EAAe/+E,EAAOzB,QAAQqjB,6BAA6B,aAAc,GAAIl1B,EAAM48B,QACnF01D,EAAYxuF,EAAAA,SAAc,KAC9B,MAAMyuF,EAAuBz/E,OAAOkX,KAAK6nE,GACzC,OAAO/+E,OAAOkX,KAAK3kB,GAAOoW,QAAOpQ,IAAQknF,EAAqBxjD,SAAS1jC,IAAK,GAC3E,CAAChG,EAAOwsF,IACX,OAAO/tF,EAAAA,SAAc,KACnB,MAEM0uF,EAFchgF,MAAM6W,KAAK,IAAIG,IAAI,IAAI6oE,KAAiBC,KAC1B72E,QAAOpQ,GAAmC,MAA5B4mF,EAAoB5mF,KACvCsT,MAAK,CAAC3L,EAAGC,KACpC,MAAMw/E,EAAgBP,EAAmBl/E,GACnC0/E,EAAiBR,EAAmBj/E,GAG1C,OAFyBhN,OAAO0sF,SAA0B,MAAjBF,OAAwB,EAASA,EAAcd,cAAgBc,EAAcd,aAAe,MAC3G1rF,OAAO0sF,SAA2B,MAAlBD,OAAyB,EAASA,EAAef,cAAgBe,EAAef,aAAe,IAC9F,IAE7C,OAAOa,EAAOj2E,QAAO,CAACC,EAAKnR,EAAKkX,KAC9B,IAAIqwE,EAAY,CACdh2D,SACAkhB,QAASJ,GAEX,MAAMm1C,EAA0BX,EAAmB7mF,GACnD,GAAIwnF,EAAyB,CAC3B,MAAMC,GAAcptF,EAAAA,EAAAA,GAA8BmtF,EAAyBlzF,IAC3EizF,GAAYvxF,EAAAA,EAAAA,GAAS,CAAC,EAAGuxF,EAAWE,EACtC,CACA,OAAOd,GAAezvE,IAAUiwE,EAAOngF,OAAS,EAAI,IAAImK,EAAK,CAACy1E,EAAoB5mF,GAAMunF,GAAY,CAACG,GAAAA,EAAS,CAAC,IAAM,IAAIv2E,EAAK,CAACy1E,EAAoB5mF,GAAMunF,GAAW,GACnK,GAAG,GACL,CAACZ,EAAap1D,EAAQy1D,EAAc30C,EAAUu0C,EAAqBC,EAAoBI,GAAW,EIpBhFU,EAAuB3xF,EAAAA,EAAAA,GAAS,CAAC,EAAGoE,EAAO,CAC9DosF,eACAC,mBACAzsF,QACAC,eAEF,OAAoBiC,EAAAA,GAAAA,KAAKyoF,IAAyB3uF,EAAAA,EAAAA,GAAS,CACzD2C,IAAKA,GACJyB,EAAO,CACRZ,SAAUktF,EAAa95E,KAAI,CAAAhU,EAA0Bse,KAAK,IAA7B0wE,EAAWC,GAAWjvF,EAAA,OAAyBsD,EAAAA,GAAAA,KAAK0rF,GAAW5xF,EAAAA,EAAAA,GAAS,CAAC,EAAG6xF,GAAa3wE,EAAM,MAEhI,IACM4wE,GAA8BrvF,EAAAA,YAAiB,SAAwB9D,EAAOgE,GAClF,OAAoBuD,EAAAA,GAAAA,KAAKqqF,IAAuBvwF,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CAClEgE,IAAKA,EACL6tF,aAAcf,GACdgB,iBAAkBJ,KAEtB,IIhDa0B,GAAoCtvF,EAAAA,YAAiB,SAA8B9D,EAAOgE,GACrG,MACMi+D,EADSrqC,KACsB/lB,QAAQ6kB,cAAc,yBAC3D,OAAoBnvB,EAAAA,GAAAA,KAAKsjE,IAAaxpE,EAAAA,EAAAA,GAAS,CAC7C2C,IAAKA,GACJhE,EAAO,CACR6E,SAAUo9D,IAEd,I,+GCXA,MAAMtiE,GAAY,CAAC,gBAIN0zF,GAAsCvvF,EAAAA,MAAW,SAAkC9D,GAC9F,MAAM,aACFu+B,GACEv+B,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,MACXyzE,GAAqB/0D,EACtB8N,EAA6B,QAAtBinD,EAA8BzsF,EAAUxB,MAAMs6E,0BAA4B94E,EAAUxB,MAAMu6E,2BACvG,OAAOvzC,GAAoB9kC,EAAAA,GAAAA,KAAK8kC,GAAMhrC,EAAAA,EAAAA,GAAS,CAAC,EAAGoE,IAAU,IAC/D,ICZa8tF,IAAsB/rF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CAC1EE,EAAG,gEACD,eACS+rF,IAAwBhsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CAC5EE,EAAG,mEACD,iBACSgsF,IAAyBjsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CAC7EE,EAAG,2DACD,sBACSisF,IAAqBlsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACzEE,EAAG,iDACD,cACSksF,IAAqBnsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACzEE,EAAG,mDACD,cACSmsF,IAAoBpsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACxEE,EAAG,mJACD,aACSosF,IAAiBrsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACrEE,EAAG,+OACD,UAOSqsF,KANetsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACnEE,EAAG,kDACD,SAC+BD,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CAC1EE,EAAG,0HACD,gBAC0BD,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACrEE,EAAG,mPACD,eACSssF,IAAoBvsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACxEE,EAAG,mBACD,aACSusF,IAAuBxsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CAC3EE,EAAG,gEACD,gBACSwsF,IAAoBzsF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACxEE,EAAG,wDACD,aACSysF,IAAqB1sF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACzEE,EAAG,mCACD,cACS0sF,IAA6B3sF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACjFE,EAAG,sJACD,sBACS2sF,IAAgB5sF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACpEE,EAAG,0GACD,SACS4sF,IAAc7sF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CAClEE,EAAG,wCACD,OACS6sF,IAAiB9sF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACrEE,EAAG,sBACD,UACS8sF,IAAe/sF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACnEE,EAAG,oOACD,QACS+sF,IAAehtF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACnEE,EAAG,wSACD,QACSgtF,IAAkBjtF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACtEE,EAAG,uHACD,WACSitF,IAAgBltF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACpEE,EAAG,sDACD,SACSktF,IAAmBntF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACvEE,EAAG,sJACD,YACSmtF,IAAwBptF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CAC5EE,EAAG,8fACD,iBACSotF,IAAqBrtF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,IAAK,CACtE1C,UAAuB0C,EAAAA,GAAAA,KAAK,OAAQ,CAClCE,EAAG,+EAEH,cACSqtF,IAAgBttF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACpEE,EAAG,0GACD,SAISstF,KAHiBvtF,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CACrEE,EAAG,kFACD,WACiCD,EAAAA,GAAAA,IAA4BD,EAAAA,GAAAA,KAAK,OAAQ,CAC5EE,EAAG,gNACD,WCtFE9H,GAAY,CAAC,UCcnB,MAAMq1F,GAAY,CAChBC,oBAAqBP,GACrBQ,qBAAsBd,GACtBe,eAAgBhB,GAChBiB,qBAAsBzB,GACtB0B,sBAAuBjB,GACvBkB,mBAAoB1B,GACpB2B,mBAAoBzB,GACpB0B,mBAAoBnC,GACpBoC,0BAA2BlC,GAC3BmC,2BAA4BlC,GAC5BmC,iBAAkB5B,GAClB6B,mBAAoB5B,GACpB6B,oBAAqB5B,GACrB6B,uBAAwB5B,GACxB6B,WAAYtB,GACZuB,gBAAiBrB,GACjBsB,qBAAsBvC,GACtBwC,mBAAoBzC,GACpB0C,6BAA8BzC,GAC9B0C,2BAA4B3C,GAC5B4C,sBAAuBhC,GACvBiC,wBAAyBhC,GACzBiC,eAAgB/B,GAChBgC,gBAAiB3C,GACjB4C,qBAAsBrC,GACtBsC,mBAAoB9B,GACpB+B,4BAA6BpD,GAC7BqD,6BAA8BpD,GAC9BqD,qBAAsBjD,GACtBkD,4BAA6BjC,GAC7BkC,oBAAqBjC,GACrBkC,SAAUzC,GACV0C,mBAAoB5C,GACpB6C,yBAA0BnC,GAC1BoC,kBAAmB3C,IAiBrB,IAfsBnzF,EAAAA,EAAAA,GAAS,CAAC,EAAG2zF,GAAW,CAC5CoC,aAAcC,GAAAA,EACdC,cAAeC,GAAAA,EACfC,gBAAiBC,GAAAA,EACjBC,WAAYC,GAAAA,EACZC,WAAYC,GAAAA,EACZC,WAAYC,GAAAA,EACZC,eAAgBC,GAAAA,EAChBC,mBAAoBC,GAAAA,EACpBC,YAAaC,GAAAA,EACbC,WAAYC,GAAAA,EACZC,eAAgBC,GAAAA,EAChBC,iBD3Da,SAAyBz0F,GACtC,IAAI,OACAspC,GACEtpC,EACJjE,GAAQ0F,EAAAA,EAAAA,GAA8BzB,EAAMtE,IAC9C,OAAI4tC,GACkBhmC,EAAAA,GAAAA,KAAK,UAAUlG,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,KAE9BuH,EAAAA,GAAAA,KAAKoxF,GAAAA,GAAat3F,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,GACrD,ECmDE44F,SAAUC,GAAAA,ICxDCC,IAAqCz3F,EAAAA,EAAAA,GAAS,CAAC,EAAG03F,GAAe,CAC5EtgD,KAAM8kC,GACNyb,axDQF,SAA0Bh5F,GACxB,MAAM,MACFipC,EAAK,MACLh9B,EAAK,aACLkzE,GACEn/E,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IAMzCyG,EAtBkB5F,KACxB,MAAM,MACJyoC,EAAK,QACL7iC,GACE5F,EACE6E,EAAQ,CACZnF,KAAM,CAAC,OAAQ,eAAgB,aAAFS,QAAeC,EAAAA,EAAAA,GAAWqoC,IAAU,oBAEnE,OAAO5iC,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAc9CE,CAJG,CACjBF,SAFgByZ,EAAAA,EAAAA,KAEGzZ,QACnB6iC,UAGF,OAAoB1hC,EAAAA,GAAAA,KAAK,OAAOlG,EAAAA,EAAAA,GAAS,CACvCoD,UAAW2B,EAAQlG,KACnBoxC,MAAO,CACLrlC,UAEDxG,EAAO,CACRZ,UAAuB0C,EAAAA,GAAAA,KAAK0xF,GAAAA,EAAU,CACpChtF,MAAO,GAAFtL,OAAKw+E,EAAY,SAG5B,EwD9BE+Z,6BCUF,SAA0Cl5F,GACxC,IAAIkhB,EAAsBC,EAC1B,MAAM,QACJqjE,EAAO,MACPnpE,EAAK,QACLyiC,GACE99C,EACEsT,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KAIZzZ,EArBkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZkD,KAAM,CAAC,eAEoBqC,EAAyBxF,EAAQ,EAc9CE,EAHGjF,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACrCoG,QAASS,EAAUT,WAGf2rD,EAAkBh+C,EAAgBT,EAAQw+C,IAC1C5kB,GAAU7M,EAAAA,GAAAA,KACVqqC,GAAUrqC,EAAAA,GAAAA,KACV84D,EAAer1F,EAAAA,aAAkB6qB,IACrCA,EAAMyvB,iBACNzvB,EAAMgK,kBACN,MAAM,KACJmb,EAAI,iBACJy2B,GACEzY,GAAiCx+C,EAAOzB,QAAQ6B,OAChDogC,GAAQy2B,IAAqBpnB,GAA0BqnB,QACzDl3D,EAAOzB,QAAQykE,kBAEfhjE,EAAOzB,QAAQ0/E,qBAAgBprF,EAAWukE,EAASx9B,GAEjD4Q,GACFA,EAAQxqC,EAAOzB,QAAQiuD,sBAAsBzkD,GAAQsT,EACvD,GACC,CAACrb,EAAQ+H,EAAOyiC,EAAS4sB,EAASx9B,IACrC,IAAKs3C,EACH,OAAO,KAET,MAAM1wC,EAAOie,EAAgBje,MAAQie,EAAgB7kB,UAAYA,EAC3D6yC,GAA0Bx4E,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMi5C,gBAAgBj9C,EAAAA,EAAAA,GAAS,CAC5E0X,GAAIm0B,EACJ4Q,QAASq7C,EACTl4F,MAAO,UACP,aAAcqS,EAAOzB,QAAQ6kB,cAAc,4BAC3CzuB,KAAM,QACNwd,UAAW,EACX,gBAAiB,OACjB,gBAAiBquB,EACjB,gBAAiBA,EAAO42B,OAAUvkE,GACe,OAA/C+a,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBo9B,eAAgB,CACtGz5C,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM+zF,mBAAoB,CAC9D30F,UAAW2B,EAAQmD,KACnBvH,SAAU,aAGd,OAAoBuF,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMi7E,aAAaj/E,EAAAA,EAAAA,GAAS,CAC7DskD,MAAOryC,EAAOzB,QAAQ6kB,cAAc,mCAA7BpjB,CAAiEkxE,GACxEjE,WAAY,KACsC,OAAhDp/D,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBm/D,YAAa,CACrGz7E,UAAuByC,EAAAA,GAAAA,MAAM0hE,GAAyB,CACpDnkE,SAAU,CAAC2/E,EAAU,IAAkBj9E,EAAAA,GAAAA,KAAKb,GAAAA,EAAO,CACjDvB,aAAcq/E,EACdvjF,MAAO,UACP4D,SAAUk7E,IACI,IAAZyE,GAAiBzE,OAG3B,EDzEEsZ,WAAYlG,GACZmG,cAAeC,GACfC,OAAQ/vB,GACRgwB,eAAgBvvB,GAChB+C,QAAS,KACTysB,iBAAkBvvB,GAClBwvB,eAAgB7uB,GAChB8uB,iBAAkBxG,GAClByG,cAAe7uB,GACf8uB,WAAYvqB,GACZwqB,YAAa5kB,GACb6kB,ajCmCF,SAA0Bh6F,GACxB,IAAIkhB,EAAsB+rB,EAAuBiN,EACjD,MAAM5mC,EAASskB,KACTqiE,EAAiBn2F,EAAAA,OAAa,MAC9B+W,EAAU9G,EAAgBT,EAAQ6H,GAClCI,EAAwBxH,EAAgBT,EAAQgI,IAChDzU,GAAYgZ,EAAAA,EAAAA,MACX43D,EAAayiB,GAAkBp2F,EAAAA,SAAe,IAC/CsC,EA9CkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAKJ,OAAO6F,EAAAA,EAAAA,GAJO,CACZnG,KAAM,CAAC,gBACPo3E,gBAAiB,CAAC,oBAES1rE,EAAyBxF,EAAQ,EAsC9CE,CAAkBO,IAC5B,KACF8X,EAAI,gBACJw7E,EAAkB3iB,GAAsB,qBACxC4iB,GAAuB,EAAI,qBAC3BC,GAAuB,EAAK,qBAC5BC,GAAuB,EAAK,oBAC5BC,GACEv6F,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzC66F,EAAgB12F,EAAAA,SAAc,KAClC,OAAQ6a,GACN,IAAK,MACH,MAAO,IAAI9D,GAAS8D,MAAK,CAAC3L,EAAGC,IAAM2rB,GAASoK,QAAQh2B,EAAE69B,YAAc79B,EAAEqI,MAAOpI,EAAE49B,YAAc59B,EAAEoI,SACjG,IAAK,OACH,MAAO,IAAIR,GAAS8D,MAAK,CAAC3L,EAAGC,KAAO2rB,GAASoK,QAAQh2B,EAAE69B,YAAc79B,EAAEqI,MAAOpI,EAAE49B,YAAc59B,EAAEoI,SAClG,QACE,OAAOR,EACX,GACC,CAACA,EAAS8D,IACPyxE,EAAezhE,IACnB,MACE7uB,KAAMub,GACJsT,EAAM0C,OACV/d,EAAOzB,QAAQw+E,oBAAoBh1E,GAAwC,IAAjCE,EAAsBF,GAAiB,EAE7Eo/E,EAAmB32F,EAAAA,aAAkB42F,IACzC,MAAMC,EAAer/E,GAAkChI,GACjD4hD,GAAW7zD,EAAAA,EAAAA,GAAS,CAAC,EAAGs5F,GACxBC,EAAmBL,EAAsBA,EAAoB1/E,GAAW,KAW9E,OAVAA,EAAQzP,SAAQgR,IACVA,EAAImsB,WAAiC,MAApBqyD,GAA4BA,EAAiB7rD,SAAS3yB,EAAIf,UACzEq/E,SAEKxlC,EAAS94C,EAAIf,OAEpB65C,EAAS94C,EAAIf,QAAS,EAE1B,IAEK/H,EAAOzB,QAAQ02C,yBAAyB2M,EAAS,GACvD,CAAC5hD,EAAQuH,EAAS0/E,IACfM,EAA0B/2F,EAAAA,aAAkB6qB,IAChDurE,EAAevrE,EAAM0C,OAAOxb,MAAM,GACjC,IACGwuC,EAAiBvgD,EAAAA,SAAc,KACnC,MAAM82F,EAAmBL,EAAsBA,EAAoBC,GAAiB,KAC9EM,EAAyBF,EAAmBJ,EAAc/+E,QAAOtX,IAAA,IAAC,MACtEkX,GACDlX,EAAA,OAAKy2F,EAAiB7rD,SAAS1zB,EAAM,IAAIm/E,EAC1C,OAAK/iB,EAGEqjB,EAAuBr/E,QAAOC,GAAUy+E,EAAgBz+E,EAAQ+7D,EAAYtpC,iBAF1E2sD,CAEyF,GACjG,CAACN,EAAe/iB,EAAa0iB,EAAiBI,IAC3CQ,EAAiBj3F,EAAAA,OAAa,MACpCA,EAAAA,WAAgB,KACVs2F,EACFH,EAAepoF,QAAQoT,QACd81E,EAAelpF,SAAmD,oBAAjCkpF,EAAelpF,QAAQoT,OACjE81E,EAAelpF,QAAQoT,OACzB,GACC,CAACm1E,IACJ,IAAIY,GAA2B,EAC/B,MAAMC,EAAwBv/E,IACK,IAA7Bs/E,IAA0D,IAApBt/E,EAAO6sB,WAC/CyyD,GAA2B,GACpB,GAIX,OAAoB1zF,EAAAA,GAAAA,MAAMmpE,IAAkBpvE,EAAAA,EAAAA,GAAS,CAAC,EAAGoE,EAAO,CAC9DZ,SAAU,EAAc0C,EAAAA,GAAAA,KAAK2vE,GAAiB,CAC5CryE,UAAuB0C,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMu7B,eAAev/B,EAAAA,EAAAA,GAAS,CAClE4I,MAAOqJ,EAAOzB,QAAQ6kB,cAAc,8BACpCmK,YAAavtB,EAAOzB,QAAQ6kB,cAAc,oCAC1CsG,SAAUi9D,EACVpkF,MAAO4hE,EACP1+C,SAAU8hE,EACVn6F,QAAS,WACTq9B,WAAW,GACsC,OAA/C7c,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB0f,mBACzEr5B,EAAAA,GAAAA,KAAK2oE,GAAkB,CACtCrrE,UAAuB0C,EAAAA,GAAAA,KAAK4vE,GAAsB,CAChD1yE,UAAW2B,EAAQlG,KACnBM,WAAYqG,EACZhC,SAAUw/C,EAAepsC,KAAIyD,IAC3B,IAAIyF,EACJ,OAAoB7Z,EAAAA,GAAAA,MAAM+vE,GAAyB,CACjD5yE,UAAW2B,EAAQkxE,gBACnB92E,WAAYqG,EACZhC,SAAU,EAAc0C,EAAAA,GAAAA,KAAK2zF,GAAAA,EAAkB,CAC7CvwF,SAAsBpD,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM81F,YAAY95F,EAAAA,EAAAA,GAAS,CAC9DwH,UAA8B,IAApB6S,EAAO6sB,SACjB3/B,SAAiD,IAAxC2S,EAAsBG,EAAOL,OACtCyiC,QAASsyC,EACTtwF,KAAM4b,EAAOL,MACbpT,KAAM,QACN+0B,SAAUi+D,EAAsBv/E,GAAUq/E,OAAiB50F,GACT,OAAhDgb,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsBg6E,aAC1FlxF,MAAOyR,EAAOm1B,YAAcn1B,EAAOL,SAChCxU,EAAUy2E,sBDvJc,QC+J5B5hE,EAAOL,MAAM,QAGlBi/E,GAAwBD,EAAuB,MAAoB/yF,EAAAA,GAAAA,MAAM+oE,GAAiB,CAC5FxrE,SAAU,CAAEw1F,GAKO9yF,EAAAA,GAAAA,KAAK,OAAQ,CAAC,IALeA,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMkxE,YAAYl1E,EAAAA,EAAAA,GAAS,CACxFy8C,QAASA,IAAM28C,GAAiB,IACkB,OAAhDxtD,EAAwBpmC,EAAUvB,gBAAqB,EAAS2nC,EAAsBspC,WAAY,CACpG1tE,SAAUwxF,EACVx1F,SAAUyO,EAAOzB,QAAQ6kB,cAAc,gCACH4jE,EAKhC,MALoE/yF,EAAAA,GAAAA,KAAKV,EAAUxB,MAAMkxE,YAAYl1E,EAAAA,EAAAA,GAAS,CAClHy8C,QAASA,IAAM28C,GAAiB,IACkB,OAAhDvgD,EAAwBrzC,EAAUvB,gBAAqB,EAAS40C,EAAsBq8B,WAAY,CACpG1tE,SAAUyxF,EACVz1F,SAAUyO,EAAOzB,QAAQ6kB,cAAc,sCAI/C,EiCxKE0kE,MAAOvjB,GACPv+B,IAAK+hD,KEtBMC,GAAyBC,IACpC,QAA0Bp1F,IAAtBo1F,EAGJ,OAAOzoF,OAAOkX,KAAKuxE,GAAmBh/E,QAAO,CAACC,EAAKnR,KAAQhK,EAAAA,EAAAA,GAAS,CAAC,EAAGmb,EAAK,CAC3E,CAAC,GAAD7b,OAAI0K,EAAImwF,OAAO,GAAGrtD,eAAaxtC,OAAG0K,EAAIkwB,MAAM,KAAOggE,EAAkBlwF,MACnE,CAAC,EAAE,ECVH1L,GAAY,CAAC,aAAc,mBAGjC,SAAS87F,GAAoBz7F,GAC3B,IAAI07F,EACJ,MAAM1xE,EAAOlX,OAAOkX,KAAKhqB,GACzB,IAAKgqB,EAAK8Z,MAAKz4B,GAAOA,EAAIgpD,WAAW,UAAYhpD,EAAIgpD,WAAW,WAC9D,OAAOr0D,EAET,MAAMq1D,EAAW,CAAC,EACZsmC,EAAmE,OAAjDD,EAAwB17F,EAAM27F,gBAA0BD,EAAwB,CAAC,EACzG,IAAK,IAAIlmF,EAAI,EAAGA,EAAIwU,EAAK3X,OAAQmD,GAAK,EAAG,CACvC,MAAMnK,EAAM2e,EAAKxU,GACbnK,EAAIgpD,WAAW,UAAYhpD,EAAIgpD,WAAW,SAC5CsnC,EAAetwF,GAAOrL,EAAMqL,GAE5BgqD,EAAShqD,GAAOrL,EAAMqL,EAE1B,CAEA,OADAgqD,EAASsmC,eAAiBA,EACnBtmC,CACT,CCfA,MAAMumC,GAAyB,CAC7Bj4D,iCAAiC,EACjCvF,+BAA+B,EAC/Bhe,6BAA6B,EAC7Bg7C,oBAAgBj1D,EAChB0jE,oBAAoB,EACpBvvC,YAAY,EACZ4B,8BAA8B,EAC9BohD,sBAAsB,EACtBkG,qBAAqB,EACrBqY,oCAAoC,EACpC9pE,UAAW,YAMA+pE,GAAiC,CAC5CxvF,YAAY,EACZ0tB,cAAc,EACdsnC,mBAAmB,EACnBplC,8BAA8B,EAC9B8mB,aAAc,EACdolC,UAAW,EACXgB,gBAAiB,EACjBD,aAAc,EACdhwD,cAAc,EACd3e,QAAS,WACT8pE,qBAAqB,EACrB/1C,mBAAmB,EACnB+hD,uBAAuB,EACvByL,wBAAwB,EACxB72D,aAAa,EACbvB,iCAAiC,EACjCvjB,6BAA6B,EAC7Bge,+BAA+B,EAC/B49D,4BAA4B,EAC5BC,uBAAuB,EACvBzjD,SAAUX,GAAcY,KACxByjD,WAAY,SACZ17D,iBAAkB,IAClB0pB,mBAAoB,GACpB9hC,YAAY,EACZ4hD,sBAAsB,EACtBH,oBAAoB,EACpBF,4BAA4B,EAC5BnlC,kBAAkB,EAClBtY,OAAQvZ,QACRmZ,SAAkD,QAClDwO,YAAY,EACZkzB,eAAgB,SAChBthB,UAAW,GACX4jC,gBAAiB,CAAC,GAAI,GAAI,KAC1BuO,eAAgB,SAChBa,wBAAwB,EACxB+C,0BAA0B,EAC1B1jD,aAAc,CAAC,MAAO,OAAQ,MAC9B49D,YAAa,SACb/gC,eAAgB,EAChBkiB,sBAAsB,EACtBkG,qBAAqB,EACrB4Y,6BAA6B,EAC7BP,oCAAoC,EACpCzpD,2CAA2C,EAC3CE,2BAA4B,KAC5B+pD,uBAAwB,KAEpBxK,GAAeyJ,GAAuBxC,IAC/BwD,GAAmBv4F,IAC9B,MAAOY,EAAYC,EAAiB23F,IDrDbC,GCqDqCj4F,EAAAA,GAAAA,GAAc,CACxEvE,MAAO+D,EACPjE,KAAM,gBDtDDgE,EAAAA,SAAc,KACnB,MAAM,WACFa,EAAU,gBACVC,GACE43F,EAEN,MAAO,CAAC73F,EAAYC,EAAiB62F,IADrB/1F,EAAAA,EAAAA,GAA8B82F,EAAU78F,KACc,GACrE,CAAC68F,KARC,IAAkBA,ECyDvB,MAAM7lE,EAAa7yB,EAAAA,SAAc,KAAMzC,EAAAA,EAAAA,GAAS,CAAC,EAAG0gE,GAA0Bw6B,EAAY5lE,aAAa,CAAC4lE,EAAY5lE,aAC9GtxB,EAAQvB,EAAAA,SAAc,IC3EvB,SAAqBG,GAIzB,IAJ0B,aAC3B4tF,EAAY,MACZxsF,EAAK,WACLV,GACDV,EACC,MAAMw4F,EAAqB,MAATp3F,EAAgBA,EAAQV,EAAa22F,GAAuB32F,GAAc,KAC5F,IAAK83F,GAA+C,IAAlC3pF,OAAOkX,KAAKyyE,GAAWpqF,OACvC,OAAOw/E,EAET,MAAM9sD,GAAS1jC,EAAAA,EAAAA,GAAS,CAAC,EAAGwwF,GAO5B,OANA/+E,OAAOkX,KAAKyyE,GAAWrxF,SAAQC,IAC7B,MAAMqxF,EAAIrxF,OACWlF,IAAjBs2F,EAAUC,KACZ33D,EAAO23D,GAAKD,EAAUC,GACxB,IAEK33D,CACT,CD0DoC43D,CAAa,CAC7C9K,gBACAxsF,MAAOk3F,EAAYl3F,MACnBV,gBACE,CAACA,EAAY43F,EAAYl3F,QAC7B,OAAOvB,EAAAA,SAAc,KACnB,IAAI84F,EACJ,OAAOv7F,EAAAA,EAAAA,GAAS,CAAC,EAAGy6F,GAAgCS,EAAa,CAC/D5lE,aACAtxB,QACAC,UAA8D,OAAlDs3F,EAAwBL,EAAYj3F,WAAqBs3F,EAAwBh4F,GAC5Fg3F,GAAuB,GACzB,CAACW,EAAa5lE,EAAYtxB,EAAOT,GAAiB,EEhF1Ci4F,GAA2BnpF,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnEuzC,SAAU,CACRgD,uBAAwB,EACxBnuC,UAAW,MAIf,MAAMghF,GAAoBA,CAACC,EAAeC,EAAkBC,IAC7B,kBAAlBF,GAA8BA,EAAgB,EAChDA,EAMFC,EAEgB,CAAC,+DAAD,2CAA8GtqF,KAAK,MAChH,CAAC,gFAAD,2CAA+HA,KAAK,MC/BzJ,SAASwqF,GAAOtxD,GACrB,YAAsBzlC,IAAfylC,EAAKvwB,KACd,CCCA,MAAM8hF,GAAqCA,CAACC,EAAiBC,EAASC,KACpE,GAAIJ,GAAOE,GAAkB,CAC3B,QAAgEj3F,IAA5Dm3F,EAAiCF,EAAgB/hF,OACnD,MAAM,IAAI5G,MAAM,CAAC,qDAAD,gBAAA9T,OAAuEy8F,EAAgB/hF,MAAK,iDAAA1a,OAAiD28F,EAAiCF,EAAgB/hF,OAAO3I,KAAK,QAAM,KAAA/R,OAAS08F,EAAQ3qF,KAAK,SAAUA,KAAK,OAGvQ,YADA4qF,EAAiCF,EAAgB/hF,OAASgiF,EAE5D,CACA,MAAM,QACJvsD,EAAO,SACPjsC,GACEu4F,EACJv4F,EAASuG,SAAQ0gC,IACfqxD,GAAmCrxD,EAAO,IAAIuxD,EAASvsD,GAAUwsD,EAAiC,GAClG,EASSC,GAA4BC,IACvC,IAAKA,EACH,MAAO,CAAC,EAEV,MAAMC,EAAmB,CAAC,EAI1B,OAHAD,EAAoBpyF,SAAQgyF,IAC1BD,GAAmCC,EAAiB,GAAIK,EAAiB,IAEpEA,CAAgB,EAEZC,GAAiCA,CAACC,EAAgB9gF,EAAwB+gF,KACrF,MAAMC,EAAaxiF,IACjB,IAAIyiF,EACJ,OAAkE,OAA1DA,EAAwBjhF,EAAuBxB,IAAkByiF,EAAwB,EAAE,EAE/FC,EAA0B,GAC1B1gF,EAAW4L,KAAKhkB,OAAO04F,EAAe1lF,KAAIoD,GAASwiF,EAAWxiF,GAAOhJ,UACrE2rF,EAAkBA,CAACC,EAAQC,EAAQx/E,IAAUwK,GAAY20E,EAAWI,GAAQ1iE,MAAM,EAAG7c,EAAQ,GAAIm/E,EAAWK,GAAQ3iE,MAAM,EAAG7c,EAAQ,IAU3I,IAAK,IAAIA,EAAQ,EAAGA,EAAQrB,EAAUqB,GAAS,EAAG,CAChD,MAAMy/E,EAAiBR,EAAephF,QAAO,CAAC6hF,EAAWC,KACvD,IAAIC,EACJ,MAAMxtD,EAA+D,OAApDwtD,EAAoBT,EAAWQ,GAAU3/E,IAAkB4/E,EAAoB,KAChG,GAAyB,IAArBF,EAAU/rF,OACZ,MAAO,CAAC,CACN6zB,aAAc,CAACm4D,GACfvtD,YAGJ,MAAMytD,EAAYH,EAAUA,EAAU/rF,OAAS,GACzCmsF,EAAYD,EAAUr4D,aAAaq4D,EAAUr4D,aAAa7zB,OAAS,GAEzE,OADoBksF,EAAUztD,UACVA,IAAYktD,EAAgBQ,EAAWH,EAAU3/E,KAtBxCu/E,EAwBLO,EAxBaN,EAwBFG,EAvBjB,MAAhBT,GAAwBA,EAAah6F,MAAQg6F,EAAah6F,KAAKmrC,SAASkvD,KAAYL,EAAah6F,KAAKmrC,SAASmvD,IAG/F,MAAhBN,GAAwBA,EAAar6F,QAAUq6F,EAAar6F,MAAMwrC,SAASkvD,IAAWL,EAAar6F,MAAMwrC,SAASmvD,IAsB3G,IAAIE,EAAW,CACpBl4D,aAAc,CAACm4D,GACfvtD,YAKG,IAAIstD,EAAU7iE,MAAM,EAAG6iE,EAAU/rF,OAAS,GAAI,CACnD6zB,aAAc,IAAIq4D,EAAUr4D,aAAcm4D,GAC1CvtD,YAnC0B2tD,IAACR,EAAQC,CAoCnC,GACD,IACHH,EAAwB1lF,KAAK8lF,EAC/B,CACA,OAAOJ,CAAuB,EClF1Bp+F,GAAY,CAAC,UAAW,YAQxB++F,GAAoBlB,IACxB,IAAImB,EAAc,CAAC,EA2BnB,OA1BAnB,EAAoBpyF,SAAQwgC,IAC1B,GAAIsxD,GAAOtxD,GACT,OAEF,MAAM,QACFkF,EAAO,SACPjsC,GACE+mC,EACJnmC,GAAQC,EAAAA,EAAAA,GAA8BkmC,EAAMjsC,IAC9C,IAAKmxC,EACH,MAAM,IAAIr8B,MAAM,yFAEb5P,GACH8N,QAAQC,KAAK,sBAADjS,OAAuBmwC,EAAO,sBAE5C,MAAM8tD,GAAav9F,EAAAA,EAAAA,GAAS,CAAC,EAAGoE,EAAO,CACrCqrC,YAEI+tD,EAAgBH,GAAkB75F,GACxC,QAA+BsB,IAA3B04F,EAAc/tD,SAAmD3qC,IAAzBw4F,EAAY7tD,GACtD,MAAM,IAAIr8B,MAAM,oBAAD9T,OAAqBmwC,EAAO,wDAE7C6tD,GAAct9F,EAAAA,EAAAA,GAAS,CAAC,EAAGs9F,EAAaE,EAAe,CACrD,CAAC/tD,GAAU8tD,GACX,KAEGv9F,EAAAA,EAAAA,GAAS,CAAC,EAAGs9F,EAAY,EAErBG,GAA+BA,CAACprF,EAAO1T,EAAOsT,KACzD,IAAIyrF,EAAuBC,EAAuBC,EAAwBC,EAC1E,GAA8D,OAAvDH,EAAwB/+F,EAAMigB,wBAAiC8+E,EAAsBriF,eAC1F,OAAOhJ,EAET,MAAMwyB,EAAeprB,EAAyBxH,GACxC6rF,EAAsBxjF,GAAgCrI,GACtDqrF,EAAcD,GAAyE,OAAtDM,EAAwBh/F,EAAMw9F,qBAA+BwB,EAAwB,IACtHniF,EAAyB0gF,GAAkF,OAAvD0B,EAAyBj/F,EAAMw9F,qBAA+ByB,EAAyB,IAC3In4E,EAA8B42E,GAA+Bx3D,EAAcrpB,EACjB,OAA/DqiF,EAAwB5rF,EAAOzB,QAAQ6B,MAAM0rF,eAAyBF,EAAwB,CAAC,GAC1F7hF,EAA0C,IAA/B8hF,EAAoB9sF,OAAe,EAAI4W,KAAKhkB,OAAOk6F,EAAoBlnF,KAAIoD,IAC1F,IAAIyiF,EAAuBuB,EAC3B,OAA8I,OAAtIvB,EAAoF,OAA3DuB,EAAyBxiF,EAAuBxB,SAAkB,EAASgkF,EAAuBhtF,QAAkByrF,EAAwB,CAAC,KAEhL,OAAOz8F,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBgJ,eAAgB,CACdxB,OAAQyjF,EACR9hF,yBACAK,gBAAiB4J,EACjBzJ,aAEF,EC3DSiiF,GAAiCA,CAAC5rF,EAAO1T,KACpD,MAAM4kF,EAAiB,CACrB1M,SAAUl4E,EAAMi8F,sBAChBlX,mBAAmB,GAErB,OAAO1jF,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBkxE,kBACA,ECkBG,MAAM2a,GAAuBA,CAAC3uE,EAAa5wB,KAChD,MAAMsT,EAASif,GAAsB3B,EAAa5wB,GAiDlD,OA5CAghE,GAAiC1tD,EAAQtT,G3E4CHsT,KACtC25C,GAAiC35C,EAAQ4e,GAAuB,kBAAmB4sC,GAA0B,E2E5C7G0gC,CAAyBlsF,GAKzBsjB,GAAuBiqC,GAA8BvtD,EAAQtT,GAC7D42B,GAAuB8sB,GAAyBpwC,EAAQtT,GACxD42B,GAAuB6jC,GAAsBnnD,EAAQtT,GACrD42B,GAAuB27B,GAAyBj/C,EAAQtT,GACxD42B,GAAuB+2B,GAAuBr6C,EAAQtT,GACtD42B,GAAuB4qC,GAAyBluD,EAAQtT,GACxD42B,GAAuBo7B,GAAiC1+C,EAAQtT,GAChE42B,GAAuBs2B,GAAwB55C,EAAQtT,GACvD42B,GAAuBstB,GAAyB5wC,EAAQtT,GACxD42B,GAAuBswB,GAA4B5zC,EAAQtT,GAC3D42B,GAAuBimE,GAA0BvpF,EAAQtT,GACzD42B,GAAuBid,GAA4BvgC,EAAQtT,GAC3D42B,GAAuBkoE,GAA8BxrF,EAAQtT,GAC7D42B,GAAuB0oE,GAAgChsF,EAAQtT,GAC/DwuD,GAA0Bl7C,EAAQtT,GxEbDy/F,EAACnsF,EAAQtT,KAC1C,MAAMksB,EAAS6K,GAAczjB,EAAQ,oBAC/BosF,EAA6BprE,GAAY,WACzCt0B,EAAMm5B,cACR7E,KAASliB,UAEb,EACMutF,EAAwB77F,EAAAA,SAAc,IACnC48D,GAA2B1gE,EAAM+gE,kBAAmB7nC,GAA8B5lB,EAAOzB,QAAQ6B,SACvG,CAACJ,EAAQtT,EAAM+gE,oBACZ6+B,EAAiB97F,EAAAA,OAAa,MACpCwP,EAAOzB,QAAQghB,qBAAqB,CAClCE,QAAS,eACTS,UAAWmsE,EACXjsE,aAAc1zB,EAAM6/F,0BACpBxsE,cAAe6F,GACfvF,YAAa,uBAEf,MAAM,kBACJ2tC,EAAiB,4BACjBlhD,EAA2B,2BAC3B47E,EACAnjE,gBAAiBinE,GACf9/F,EACE+/F,GAA4B3/E,GAA+BkhD,EAC3Dhf,EAAcmL,GAAmBn6C,EAAQtT,GACzCggG,EAA+Bl8F,EAAAA,aAAkBiV,IACrD,IAAIknF,EACJ,IAAIC,EAAQnnF,EACZ,MAAMonF,EAA8D,OAAnDF,EAAwBL,EAAe/tF,SAAmBouF,EAAwBlnF,EAC7FggE,EAAazlE,EAAOzB,QAAQuuF,cAAcrnF,GAChD,GAAIggE,EAAY,CACd,MAAMn9C,EAAgBxY,GAAiC9P,GACjD+sF,EAAazkE,EAAcxlB,WAAUsjB,GAASA,IAAUymE,IACxDG,EAAW1kE,EAAcxlB,WAAUsjB,GAASA,IAAUwmE,IAC5D,GAAIG,IAAeC,EACjB,OAGAJ,EADEG,EAAaC,EACP1kE,EAAc0kE,EAAW,GAEzB1kE,EAAc0kE,EAAW,EAErC,CACAV,EAAe/tF,QAAUkH,EACzBzF,EAAOzB,QAAQ0uF,eAAe,CAC5BJ,UACAD,UACEnnB,EAAW,GACd,CAACzlE,IAKEktF,EAAuB18F,EAAAA,aAAkBwb,IAC7C,GAAItf,EAAM+xB,YAAcjE,GAAcsM,WAAap6B,EAAMshE,mBAAqB9uD,MAAMC,QAAQ6M,IAAUA,EAAMjN,OAAS,EACnH,MAAM,IAAIoC,MAAM,CAAC,gEAAiE,iGAAiG/B,KAAK,OAErKwmB,GAA8B5lB,EAAOzB,QAAQ6B,SAC7C4L,IACnB4M,EAAOR,MAAM,2BACbpY,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDylB,aAAcn5B,EAAMm5B,aAAe7Z,EAAQ,OAE7ChM,EAAOzB,QAAQiiB,cACjB,GACC,CAACxgB,EAAQ4Y,EAAQlsB,EAAMm5B,aAAcn5B,EAAM+xB,UAAW/xB,EAAMshE,oBACzD8+B,EAAgBt8F,EAAAA,aAAkBiV,GAAMmgB,GAA8B5lB,EAAOzB,QAAQ6B,OAAOq7B,SAASh2B,IAAK,CAACzF,IAC3GulB,EAAkB/0B,EAAAA,aAAkBiV,IACxC,GAAI+mF,IAAwBA,EAAoBxsF,EAAOzB,QAAQmqB,aAAajjB,IAC1E,OAAO,EAET,MAAMgf,EAAUzkB,EAAOzB,QAAQipD,WAAW/hD,GAC1C,MAAkD,YAAlC,MAAXgf,OAAkB,EAASA,EAAQluB,OAAoE,eAAlC,MAAXkuB,OAAkB,EAASA,EAAQluB,KAGvF,GACV,CAACyJ,EAAQwsF,IACNjtD,EAAkB/uC,EAAAA,aAAkB,IAAMw1B,GAAyBhmB,IAAS,CAACA,IAC7EmtF,EAAY38F,EAAAA,aAAkB,SAACiV,GAAkD,IAA9CggE,IAAU3mE,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,KAAAA,UAAA,GAASsuF,EAActuF,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,IAAAA,UAAA,GACxE,GAAKkB,EAAOzB,QAAQgnB,gBAAgB9f,GAIpC,GADA6mF,EAAe/tF,QAAUkH,EACrB2nF,EACFx0E,EAAOR,MAAM,6BAAD/qB,OAA8BoY,IAC1CzF,EAAOzB,QAAQ2uF,qBAAqBznB,EAAa,CAAChgE,GAAM,QACnD,CACLmT,EAAOR,MAAM,8BAAD/qB,OAA+BoY,IAC3C,MACM4nF,EADYznE,GAA8B5lB,EAAOzB,QAAQ6B,OAChC+H,QAAOgY,GAAMA,IAAO1a,IAC/CggE,GACF4nB,EAAatoF,KAAKU,IAEK4nF,EAAatuF,OAAS,GAAK0tF,IAElDzsF,EAAOzB,QAAQ2uF,qBAAqBG,EAExC,CACF,GAAG,CAACrtF,EAAQ4Y,EAAQ6zE,IACda,EAAa98F,EAAAA,aAAkB,SAAC+8F,GAAmD,IAA9C9nB,IAAU3mE,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,KAAAA,UAAA,GAASsuF,EAActuF,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,IAAAA,UAAA,GAC1E8Z,EAAOR,MAAM,sCACb,MAAMo1E,EAAgBD,EAAIplF,QAAO1C,GAAMzF,EAAOzB,QAAQgnB,gBAAgB9f,KACtE,IAAI4nF,EACJ,GAAID,EACFC,EAAe5nB,EAAa+nB,EAAgB,OACvC,CAEL,MAAMC,GAAkB1/F,EAAAA,EAAAA,GAAS,CAAC,EAAGo4B,GAA0BnmB,IAC/DwtF,EAAc11F,SAAQ2N,IAChBggE,EACFgoB,EAAgBhoF,GAAMA,SAEfgoF,EAAgBhoF,EACzB,IAEF4nF,EAAe7tF,OAAOshB,OAAO2sE,EAC/B,EACyBJ,EAAatuF,OAAS,GAAK0tF,IAElDzsF,EAAOzB,QAAQ2uF,qBAAqBG,EAExC,GAAG,CAACrtF,EAAQ4Y,EAAQ6zE,IACdQ,EAAiBz8F,EAAAA,aAAkB,SAAAG,GAGQ,IAHP,QACxCk8F,EAAO,MACPD,GACDj8F,EAAE80E,IAAU3mE,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,KAAAA,UAAA,GAASsuF,EAActuF,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,IAAAA,UAAA,GAClC,IAAKkB,EAAOzB,QAAQkqB,OAAOokE,KAAa7sF,EAAOzB,QAAQkqB,OAAOmkE,GAC5D,OAEFh0E,EAAOR,MAAM,gCAAD/qB,OAAiCw/F,EAAO,YAAAx/F,OAAWu/F,IAG/D,MAAMc,EAAiB59E,GAAiC9P,GAClD+sF,EAAaW,EAAe/0E,QAAQk0E,GACpCG,EAAWU,EAAe/0E,QAAQi0E,IACjC3gE,EAAO0hE,GAAOZ,EAAaC,EAAW,CAACA,EAAUD,GAAc,CAACA,EAAYC,GAC7EY,EAAyBF,EAAezlE,MAAMgE,EAAO0hE,EAAM,GACjE3tF,EAAOzB,QAAQ+uF,WAAWM,EAAwBnoB,EAAY2nB,EAChE,GAAG,CAACptF,EAAQ4Y,IAQNi1E,EAAsB,CAC1BP,aACAL,kBAEFz1E,GAAiBxX,EAXU,CACzBmtF,YACAD,uBACA3tD,kBACAutD,gBACAvnE,mBAM2C,UAC7C/N,GAAiBxX,EAAQ6tF,EAAqBnhG,EAAM+xB,YAAcjE,GAAcsM,SAAW,UAAY,UAKvG,MAAMgnE,EAA0Bt9F,EAAAA,aAAkB,KAChD,GAAI9D,EAAMo8F,4BACR,OAEF,MAAMiF,EAAmBnoE,GAA8B5lB,EAAOzB,QAAQ6B,OAChE8lB,EAAa1b,GAAuBxK,GAGpCytF,GAAkB1/F,EAAAA,EAAAA,GAAS,CAAC,EAAGo4B,GAA0BnmB,IAC/D,IAAIojD,GAAa,EACjB2qC,EAAiBj2F,SAAQ2N,IAClBygB,EAAWzgB,YACPgoF,EAAgBhoF,GACvB29C,GAAa,EACf,IAEEA,GACFpjD,EAAOzB,QAAQ2uF,qBAAqB1tF,OAAOshB,OAAO2sE,GACpD,GACC,CAACztF,EAAQtT,EAAMo8F,8BACZkF,EAA2Bx9F,EAAAA,aAAkB,CAACiV,EAAI4V,KACtD,MAAM4yE,EAAa5yE,EAAM4I,SAAW5I,EAAM2I,QAOpCkqE,GAA+BlgC,IAAsBigC,I/EtMhC5yE,MAAWA,EAAMtjB,I+EsM8B8tC,CAAgBxqB,GACpF+xE,GAAkBX,GAA4ByB,EAC9CzoB,EAAazlE,EAAOzB,QAAQuuF,cAAcrnF,GAC5C2nF,EACFptF,EAAOzB,QAAQ4uF,UAAU1nF,IAAKyoF,IAA+BzoB,GAAmB,GAEhFzlE,EAAOzB,QAAQ4uF,UAAU1nF,GAAKggE,GAAY,EAC5C,GACC,CAACzlE,EAAQysF,EAA0Bz+B,IAChCmgC,EAAiB39F,EAAAA,aAAkB,CAACsU,EAAQuW,KAChD,IAAI+yE,EACJ,GAAI1F,EACF,OAEF,MAAM3gF,EAAqE,OAA5DqmF,EAAW/yE,EAAM0C,OAAOmuC,QAAQ,IAAD7+D,OAAKkL,EAAYY,aAAmB,EAASi1F,EAASj2C,aAAa,cACjH,GAAIpwC,IAAUizB,GAAgCjzB,OAI1CA,IAAUuyC,GAAd,CAIA,GAAIvyC,EAAO,CACT,MAAMK,EAASpI,EAAOzB,QAAQyrB,UAAUjiB,GACxC,IAAe,MAAVK,OAAiB,EAASA,EAAO7R,QAAU80C,GAC9C,MAEJ,CAEqB,cADLrrC,EAAOzB,QAAQipD,WAAW1iD,EAAOW,IACrClP,OAGR8kB,EAAMgjC,WAAaouC,GAA4Bz+B,GACjD0+B,EAA6B5nF,EAAOW,IAEpCuoF,EAAyBlpF,EAAOW,GAAI4V,GAdtC,CAeA,GACC,CAACqtE,EAA4B+D,EAA0Bz+B,EAAmBhuD,EAAQ0sF,EAA8BsB,IAC7GK,EAA0B79F,EAAAA,aAAkB,CAACsU,EAAQuW,KAEvD,IAAI6jB,EADFutD,GAA4BpxE,EAAMgjC,WAEc,OAAjDnf,EAAuBjrB,OAAOsqB,iBAA2BW,EAAqBV,kBACjF,GACC,CAACiuD,IACE6B,EAAmC99F,EAAAA,aAAkB,CAACsU,EAAQuW,KAC9DA,EAAMkzE,YAAYlwC,SACpBquC,EAA6B5nF,EAAOW,IAEpCzF,EAAOzB,QAAQ4uF,UAAUroF,EAAOW,GAAIX,EAAOvC,MAC7C,GACC,CAACvC,EAAQ0sF,IACN8B,EAAsCh+F,EAAAA,aAAkBsU,IAC5D,MACM2pF,EADoC/hG,EAAMk8B,8BAAgCl8B,EAAMs6B,WACzBkB,GAA6CloB,GAAU8P,GAAiC9P,GACrJA,EAAOzB,QAAQ+uF,WAAWmB,EAAkB3pF,EAAOvC,MAAM,GACxD,CAACvC,EAAQtT,EAAMk8B,6BAA8Bl8B,EAAMs6B,aAChDi3B,EAAoBztD,EAAAA,aAAkB,CAACsU,EAAQuW,KAEnD,GAAIrb,EAAOzB,QAAQyhD,YAAYl7C,EAAOW,GAAIX,EAAOiD,SAAWy8B,GAAc2Z,MAMrE9iC,EAAMuhC,cAAcpU,SAASntB,EAAM0C,QAAxC,CAGA,GAAImG,GAAgB7I,EAAMtjB,MAAQsjB,EAAMgjC,SAAU,CAEhD,MAAMqwC,EAAY98E,GAAsB5R,GACxC,GAAI0uF,GAAaA,EAAUjpF,KAAOX,EAAOW,GAAI,CAC3C4V,EAAMyvB,iBACN,MAAM6jD,EAAoB3uF,EAAOzB,QAAQuuF,cAAc4B,EAAUjpF,IACjE,IAAKgnF,EAEH,YADAzsF,EAAOzB,QAAQ4uF,UAAUuB,EAAUjpF,IAAKkpF,GAAmB,GAG7D,MAAMC,EAAc5uF,EAAOzB,QAAQgrD,iCAAiCmlC,EAAUjpF,IACxEopF,EAAmB7uF,EAAOzB,QAAQgrD,iCAAiCzkD,EAAOW,IAChF,IAAIwmB,EACA0hE,EACAiB,EAAcC,EACZF,GAEF1iE,EAAQ4iE,EACRlB,EAAMiB,EAAc,IAGpB3iE,EAAQ4iE,EACRlB,EAAMiB,GAIJD,GAEF1iE,EAAQ2iE,EAAc,EACtBjB,EAAMkB,IAGN5iE,EAAQ2iE,EACRjB,EAAMkB,GAGV,MAAMjB,EAAyB5+C,EAAY/kC,KAAKge,MAAMgE,EAAO0hE,EAAM,GAAGhpF,KAAIvK,GAAOA,EAAIqL,KAErF,YADAzF,EAAOzB,QAAQ+uF,WAAWM,GAAyBe,EAErD,CACF,CACA,GAAkB,MAAdtzE,EAAMtjB,KAAesjB,EAAMgjC,SAG7B,OAFAhjC,EAAMyvB,sBACNkjD,EAAyBlpF,EAAOW,GAAI4V,GAGpB,MAAdA,EAAMtjB,MAAgBsjB,EAAM2I,SAAW3I,EAAM4I,WAC/C5I,EAAMyvB,iBACNwiD,EAAWttF,EAAOzB,QAAQ+qD,gBAAgB,GAjD5C,CAkDA,GACC,CAACtpD,EAAQguF,EAA0BV,EAAYt+C,EAAY/kC,KAAMwiF,IACpE9xE,GAAuB3a,EAAQ,gBAAiBosF,EAA2B0B,IAC3EnzE,GAAuB3a,EAAQ,WAAYosF,EAA2B+B,IACtExzE,GAAuB3a,EAAQ,6BAA8BosF,EAA2BkC,IACxF3zE,GAAuB3a,EAAQ,gCAAiCwuF,GAChE7zE,GAAuB3a,EAAQ,gBAAiBosF,EAA2BiC,IAC3E1zE,GAAuB3a,EAAQ,cAAeosF,EAA2BnuC,IAKzEztD,EAAAA,WAAgB,UACgBqC,IAA1Bw5F,GACFrsF,EAAOzB,QAAQ2uF,qBAAqBb,EACtC,GACC,CAACrsF,EAAQqsF,EAAuB3/F,EAAMm5B,eACzCr1B,EAAAA,WAAgB,KACT9D,EAAMm5B,cACT7lB,EAAOzB,QAAQ2uF,qBAAqB,GACtC,GACC,CAACltF,EAAQtT,EAAMm5B,eAClB,MAAMipE,EAA6C,MAAzBzC,EAC1B77F,EAAAA,WAAgB,KACd,GAAIs+F,IAAsBpiG,EAAMm5B,aAC9B,OAIF,MAAMkoE,EAAmBnoE,GAA8B5lB,EAAOzB,QAAQ6B,OACtE,GAAImlB,EAAiB,CACnB,MAAM8nE,EAAeU,EAAiB5lF,QAAO1C,GAAM8f,EAAgB9f,KAC/D4nF,EAAatuF,OAASgvF,EAAiBhvF,QACzCiB,EAAOzB,QAAQ2uF,qBAAqBG,EAExC,IACC,CAACrtF,EAAQulB,EAAiBupE,EAAmBpiG,EAAMm5B,eACtDr1B,EAAAA,WAAgB,KACd,IAAK9D,EAAMm5B,cAAgBipE,EACzB,OAEF,MAAMf,EAAmBnoE,GAA8B5lB,EAAOzB,QAAQ6B,QACjEqsF,GAA4BsB,EAAiBhvF,OAAS,GAEzDiB,EAAOzB,QAAQ2uF,qBAAqB,GACtC,GACC,CAACltF,EAAQysF,EAA0Bz+B,EAAmB8gC,EAAmBpiG,EAAMm5B,cAAc,EwE9UhGsmE,CAAoBnsF,EAAQtT,GnGvBvB,SAAwBsT,EAAQtT,GACrC,IAAIqiG,EAAsBC,EAC1B,MAAMp2E,EAAS6K,GAAczjB,EAAQ,kBAC/BitC,EAAc6C,GACdm/C,EAAsBz+F,EAAAA,OAAa9D,EAAM6a,SACzC2nF,EAA0B1+F,EAAAA,OAAay8C,GAC7CjtC,EAAOzB,QAAQghB,qBAAqB,CAClCE,QAAS,iBACTS,UAAWxzB,EAAMub,sBACjBmY,aAAc1zB,EAAMyiG,8BACpBpvE,cAAe/X,GACfqY,YAAa,gCAEf,MAAM+uE,EAAsB5+F,EAAAA,aAAkBiX,IAC5CmR,EAAOR,MAAM,2BACbpY,EAAOzB,QAAQqC,SAAS8tC,GAAkBjnC,IAC1CzH,EAAOzB,QAAQiiB,cACfxgB,EAAOzB,QAAQ+f,aAAa,gBAAiB7W,EAAaC,cAAc,GACvE,CAACkR,EAAQ5Y,IAKNgqB,EAAYx5B,EAAAA,aAAkBuX,GAASJ,EAAyB3H,GAAQ+H,IAAQ,CAAC/H,IACjFysD,EAAgBj8D,EAAAA,aAAkB,IAAMqX,EAA8B7H,IAAS,CAACA,IAChFg8C,EAAoBxrD,EAAAA,aAAkB,IAAM0X,GAAqClI,IAAS,CAACA,IAC3Fg9C,EAAiBxsD,EAAAA,aAAkB,SAACuX,GAExC,OAFgEjJ,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,KAAAA,UAAA,GACmB+I,EAA8B7H,GAA7EkI,GAAqClI,IAC1D8C,WAAUgG,GAAOA,EAAIf,QAAUA,GAChD,GAAG,CAAC/H,IACEqvF,EAAoB7+F,EAAAA,aAAkBuX,IAC1C,MAAMkH,EAAQ+tC,EAAej1C,GAC7B,OAAOQ,GAA4BvI,GAAQiP,EAAM,GAChD,CAACjP,EAAQg9C,IACN/H,EAA2BzkD,EAAAA,aAAkBwb,IAC5BhE,GAAkChI,KAClCgM,IACnBhM,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDmH,QAAS2lC,GAAmB,CAC1BltC,SACAitC,cACAG,gBAAiB,GACjBC,kBAAcx6C,EACdoV,sBAAuB+D,EACvBshC,yBAAyB,QAG7BttC,EAAOzB,QAAQiiB,cACjB,GACC,CAACxgB,EAAQitC,IACNqiD,EAAgB9+F,EAAAA,aAAkB+W,IACtC,MAAME,EAAeylC,GAAmB,CACtCltC,SACAitC,cACAG,gBAAiB7lC,EACjB8lC,kBAAcx6C,EACdy6C,yBAAyB,IAE3B8hD,EAAoB3nF,EAAa,GAChC,CAACzH,EAAQovF,EAAqBniD,IAC3B8vC,EAAsBvsF,EAAAA,aAAkB,CAACuX,EAAOq/E,KACpD,IAAImI,EACJ,MAAMtnF,EAAwBD,GAAkChI,GAEhE,GAAIonF,KADiF,OAAzDmI,EAAwBtnF,EAAsBF,KAAkBwnF,GACtD,CACpC,MAAM3tC,GAAW7zD,EAAAA,EAAAA,GAAS,CAAC,EAAGka,EAAuB,CACnD,CAACF,GAAQq/E,IAEXpnF,EAAOzB,QAAQ02C,yBAAyB2M,EAC1C,IACC,CAAC5hD,IACEwvF,EAAyCh/F,EAAAA,aAAkBuX,GAC5CP,EAAyBxH,GAC1B8C,WAAUgG,GAAOA,IAAQf,KAC1C,CAAC/H,IACEyvF,EAAiBj/F,EAAAA,aAAkB,CAACuX,EAAO2nF,KAC/C,MAAM1+C,EAAaxpC,EAAyBxH,GACtC2vF,EAAmBH,EAAuCznF,GAChE,GAAI4nF,IAAqBD,EACvB,OAEF92E,EAAOR,MAAM,iBAAD/qB,OAAkB0a,EAAK,cAAA1a,OAAaqiG,IAChD,MAAME,EAAiB,IAAI5+C,GACrB6+C,EAAeD,EAAe7sF,OAAO4sF,EAAkB,GAAG,GAChEC,EAAe7sF,OAAO2sF,EAAqB,EAAGG,GAC9CT,GAAoBrhG,EAAAA,EAAAA,GAAS,CAAC,EAAGuZ,EAAyBtH,EAAOzB,QAAQ6B,OAAQ,CAC/EsH,cAAekoF,KAEjB,MAAM9qF,EAAS,CACbsD,OAAQpI,EAAOzB,QAAQyrB,UAAUjiB,GACjCqiD,YAAapqD,EAAOzB,QAAQixF,uCAAuCznF,GACnEwiD,SAAUolC,GAEZ3vF,EAAOzB,QAAQ+f,aAAa,oBAAqBxZ,EAAO,GACvD,CAAC9E,EAAQ4Y,EAAQw2E,EAAqBI,IACnCM,EAAiBt/F,EAAAA,aAAkB,CAACuX,EAAOpP,KAC/C,IAAI40C,EAAuBC,EAC3B50B,EAAOR,MAAM,mBAAD/qB,OAAoB0a,EAAK,cAAA1a,OAAasL,IAClD,MAAM8O,EAAeH,EAAyBtH,EAAOzB,QAAQ6B,OACvDgI,EAASX,EAAaG,OAAOG,GAC7BkkC,GAAYl+C,EAAAA,EAAAA,GAAS,CAAC,EAAGqa,EAAQ,CACrCzP,QACAo1C,gBAAgB,IAElBqhD,EAAoB3jD,IAAoB19C,EAAAA,EAAAA,GAAS,CAAC,EAAG0Z,EAAc,CACjEG,QAAQ7Z,EAAAA,EAAAA,GAAS,CAAC,EAAG0Z,EAAaG,OAAQ,CACxC,CAACG,GAAQkkC,MAEoJ,OAA5JsB,EAAyF,OAAhEC,EAAyBxtC,EAAOzB,QAAQoW,0BAA+B,EAAS64B,EAAuBiB,kBAAkB91C,OAAiB40C,EAAwB,IAChMvtC,EAAOzB,QAAQ+f,aAAa,oBAAqB,CAC/CuG,QAAS7kB,EAAOzB,QAAQwqB,uBAAuBhhB,GAC/CuhB,OAAQ2iB,EACRtzC,SACA,GACD,CAACqH,EAAQ4Y,EAAQw2E,IAadW,EAAmB,CACvBN,kBAEFj4E,GAAiBxX,EAfC,CAChBgqB,YACAyiC,gBACAzP,iBACAqyC,oBACArzC,oBACAwzC,yCACAF,gBACAr6C,2BACA8nC,sBACA+S,kBAKkC,UACpCt4E,GAAiBxX,EAAQ+vF,EAAkBrjG,EAAM+xB,YAAcjE,GAAcsM,SAAW,UAAY,UAKpG,MAAMkpE,EAA2Bx/F,EAAAA,aAAkB,CAACy/F,EAAWpuE,KAC7D,IAAIquE,EAAuBC,EAC3B,MAAMC,EAAuB,CAAC,EACxBC,EAAgCroF,GAAkChI,KAGvE6hB,EAAQyuE,uBAEsB,MAA/B5jG,EAAMub,uBAGNzI,OAAOkX,KAA6M,OAAvMw5E,EAAuE,OAA9CC,EAAuBzjG,EAAM2gD,eAAkF,OAAxD8iD,EAAuBA,EAAqB5oF,cAAmB,EAAS4oF,EAAqBloF,uBAAiCioF,EAAwB,CAAC,GAAGnxF,OAAS,GAEhQS,OAAOkX,KAAK25E,GAA+BtxF,OAAS,KAElDqxF,EAAqBnoF,sBAAwBooF,GAE/CD,EAAqB1oF,cAAgBF,EAAyBxH,GAC9D,MAAMuH,EAAUM,EAA8B7H,GACxCkuC,EAAa,CAAC,EAiBpB,OAhBA3mC,EAAQzP,SAAQwxB,IACd,GAAIA,EAAOykB,eAAgB,CACzB,MAAMwiD,EAAmB,CAAC,EAC1B/kD,GAA6B1zC,SAAQ04F,IACnC,IAAItlB,EAAgB5hD,EAAOknE,GACvBtlB,IAAkBl2C,MACpBk2C,GAAiB,GAEnBqlB,EAAiBC,GAAgBtlB,CAAa,IAEhDh9B,EAAW5kB,EAAOvhB,OAASwoF,CAC7B,KAEE/wF,OAAOkX,KAAKw3B,GAAYnvC,OAAS,IACnCqxF,EAAqBliD,WAAaA,IAE7BngD,EAAAA,EAAAA,GAAS,CAAC,EAAGkiG,EAAW,CAC7B1oF,QAAS6oF,GACT,GACD,CAACpwF,EAAQtT,EAAMub,sBAAsE,OAA9C8mF,EAAuBriG,EAAM2gD,mBAAwB,EAAS0hD,EAAqBxnF,UACvHkpF,EAA4BjgG,EAAAA,aAAkB,CAACsU,EAAQ+c,KAC3D,IAAI6uE,EACJ,MAAMC,EAA4F,OAA3DD,EAAwB7uE,EAAQ+uE,eAAerpF,cAAmB,EAASmpF,EAAsBzoF,sBAClIolC,EAAexrB,EAAQ+uE,eAAerpF,QAC5C,GAAqC,MAAjCopF,GAAyD,MAAhBtjD,EAC3C,OAAOvoC,EAET,MAAM2C,EAAeylC,GAAmB,CACtCltC,SACAitC,cACAG,gBAAiB,GACjBC,eACAplC,sBAAuB0oF,EACvBrjD,yBAAyB,IAM3B,OAJAttC,EAAOzB,QAAQqC,SAAS8tC,GAAkBjnC,IACtB,MAAhB4lC,GACFrtC,EAAOzB,QAAQ+f,aAAa,gBAAiB7W,EAAaC,eAErD5C,CAAM,GACZ,CAAC9E,EAAQitC,IACN4jD,EAA+BrgG,EAAAA,aAAkB,CAAC6iD,EAAc9wC,KACpE,GAAIA,IAAUstC,GAA0BtoC,QAAS,CAC/C,IAAIupF,EACJ,MAAMpK,EAAeh6F,EAAMqF,MAAM+xE,aACjC,OAAoB7vE,EAAAA,GAAAA,KAAKyyF,GAAc34F,EAAAA,EAAAA,GAAS,CAAC,EAA2C,OAAvC+iG,EAAmBpkG,EAAMsF,gBAAqB,EAAS8+F,EAAiBhtB,cAC/H,CACA,OAAOzwB,CAAY,GAClB,CAAC3mD,EAAMqF,MAAM+xE,aAAuD,OAAxCkrB,EAAoBtiG,EAAMsF,gBAAqB,EAASg9F,EAAkBlrB,eACnGitB,EAAqBvgG,EAAAA,aAAkBwgG,GACvCtkG,EAAMswF,sBACDgU,EAEF,IAAIA,EAAiB,0BAC3B,CAACtkG,EAAMswF,wBACVt8C,GAA6B1gC,EAAQ,aAAc+wF,GACnDrwD,GAA6B1gC,EAAQ,cAAegwF,GACpDtvD,GAA6B1gC,EAAQ,eAAgBywF,GACrD/vD,GAA6B1gC,EAAQ,kBAAmB6wF,GAKxD,MAAMI,EAAiBzgG,EAAAA,OAAa,MAOpCmqB,GAAuB3a,EAAQ,2BANFyuC,IACvBwiD,EAAe1yF,UAAYkwC,EAAkB91C,QAC/Cs4F,EAAe1yF,QAAUkwC,EAAkB91C,MAC3Cy2F,EAAoB3jD,GAAoBnkC,EAAyBtH,EAAOzB,QAAQ6B,OAAQquC,EAAkB91C,QAC5G,IAOF,MAAMu4F,EAAiB1gG,EAAAA,aAAkB,KACvCooB,EAAOP,KAAK,kEACZ,MAAM5Q,EAAeylC,GAAmB,CACtCltC,SACAitC,cACAG,gBAAiB,GACjBC,kBAAcx6C,EACdy6C,yBAAyB,IAE3B8hD,EAAoB3nF,EAAa,GAChC,CAACzH,EAAQ4Y,EAAQw2E,EAAqBniD,IACzCrM,GAA2B5gC,EAAQ,iBAAkBkxF,GAOrD,MAAMx5E,EAAgBlnB,EAAAA,QAAa,GACnCA,EAAAA,WAAgB,KACd,GAAIknB,EAAcnZ,QAEhB,YADAmZ,EAAcnZ,SAAU,GAI1B,GADAqa,EAAOP,KAAK,wCAADhrB,OAAyCX,EAAM6a,QAAQxI,SAC9DkwF,EAAoB1wF,UAAY7R,EAAM6a,SAAW2nF,EAAwB3wF,UAAY0uC,EACvF,OAEF,MAAMxlC,EAAeylC,GAAmB,CACtCltC,SACAitC,cACAI,kBAAcx6C,EAEdu6C,gBAAiB1gD,EAAM6a,QACvB+lC,yBAAyB,IAE3B2hD,EAAoB1wF,QAAU7R,EAAM6a,QACpC2nF,EAAwB3wF,QAAU0uC,EAClCmiD,EAAoB3nF,EAAa,GAChC,CAACmR,EAAQ5Y,EAAQovF,EAAqB1iG,EAAM6a,QAAS0lC,IACxDz8C,EAAAA,WAAgB,UACsBqC,IAAhCnG,EAAMub,uBACRjI,EAAOzB,QAAQ02C,yBAAyBvoD,EAAMub,sBAChD,GACC,CAACjI,EAAQ4Y,EAAQlsB,EAAMub,uBAC5B,CmG5PEkpF,CAAenxF,EAAQtT,GACvB06D,GAAYpnD,EAAQtT,GACpB6/D,GAAiBvsD,EAAQtT,GCnDUsT,KACnC,MAAM4H,EAASpX,EAAAA,OAAa,CAAC,GACvB4gG,EAAqB5gG,EAAAA,aAAkB,CAAC41B,EAAO80D,EAAahsC,KAChE,MAAMu7B,EAAQ7iE,EAAOrJ,QAChBksE,EAAMrkD,KACTqkD,EAAMrkD,GAAS,CAAC,GAElBqkD,EAAMrkD,GAAO80D,GAAehsC,CAAe,GAC1C,IACGmiD,EAAqB7gG,EAAAA,aAAkB,CAAC41B,EAAO80D,KACnD,IAAIoW,EACJ,OAA0D,OAAlDA,EAAwB1pF,EAAOrJ,QAAQ6nB,SAAkB,EAASkrE,EAAsBpW,EAAY,GAC3G,IAGGqW,EAAuB/gG,EAAAA,aAAkBsU,IAC7C,MAAM,YACJo2E,EAAW,MACX90D,EAAK,oBACLorE,EAAmB,mBACnBC,EAAkB,QAClBlqF,GACEzC,EACE4sF,EAAgBnqF,EAAQxI,OACxBqJ,EAASb,EAAQ2zE,GACjB9f,EAAoC,oBAAnBhzD,EAAOgzD,QAAyBhzD,EAAOgzD,QAAQp7D,EAAOzB,QAAQ4rB,cAAc/D,EAAOhe,EAAOL,QAAUK,EAAOgzD,QAClI,IAAKA,GAAuB,IAAZA,EAQd,OAPAg2B,EAAmBhrE,EAAO80D,EAAa,CACrC9rC,kBAAkB,EAClBk3B,UAAW,CACTlL,QAAS,EACTziE,MAAOyP,EAAOM,iBAGX,CACL0yD,QAAS,GAGb,IAAIziE,EAAQyP,EAAOM,cACnB,IAAK,IAAIsvC,EAAI,EAAGA,EAAIojB,EAASpjB,GAAK,EAAG,CACnC,MAAM25C,EAAkBzW,EAAcljC,EAElC25C,GAAmBH,GAAuBG,EAAkBF,IAE9D94F,GADmB4O,EAAQoqF,GACPjpF,cACpB0oF,EAAmBhrE,EAAO80D,EAAcljC,EAAG,CACzC5I,kBAAkB,EAClBwM,sBAAuBjmC,KAAKD,IAAIwlE,EAAc9f,EAASs2B,EAAgB,GACvEriD,qBAAsB6rC,KAG1BkW,EAAmBhrE,EAAO80D,EAAa,CACrC9rC,kBAAkB,EAClBk3B,UAAW,CACTlL,UACAziE,UAGN,CACA,MAAO,CACLyiE,UACD,GACA,CAACp7D,EAAQoxF,IAyBNQ,EAA2B,CAC/B5a,iBAvBuBxmF,EAAAA,aAAkBG,IAKrC,IALsC,MAC1Cy1B,EAAK,eACL4tD,EAAc,cACdC,EAAa,QACb1sE,GACD5W,EACC,IAAK,IAAIuR,EAAI8xE,EAAgB9xE,EAAI+xE,EAAe/xE,GAAK,EAAG,CACtD,MAAMokE,EAAYirB,EAAqB,CACrCrW,YAAah5E,EACbkkB,QACAorE,oBAAqBxd,EACrByd,mBAAoBxd,EACpB1sE,YAEE++D,EAAUlL,QAAU,IACtBl5D,GAAKokE,EAAUlL,QAAU,EAE7B,IACC,CAACm2B,KAOJ/5E,GAAiBxX,EANe,CAC9BmvC,4BAA6BkiD,GAKmB,UAClD75E,GAAiBxX,EAAQ4xF,EAA0B,WACnD,MAAMC,EAA4BrhG,EAAAA,aAAkB,KAElDoX,EAAOrJ,QAAU,CAAC,CAAC,GAClB,IACHoc,GAAuB3a,EAAQ,oBAAqB6xF,EAA0B,ED5C9EC,CAAsB9xF,GFUa+xF,EAAC/xF,EAAQtT,KAC5C,IAAIslG,EAIJ,MAAMC,EAAqBzhG,EAAAA,aAAkBuX,IAC3C,IAAImqF,EAEJ,OAAmE,OAA3DA,EADuB7oF,GAAuCrJ,GACd+H,IAAkBmqF,EAAyB,EAAE,GACpG,CAAClyF,IACEmyF,EAAqB3hG,EAAAA,aAAkB,IACjBgZ,GAA+BxJ,IAExD,CAACA,IAKJwX,GAAiBxX,EAJS,CACxBm9B,4BAA6B80D,EAC7Bl1D,4BAA6Bo1D,GAEa,UAC5C,MAAMC,EAA0B5hG,EAAAA,aAAkB,KAChD,IAAI6hG,EACJ,MAAM9oF,EAAyB0gF,GAAkF,OAAvDoI,EAAyB3lG,EAAMw9F,qBAA+BmI,EAAyB,IACjJryF,EAAOzB,QAAQqC,UAASR,IACtB,IAAIkyF,EAAuBC,EAAgBC,EAC3C,MAAM9qF,EAA8H,OAA7G4qF,EAA4D,OAAnCC,EAAiBnyF,EAAMmH,cAAmB,EAASgrF,EAAe7qF,eAAyB4qF,EAAwB,GAG7JxG,EAAgE,OAA/C0G,EAAuBpyF,EAAM0rF,eAAyB0G,EAAuB,CAAC,EAC/Fh/E,EAA8B42E,GAA+B1iF,EAAe6B,EAAwBuiF,GAC1G,OAAO/9F,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBgJ,gBAAgBrb,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMgJ,eAAgB,CACjDQ,gBAAiB4J,KAEnB,GACF,GACD,CAACxT,EAAQtT,EAAMw9F,sBACZuI,EAA4BjiG,EAAAA,aAAkB05F,IAClD,IAAIwI,EAAwBC,EAAuBC,EAAwBnlD,EAC3E,GAA+D,OAAxDilD,EAAyBhmG,EAAMigB,wBAAiC+lF,EAAuBtpF,eAC5F,OAGF,MAAM0iF,EAA4L,OAA3K6G,EAA0G,OAAjFC,GAA0BnlD,EAAkBztC,EAAOzB,SAASs0F,uBAA4B,EAASD,EAAuBh8E,KAAK62B,IAA4BklD,EAAwB,CAAC,EAC5N//D,EAAeprB,EAAyBxH,GACxC6rF,EAAsBxjF,GAAgCrI,GACtDqrF,EAAcD,GAAyC,MAAvBlB,EAA8BA,EAAsB,IACpF3gF,EAAyB0gF,GAAiD,MAAvBC,EAA8BA,EAAsB,IACvG12E,EAA8B42E,GAA+Bx3D,EAAcrpB,EAAwBuiF,GACnG/hF,EAA0C,IAA/B8hF,EAAoB9sF,OAAe,EAAI4W,KAAKhkB,OAAOk6F,EAAoBlnF,KAAIoD,IAC1F,IAAI+qF,EAAwBC,EAC5B,OAA+I,OAAvID,EAAqF,OAA3DC,EAAyBxpF,EAAuBxB,SAAkB,EAASgrF,EAAuBh0F,QAAkB+zF,EAAyB,CAAC,KAElL9yF,EAAOzB,QAAQqC,UAASR,IACfrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBgJ,eAAgB,CACdxB,OAAQyjF,EACR9hF,yBACAK,gBAAiB4J,EACjBzJ,eAGJ,GACD,CAAC/J,EAAiE,OAAxDgyF,EAAyBtlG,EAAMigB,2BAAgC,EAASqlF,EAAuB5oF,iBAC5GuR,GAAuB3a,EAAQ,oBAAqBoyF,GACpDz3E,GAAuB3a,EAAQ,iBAAiB,KAC9CyyF,EAA0B/lG,EAAMw9F,oBAAoB,IAEtDvvE,GAAuB3a,EAAQ,+BAA+B,KAC5DyyF,EAA0B/lG,EAAMw9F,oBAAoB,IAMtD15F,EAAAA,WAAgB,KACdiiG,EAA0B/lG,EAAMw9F,oBAAoB,GACnD,CAACuI,EAA2B/lG,EAAMw9F,qBAAqB,EErF1D6H,CAAsB/xF,EAAQtT,GAC9BwyD,GAAel/C,EAAQtT,GvF5BGsmG,EAAChzF,EAAQtT,KACnC,MAAMksB,EAAS6K,GAAczjB,EAAQ,gBAC/BizF,EAAkBziG,EAAAA,OAAa,MAC/B0iG,EAAsB1iG,EAAAA,aAAkB,CAAC2I,EAAMkiB,KAC/CliB,GAEE6G,EAAOzB,QAAQkqB,OAAOtvB,EAAKsM,KAC7BzF,EAAOzB,QAAQ+f,aAAa,eAAgBte,EAAOzB,QAAQ4rB,cAAchxB,EAAKsM,GAAItM,EAAK4O,OAAQsT,EAEnG,GACC,CAACrb,IACEi8C,EAAezrD,EAAAA,aAAkB,CAACiV,EAAIsC,KAC1C,MAAM03B,EAAc7tB,GAAsB5R,IACtB,MAAfy/B,OAAsB,EAASA,EAAYh6B,MAAQA,IAAsB,MAAfg6B,OAAsB,EAASA,EAAY13B,SAAWA,IAGrH/H,EAAOzB,QAAQqC,UAASR,IACtBwY,EAAOR,MAAM,4BAAD/qB,OAA6BoY,EAAE,eAAApY,OAAc0a,KAClDha,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB+R,SAAU,CACRhZ,KAAM,CACJsM,KACAsC,SAEFrO,aAAc,KACdsY,mBAAoB,KACpBC,kBAAmB,MAErBN,MAAO,CACLxY,KAAM,CACJsM,KACAsC,SAEFrO,aAAc,KACdsY,mBAAoB,KACpBC,kBAAmB,WAIzBjS,EAAOzB,QAAQiiB,cAGVxgB,EAAOzB,QAAQkqB,OAAOhjB,KAGvBg6B,GAGFyzD,EAAoBzzD,EAAa,CAAC,GAEpCz/B,EAAOzB,QAAQ+f,aAAa,cAAete,EAAOzB,QAAQ4rB,cAAc1kB,EAAIsC,KAAO,GAClF,CAAC/H,EAAQ4Y,EAAQs6E,IACd/2C,EAAuB3rD,EAAAA,aAAkB,SAACuX,GAAsB,IAAfsT,EAAKvc,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9D,MAAM3F,EAAOyY,GAAsB5R,GACnCkzF,EAAoB/5F,EAAMkiB,GAC1Brb,EAAOzB,QAAQqC,UAASR,IACtBwY,EAAOR,MAAM,2CAAD/qB,OAA4C0a,KACjDha,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB+R,SAAU,CACRzY,aAAc,CACZqO,SAEFiK,mBAAoB,KACpB7Y,KAAM,KACN8Y,kBAAmB,MAErBN,MAAO,CACLjY,aAAc,CACZqO,SAEFiK,mBAAoB,KACpB7Y,KAAM,KACN8Y,kBAAmB,WAIzBjS,EAAOzB,QAAQiiB,aACjB,GAAG,CAACxgB,EAAQ4Y,EAAQs6E,IACd72C,EAA6B7rD,EAAAA,aAAkB,SAACuX,GAAsB,IAAfsT,EAAKvc,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpE,MAAM3F,EAAOyY,GAAsB5R,GACnCkzF,EAAoB/5F,EAAMkiB,GAC1Brb,EAAOzB,QAAQqC,UAASR,IACtBwY,EAAOR,MAAM,kDAAD/qB,OAAmD0a,KACxDha,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB+R,SAAU,CACRzY,aAAc,KACdsY,mBAAoB,CAClBjK,SAEF5O,KAAM,KACN8Y,kBAAmB,MAErBN,MAAO,CACLjY,aAAc,KACdsY,mBAAoB,CAClBjK,SAEF5O,KAAM,KACN8Y,kBAAmB,WAIzBjS,EAAOzB,QAAQiiB,aACjB,GAAG,CAACxgB,EAAQ4Y,EAAQs6E,IACd32C,EAA4B/rD,EAAAA,aAAkB,SAACuX,EAAOqD,GAAsB,IAAfiQ,EAAKvc,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAM3F,EAAOyY,GAAsB5R,GAC/B7G,GACF6G,EAAOzB,QAAQ+f,aAAa,eAAgBte,EAAOzB,QAAQ4rB,cAAchxB,EAAKsM,GAAItM,EAAK4O,OAAQsT,GAEjGrb,EAAOzB,QAAQqC,UAASR,IACfrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB+R,SAAU,CACRF,kBAAmB,CACjBlK,QACAqD,SAEF1R,aAAc,KACdsY,mBAAoB,KACpB7Y,KAAM,MAERwY,MAAO,CACLM,kBAAmB,CACjBlK,QACAqD,SAEF1R,aAAc,KACdsY,mBAAoB,KACpB7Y,KAAM,UAIZ6G,EAAOzB,QAAQiiB,aACjB,GAAG,CAACxgB,IACEmzF,EAA4B3iG,EAAAA,aAAkB,IAAMuhB,GAA4C/R,IAAS,CAACA,IAC1GwiD,EAA0BhyD,EAAAA,aAAkB,CAACiV,EAAIsC,EAAO2iC,KAC5D,IAAI0oD,EAAqBpzF,EAAOzB,QAAQy+C,eAAej1C,GACvD,MAAMO,EAAiBJ,GAAqClI,GACtDqnD,EAAcpN,GAAej6C,EAAQ,CACzCgnB,WAAYt6B,EAAMs6B,WAClBkzB,eAAgBxtD,EAAMwtD,iBAElBruC,EAAaL,GAAuBxL,GAGpCo7C,EAAkB,GAAG/tD,OAAOwe,EAAW7b,KAAO,GAAIq3D,EAAYp9C,KAAM4B,EAAWxb,QAAU,IAC/F,IAAIgjG,EAAkBj4C,EAAgBt4C,WAAU1I,GAAOA,EAAIqL,KAAOA,IAChD,UAAdilC,EACF0oD,GAAsB,EACC,SAAd1oD,EACT0oD,GAAsB,EAEtBC,GAAmB,EAEjBD,GAAsB9qF,EAAevJ,QAEvCs0F,GAAmB,EACfA,EAAkBj4C,EAAgBr8C,SAEpCq0F,EAAqB,IAEdA,EAAqB,IAE9BC,GAAmB,EACfA,GAAmB,IAErBD,EAAqB9qF,EAAevJ,OAAS,IAGjDs0F,EAAkB59E,GAAM49E,EAAiB,EAAGj4C,EAAgBr8C,OAAS,GACrE,MAAMu0F,EAAal4C,EAAgBi4C,GACnC,IAAKC,EACH,OAEF,MAAMC,EAAcvzF,EAAOzB,QAAQ4wC,4BAA4BmkD,EAAW7tF,GAAI2tF,GAC1EG,GAAeA,EAAYnkD,mBACX,SAAd1E,GAAsC,UAAdA,EAC1B0oD,EAAqBG,EAAYlkD,qBACV,UAAd3E,IACT0oD,EAAqBG,EAAY33C,wBAGrCw3C,EAAqB39E,GAAM29E,EAAoB,EAAG9qF,EAAevJ,OAAS,GAC1E,MAAMy0F,EAAgBlrF,EAAe8qF,GACrCpzF,EAAOzB,QAAQ09C,aAAaq3C,EAAW7tF,GAAI+tF,EAAczrF,MAAM,GAC9D,CAAC/H,EAAQtT,EAAMs6B,WAAYt6B,EAAMwtD,iBAC9B+F,EAAwBzvD,EAAAA,aAAkBG,IAG1C,IAH2C,GAC/C8U,EAAE,MACFsC,GACDpX,EACCqP,EAAOzB,QAAQ09C,aAAax2C,EAAIsC,EAAM,GACrC,CAAC/H,IACEi+C,EAAoBztD,EAAAA,aAAkB,CAACsU,EAAQuW,KAEjC,UAAdA,EAAMtjB,KAAiC,QAAdsjB,EAAMtjB,KAA+B,UAAdsjB,EAAMtjB,KAAmBmsB,GAAgB7I,EAAMtjB,MAGnGiI,EAAOzB,QAAQ09C,aAAan3C,EAAOW,GAAIX,EAAOiD,MAAM,GACnD,CAAC/H,IACEyzF,EAA0BjjG,EAAAA,aAAkB,CAAAK,EAE/CwqB,KAAU,IAFsC,MACjDtT,GACDlX,EACKwqB,EAAM0C,SAAW1C,EAAMuhC,eAG3B58C,EAAOzB,QAAQ49C,qBAAqBp0C,EAAOsT,EAAM,GAChD,CAACrb,IACE0zF,EAA+BljG,EAAAA,aAAkB,CAAA3C,EAGpDwtB,KAAU,IAH2C,OACtDy1B,EAAM,MACN1lC,GACDvd,EACC,GAAIwtB,EAAM0C,SAAW1C,EAAMuhC,cACzB,OAEF,MAAMgB,EAAqB7rC,GAA4C/R,GAC5C,OAAvB49C,GAA+BA,EAAmBxyC,QAAUA,GAAS0lC,EAAOrV,SAASmiB,EAAmB71C,QAI5G/H,EAAOzB,QAAQg+C,0BAA0BzL,EAAO,GAAI1lC,EAAOiQ,EAAM,GAChE,CAACrb,IACE2zF,EAAanjG,EAAAA,aAAkB,CAACsP,EAAGub,KACvC,IAAIu4E,EACgD,OAA/CA,EAAuBv4E,EAAM+6D,gBAA0Bwd,EAAqBziG,UAAUsqC,SAASljC,EAAYmB,gBAGhHkf,EAAOR,MAAM,kBACbpY,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDuR,MAAO,CACLxY,KAAM,KACNO,aAAc,KACdsY,mBAAoB,KACpBC,kBAAmB,UAEpB,GACF,CAAC2G,EAAQ5Y,IACN6zF,EAAsBrjG,EAAAA,aAAkBsU,IAC5CmuF,EAAgB10F,QAAUuG,CAAM,GAC/B,IACGgvF,EAAsBtjG,EAAAA,aAAkB6qB,IAC5C,MAAM6T,EAAa+jE,EAAgB10F,QACnC00F,EAAgB10F,QAAU,KAC1B,MAAMkhC,EAAc7tB,GAAsB5R,GAK1C,IAJuBA,EAAOzB,QAAQqjB,6BAA6B,kBAAkB,EAAM,CACzFvG,QACAliB,KAAM+1B,IAGN,OAEF,IAAKuQ,EAIH,YAHIvQ,GACFlvB,EAAOzB,QAAQ09C,aAAa/sB,EAAWzpB,GAAIypB,EAAWnnB,QAI1D,IAAmB,MAAdmnB,OAAqB,EAASA,EAAWzpB,MAAQg6B,EAAYh6B,KAAqB,MAAdypB,OAAqB,EAASA,EAAWnnB,SAAW03B,EAAY13B,MACvI,OAEF,MAAMgsF,EAAc/zF,EAAOzB,QAAQumB,eAAe2a,EAAYh6B,GAAIg6B,EAAY13B,OAC3D,MAAfgsF,GAAuBA,EAAYvrD,SAASntB,EAAM0C,UAGlDmR,EACFlvB,EAAOzB,QAAQ09C,aAAa/sB,EAAWzpB,GAAIypB,EAAWnnB,QAEtD/H,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDuR,MAAO,CACLxY,KAAM,KACNO,aAAc,KACdsY,mBAAoB,KACpBC,kBAAmB,UAGvBjS,EAAOzB,QAAQiiB,cAIf0yE,EAAoBzzD,EAAapkB,IACnC,GACC,CAACrb,EAAQkzF,IACNc,EAAuBxjG,EAAAA,aAAkBsU,IAC7C,GAAwB,SAApBA,EAAOo5C,SACT,OAEF,MAAM/kD,EAAOyY,GAAsB5R,IACtB,MAAR7G,OAAe,EAASA,EAAKsM,MAAQX,EAAOW,KAAe,MAARtM,OAAe,EAASA,EAAK4O,SAAWjD,EAAOiD,OACrG/H,EAAOzB,QAAQ09C,aAAan3C,EAAOW,GAAIX,EAAOiD,MAChD,GACC,CAAC/H,IACEi0F,EAAezjG,EAAAA,aAAkB,KACrC,MAAM2I,EAAOyY,GAAsB5R,GAG/B7G,IAAS6G,EAAOzB,QAAQkqB,OAAOtvB,EAAKsM,KACtCzF,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDuR,MAAO,CACLxY,KAAM,KACNO,aAAc,KACdsY,mBAAoB,KACpBC,kBAAmB,SAGzB,GACC,CAACjS,IACEk0F,GAA8BC,EAAAA,GAAAA,IAAiB,KACnD,MAAMC,EAAqBxiF,GAAsB5R,GACjD,IAAKo0F,EACH,OAEF,MAAM/sC,EAAcpN,GAAej6C,EAAQ,CACzCgnB,WAAYt6B,EAAMs6B,WAClBkzB,eAAgBxtD,EAAMwtD,iBAGxB,GAD2BmN,EAAYp9C,KAAK3G,MAAKlJ,GAAOA,EAAIqL,KAAO2uF,EAAmB3uF,KAEpF,OAEF,MAAM6C,EAAiBJ,GAAqClI,GAC5DA,EAAOzB,QAAQqC,UAASR,IACfrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB+R,SAAU,CACRhZ,KAAM,CACJsM,GAAI4hD,EAAYp9C,KAAK,GAAGxE,GACxBsC,MAAOO,EAAe,GAAGP,OAE3BkK,kBAAmB,KACnBvY,aAAc,KACdsY,mBAAoB,SAGxB,IAOEqiF,EAAkB,CACtB7xC,0BACAjG,4BACA42C,6BAEF37E,GAAiBxX,EAVA,CACfi8C,eACAE,uBACAE,8BAOiC,UACnC7kC,GAAiBxX,EAAQq0F,EAAiB,WAC1C7jG,EAAAA,WAAgB,KACd,MAAM8jD,GAAMI,EAAAA,GAAAA,GAAc10C,EAAOzB,QAAQgP,eAAehP,SAExD,OADA+1C,EAAInU,iBAAiB,UAAW2zD,GACzB,KACLx/C,EAAIjU,oBAAoB,UAAWyzD,EAAoB,CACxD,GACA,CAAC9zF,EAAQ8zF,IACZn5E,GAAuB3a,EAAQ,mBAAoB2zF,GACnDh5E,GAAuB3a,EAAQ,kBAAmBigD,GAClDtlC,GAAuB3a,EAAQ,gBAAiB6zF,GAChDl5E,GAAuB3a,EAAQ,cAAei+C,GAC9CtjC,GAAuB3a,EAAQ,iBAAkBg0F,GACjDr5E,GAAuB3a,EAAQ,oBAAqByzF,GACpD94E,GAAuB3a,EAAQ,yBAA0B0zF,GACzD/4E,GAAuB3a,EAAQ,UAAWi0F,GAC1Ct5E,GAAuB3a,EAAQ,wBAAyBk0F,EAA4B,EuF1UpFlB,CAAahzF,EAAQtT,GlF5CgB4nG,EAACt0F,EAAQtT,KAC9C,IAAIyjG,EACJ,MAAMv3E,EAAS6K,GAAczjB,EAAQ,2BAC/Bu0F,EAAc/jG,EAAAA,SACdgkG,EAAmBhkG,EAAAA,SAKnBk0E,EAAkBl0E,EAAAA,aAAkB,KACxCooB,EAAOR,MAAM,4BACb,MAAM2+C,EAAuBvY,GAAiCx+C,EAAOzB,QAAQ6B,OACzE22D,EAAqBE,kBACvBj3D,EAAOzB,QAAQ+f,aAAa,uBAAwB,CAClD24C,iBAAkBF,EAAqBE,mBAG3Cj3D,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDq+C,gBAAiB,CACfje,MAAM,OAGVxgC,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,EAAQ4Y,IAIN67E,EAAiBjkG,EAAAA,aAAkB,KACvCgkG,EAAiBj2F,QAAUyb,YAAW,IAAMG,aAAao6E,EAAYh2F,UAAU,EAAE,GAChF,IAIGm2F,EAAyBlkG,EAAAA,aAAkB,KAC/C+jG,EAAYh2F,QAAUyb,WAAW0qD,EAAiB,IAAI,GACrD,CAACA,IACE4Y,EAAkB9sF,EAAAA,aAAkB,CAACu5B,EAAUqtC,EAASx9B,KAC5DhhB,EAAOR,MAAM,6BACbq8E,IACAz0F,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDq+C,iBAAiB1wD,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMq+C,gBAAiB,CACnDje,MAAM,EACNy2B,iBAAkBltC,EAClBqtC,UACAx9B,gBAGJ55B,EAAOzB,QAAQ+f,aAAa,sBAAuB,CACjD24C,iBAAkBltC,IAEpB/pB,EAAOzB,QAAQiiB,aAAa,GAC3B,CAAC5H,EAAQ67E,EAAgBz0F,IAC5BwX,GAAiBxX,EAAQ,CACvBs9E,kBACA5Y,gBAAiBgwB,GAChB,UAKH,MAAM1E,EAA2Bx/F,EAAAA,aAAkB,CAACy/F,EAAWpuE,KAC7D,IAAI0uB,EACJ,MAAMokD,EAA0Bn2C,GAAiCx+C,EAAOzB,QAAQ6B,OAQhF,OALCyhB,EAAQyuE,uBAEgG,OAAzD,OAA9C//C,EAAuB7jD,EAAM2gD,mBAAwB,EAASkD,EAAqBkO,kBAErFk2C,EAAwBn0D,MAIjBzyC,EAAAA,EAAAA,GAAS,CAAC,EAAGkiG,EAAW,CAC7BxxC,gBAAiBk2C,IAHV1E,CAIP,GACD,CAACjwF,EAAuD,OAA9CmwF,EAAuBzjG,EAAM2gD,mBAAwB,EAAS8iD,EAAqB1xC,kBAC1FgyC,EAA4BjgG,EAAAA,aAAkB,CAACsU,EAAQ+c,KAC3D,MAAM48B,EAAkB58B,EAAQ+uE,eAAenyC,gBAM/C,OALuB,MAAnBA,GACFz+C,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDq+C,sBAGG35C,CAAM,GACZ,CAAC9E,IACJ0gC,GAA6B1gC,EAAQ,cAAegwF,GACpDtvD,GAA6B1gC,EAAQ,eAAgBywF,GAKrDjgG,EAAAA,WAAgB,IACP,KACL2pB,aAAao6E,EAAYh2F,SACzB4b,aAAaq6E,EAAiBj2F,QAAQ,GAEvC,GAAG,EkFpDN+1F,CAAwBt0F,EAAQtT,GzFbLkoG,EAAC50F,EAAQtT,KACpC,IAAIyjG,EAAsBnB,EAC1B,MAAMp2E,EAAS6K,GAAczjB,EAAQ,iBACrCA,EAAOzB,QAAQghB,qBAAqB,CAClCE,QAAS,SACTS,UAAWxzB,EAAM6iB,YACjB6Q,aAAc1zB,EAAMmoG,oBACpB90E,cAAe1Q,GACfgR,YAAa,sBAEf,MAAMy0E,EAAqBtkG,EAAAA,aAAkB,KAC3CwP,EAAOzB,QAAQqC,UAASR,IACtB,MAAMmP,EAAcF,GAAwBjP,EAAOJ,EAAOzB,QAAQyH,YAC5D+uF,EAA4C,WAArBroG,EAAMk8F,WAA0Bj3D,GAA6BpiB,EAAavP,EAAQtT,EAAMklC,aAAe,KAC9HojE,EAAkBh1F,EAAOzB,QAAQmkB,uBAAuB,YAAa,CACzEqyE,uBACAxlF,YAA4B,MAAfA,EAAsBA,EAAc8f,OAE7CtuB,GAAWhT,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnC+H,QAAQpa,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAM+H,OAAQ6sF,KAE/BC,EAAyBl7C,GAA0B/5C,EAAQe,GACjE,OAAOhT,EAAAA,EAAAA,GAAS,CAAC,EAAGgT,EAAU,CAC5B8O,kBAAmBolF,GACnB,IAEJj1F,EAAOzB,QAAQ+f,aAAa,kBAAkB,GAC7C,CAACte,EAAQtT,EAAMk8F,WAAYl8F,EAAMklC,cAC9BsjE,EAAoB1kG,EAAAA,aAAkB,CAACwgG,EAAiB1nE,IAC9C,MAAVA,IAAwC,IAAtBA,EAAOvgB,YAAwBrc,EAAMskF,oBAClDggB,EAEF,IAAIA,EAAiB,yBAC3B,CAACtkG,EAAMskF,sBAKJmkB,EAAe3kG,EAAAA,aAAkB,KACrCskG,IACA90F,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,EAAQ80F,IACNzyB,EAAmB7xE,EAAAA,aAAkBugB,IACzC,MAAMxB,EAAcF,GAAwBrP,GACtC8Q,EAAQ,IAAIvB,EAAYuB,OACxBskF,EAAYtkF,EAAMhO,WAAU2O,GAAcA,EAAWhM,KAAOsL,EAAKtL,MACpD,IAAf2vF,EACFtkF,EAAM/L,KAAKgM,GAEXD,EAAMskF,GAAarkF,EAErB/Q,EAAOzB,QAAQilE,gBAAez1E,EAAAA,EAAAA,GAAS,CAAC,EAAGwhB,EAAa,CACtDuB,UACE,mBAAmB,GACtB,CAAC9Q,IACEojE,EAAoB5yE,EAAAA,aAAkBsgB,IAC1C,MAAMvB,EAAcF,GAAwBrP,GACtCq1F,EAAgB,IAAI9lF,EAAYuB,OACtCA,EAAMhZ,SAAQiZ,IACZ,MAAMqkF,EAAYtkF,EAAMhO,WAAU2O,GAAcA,EAAWhM,KAAOsL,EAAKtL,MACpD,IAAf2vF,EACFC,EAActwF,KAAKgM,GAEnBskF,EAAcD,GAAarkF,CAC7B,IAEF/Q,EAAOzB,QAAQilE,gBAAez1E,EAAAA,EAAAA,GAAS,CAAC,EAAGwhB,EAAa,CACtDuB,UACE,oBAAoB,GACvB,CAAC9Q,IACE+iE,EAAmBvyE,EAAAA,aAAkB8kG,IACzC,MAAM/lF,EAAcF,GAAwBrP,GACtC8Q,EAAQvB,EAAYuB,MAAM3I,QAAO4I,GAAQA,EAAKtL,KAAO6vF,EAAa7vF,KACpEqL,EAAM/R,SAAWwQ,EAAYuB,MAAM/R,QAGvCiB,EAAOzB,QAAQilE,gBAAez1E,EAAAA,EAAAA,GAAS,CAAC,EAAGwhB,EAAa,CACtDuB,UACE,mBAAmB,GACtB,CAAC9Q,IACEi+E,EAAkBztF,EAAAA,aAAkB,CAAC+kG,EAAmBn+B,EAASx9B,KAErE,GADAhhB,EAAOR,MAAM,2BACTm9E,EAAmB,CACrB,MAAMhmF,EAAcF,GAAwBrP,GACtCw1F,EAAuBjmF,EAAYuB,MAAM3I,QAAO4I,IACpD,IAAIC,EACJ,QAAmBne,IAAfke,EAAKxO,MAGP,OAAIrD,MAAMC,QAAQ4R,EAAKxO,QAAgC,IAAtBwO,EAAKxO,MAAMxD,OAK9C,MACMoS,EAAqE,OAAnDH,EADThR,EAAOzB,QAAQyrB,UAAUjZ,EAAKhJ,OACUmJ,sBAA2B,EAASF,EAAsB1N,MAAK8N,GAAYA,EAAS7O,QAAUwO,EAAKK,WAM1J,QAL8G,qBAAxD,MAAlBD,OAAyB,EAASA,EAAe8kB,uBAAgE,MAAlB9kB,OAAyB,EAASA,EAAe8kB,qBAQzK,IAEb,IAAIw/D,EACJ,MAAMC,EAAqBF,EAAqBlyF,MAAKyN,GAAQA,EAAKhJ,QAAUwtF,IACtEI,EAAe31F,EAAOzB,QAAQyrB,UAAUurE,GAE5CE,EADEC,EACeF,EACR9oG,EAAM2jC,gCACE,CAACP,GAAgB,CAChC/nB,MAAOwtF,EACPnkF,SAAUukF,EAAazkF,gBAAgB,GAAG3O,OACzCvC,IAEc,IAAIw1F,EAAsB1lE,GAAgB,CACzD/nB,MAAOwtF,EACPnkF,SAAUukF,EAAazkF,gBAAgB,GAAG3O,OACzCvC,IAELA,EAAOzB,QAAQilE,gBAAez1E,EAAAA,EAAAA,GAAS,CAAC,EAAGwhB,EAAa,CACtDuB,MAAO2kF,IAEX,CACAz1F,EAAOzB,QAAQ++E,gBAAgBztC,GAA0BqnB,QAASE,EAASx9B,EAAQ,GAClF,CAAC55B,EAAQ4Y,EAAQlsB,EAAM2jC,kCACpB2yC,EAAkBxyE,EAAAA,aAAkB,KACxCooB,EAAOR,MAAM,uBACbpY,EAAOzB,QAAQmmE,iBAAiB,GAC/B,CAAC1kE,EAAQ4Y,IACN2pD,EAAyB/xE,EAAAA,aAAkB8+B,IAC/C,MAAM/f,EAAcF,GAAwBrP,GACxCuP,EAAY+f,gBAAkBA,GAGlCtvB,EAAOzB,QAAQilE,gBAAez1E,EAAAA,EAAAA,GAAS,CAAC,EAAGwhB,EAAa,CACtD+f,kBACE,sBAAsB,GACzB,CAACtvB,IACE41F,EAAuBplG,EAAAA,aAAkBswB,IAC7C,MAAMvR,EAAcF,GAAwBrP,GACxC4V,GAAYrG,EAAYE,kBAAmBqR,IAG/C9gB,EAAOzB,QAAQilE,gBAAez1E,EAAAA,EAAAA,GAAS,CAAC,EAAGwhB,EAAa,CACtDE,kBAAmB,IAAIqR,KACtB,GACF,CAAC9gB,IASE61F,EAAY,CAChBtzB,yBACAuzB,sBAAuBX,EACvBpyB,mBACAV,mBACAe,oBACAI,eAdqBhzE,EAAAA,aAAkB,CAACwb,EAAO0T,KAC1BrQ,GAAwBrP,KACxBgM,IACnB4M,EAAOR,MAAM,wBACbpY,EAAOzB,QAAQ+hB,mBAAmB,SAAUoQ,GAA0B1kB,EAAOtf,EAAM2jC,gCAAiCrwB,GAAS0f,GAC7H1f,EAAOzB,QAAQu3F,wBACjB,GACC,CAAC91F,EAAQ4Y,EAAQlsB,EAAM2jC,kCAQxB4tD,kBACAjb,kBACA4yB,uBACA1kE,iBAAkBxkC,EAAMwkC,kBAE1B1Z,GAAiBxX,EAAQ61F,EAAW,UAKpC,MAAM7F,EAA2Bx/F,EAAAA,aAAkB,CAACy/F,EAAWpuE,KAC7D,IAAI0uB,EACJ,MAAMwlD,EAAsB1mF,GAAwBrP,GAUpD,OAPC6hB,EAAQyuE,uBAEY,MAArB5jG,EAAM6iB,aAE+J,OAArH,OAA9CghC,EAAuB7jD,EAAM2gD,eAAiF,OAAvDkD,EAAuBA,EAAqBpoC,aAAkB,EAASooC,EAAqBhhC,cAEpJqG,GAAYmgF,EAAqB1mE,MAEzB4gE,GAEFliG,EAAAA,EAAAA,GAAS,CAAC,EAAGkiG,EAAW,CAC7B9nF,OAAQ,CACNoH,YAAawmF,IAEf,GACD,CAAC/1F,EAAQtT,EAAM6iB,YAA4D,OAA9C4gF,EAAuBzjG,EAAM2gD,eAAiF,OAAvD8iD,EAAuBA,EAAqBhoF,aAAkB,EAASgoF,EAAqB5gF,cAC7KkhF,EAA4BjgG,EAAAA,aAAkB,CAACsU,EAAQ+c,KAC3D,IAAI6uE,EACJ,MAAMnhF,EAAyE,OAA1DmhF,EAAwB7uE,EAAQ+uE,eAAezoF,aAAkB,EAASuoF,EAAsBnhF,YACrH,OAAmB,MAAfA,EACKzK,GAET9E,EAAOzB,QAAQ+hB,mBAAmB,SAAUoQ,GAA0BnhB,EAAa7iB,EAAM2jC,gCAAiCrwB,GAAS,iBAC5HjS,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAQ,CAC1BkxF,UAAW,IAAIlxF,EAAOkxF,UAAWh2F,EAAOzB,QAAQu3F,yBAChD,GACD,CAAC91F,EAAQtT,EAAM2jC,kCACZwgE,EAA+BrgG,EAAAA,aAAkB,CAAC6iD,EAAc9wC,KACpE,GAAIA,IAAUstC,GAA0BqnB,QAAS,CAC/C,IAAI45B,EACJ,MAAMrK,EAAc/5F,EAAMqF,MAAMkkG,YAChC,OAAoBhiG,EAAAA,GAAAA,KAAKwyF,GAAa14F,EAAAA,EAAAA,GAAS,CAAC,EAA2C,OAAvC+iG,EAAmBpkG,EAAMsF,gBAAqB,EAAS8+F,EAAiBmF,aAC9H,CACA,OAAO5iD,CAAY,GAClB,CAAC3mD,EAAMqF,MAAMkkG,YAAsD,OAAxCjH,EAAoBtiG,EAAMsF,gBAAqB,EAASg9F,EAAkBiH,eAClG,SACJhkE,GACEvlC,EACEwpG,EAAa93F,EAAW47C,IACxBm8C,EAAsB3lG,EAAAA,aAAkBsU,IAC5C,GAAyB,WAArBpY,EAAMk8F,aAA4B9jF,EAAOiwF,qBAC3C,MAAO,CACLrlF,mBAAoB,CAAC,EACrBE,8BAA+B,CAAC,GAGpC,MAAMnF,EAAyBD,GAAuBxK,GAChD0P,EAAqB,CAAC,GACtB,qBACJqlF,GACEjwF,EACEsxF,EAAc,CAAC,EACf3kE,EAAS,CACbgC,mBAAoB,KACpBC,yBAA0B,MAEtBzpB,EAAOisF,EAAW33F,QAAQyB,EAAOzB,QAAQ6B,MAAM6J,KAAKQ,wBAC1D,IAAK,IAAIvI,EAAI,EAAGA,EAAI+H,EAAKlL,OAAQmD,GAAK,EAAG,CACvC,MAAM9H,EAAM6P,EAAK/H,GACXuD,EAAKwsB,EAAWA,EAAS73B,GAAOA,EAAIqL,GAC1CsvF,EAAqB36F,OAAKvH,EAAW4+B,GACrC,MAAM4kE,EAAeziE,GAAgB,CAACnC,EAAOgC,oBAAqB,CAAChC,EAAOiC,0BAA2B5uB,EAAOyK,YAAavP,EAAQo2F,GACjI1mF,EAAmBjK,GAAM4wF,CAC3B,CACA,MAAMl/D,EAAW,mCAKjB,OAJe1sB,EAAuB0sB,KAEpCznB,EAAmBynB,IAAY,GAE1B,CACLznB,qBACAE,8BAA+B,CAAC,EACjC,GACA,CAAC5P,EAAQtT,EAAMk8F,WAAY32D,EAAUikE,IACxCx1D,GAA6B1gC,EAAQ,aAAck1F,GACnDx0D,GAA6B1gC,EAAQ,cAAegwF,GACpDtvD,GAA6B1gC,EAAQ,eAAgBywF,GACrD/vD,GAA6B1gC,EAAQ,kBAAmB6wF,GACxDl3C,GAAiC35C,EAAQ4e,GAAuB,YAAau3E,GAC7Ex8C,GAAiC35C,EAAQ4e,GAAuB,4BAA6Bk7B,IAK7F,MAAMw8C,EAAsB9lG,EAAAA,aAAkB,KAC5CooB,EAAOR,MAAM,wDACb,MAAM7I,EAAcF,GAAwBrP,GACtCu2F,EAA0BvtF,GAAmChJ,GAC7Dy1F,EAAiBlmF,EAAYuB,MAAM3I,QAAO4I,GAAQA,EAAKhJ,OAASwuF,EAAwBxlF,EAAKhJ,SAC/F0tF,EAAe12F,OAASwQ,EAAYuB,MAAM/R,QAC5CiB,EAAOzB,QAAQilE,gBAAez1E,EAAAA,EAAAA,GAAS,CAAC,EAAGwhB,EAAa,CACtDuB,MAAO2kF,IAEX,GACC,CAACz1F,EAAQ4Y,IACNsyC,EAAgC16D,EAAAA,aAAkBotB,IACnC,cAAfA,GACF5d,EAAOzB,QAAQu3F,uBACjB,GACC,CAAC91F,IACEw2F,EAA+BhmG,EAAAA,aAAkB,KACrDwP,EAAOzB,QAAQqC,UAASR,IACfrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzByP,kBAAmBkqC,GAA0B/5C,EAAQI,OAGzDJ,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,IAIJ2a,GAAuB3a,EAAQ,UAAW80F,GAC1Cn6E,GAAuB3a,EAAQ,gBAAiBs2F,GAChD37E,GAAuB3a,EAAQ,gCAAiCkrD,GAChEvwC,GAAuB3a,EAAQ,qBAAsBw2F,GACrD77E,GAAuB3a,EAAQ,+BAA+B,KAC5D,MAAMuP,EAAcF,GAAwBrP,GACxCuP,EAAYE,mBAAqBF,EAAYsjB,iCAE/C7yB,EAAOzB,QAAQu3F,uBACjB,IAMFr1D,IAAe,KACbzgC,EAAOzB,QAAQu3F,uBAAuB,KAMxCpoF,EAAAA,EAAAA,IAAkB,UACU7a,IAAtBnG,EAAM6iB,aACRvP,EAAOzB,QAAQilE,eAAe92E,EAAM6iB,YACtC,GACC,CAACvP,EAAQ4Y,EAAQlsB,EAAM6iB,aAAa,EyF/SvCqlF,CAAc50F,EAAQtT,GtElCM+pG,EAACz2F,EAAQtT,KACrC,IAAIyjG,EACJ,MAAMv3E,EAAS6K,GAAczjB,EAAQ,kBACrCA,EAAOzB,QAAQghB,qBAAqB,CAClCE,QAAS,YACTS,UAAWxzB,EAAMmiB,UACjBuR,aAAc1zB,EAAMgqG,kBACpB32E,cAAenR,GACfyR,YAAa,oBAEf,MAAMs2E,EAAkBnmG,EAAAA,aAAkB,CAACuX,EAAOiH,KAChD,MAAMH,EAAYD,GAAsB5O,GAClC42F,EAAc/nF,EAAU/L,WAAU4C,GAAKA,EAAEqC,QAAUA,IACzD,IAAI8uF,EAAe,IAAIhoF,GAUvB,OATI+nF,GAAe,EACZ5nF,EAGH6nF,EAAa9zF,OAAO6zF,EAAa,EAAG5nF,GAFpC6nF,EAAa9zF,OAAO6zF,EAAa,GAKnCC,EAAe,IAAIhoF,EAAWG,GAEzB6nF,CAAY,GAClB,CAAC72F,IACE82F,EAAiBtmG,EAAAA,aAAkB,CAACsY,EAAKiuF,KAC7C,IAAIC,EACJ,MACMC,EADYroF,GAAsB5O,GACbsD,MAAKoC,GAAKA,EAAEqC,QAAUe,EAAIf,QACrD,GAAIkvF,EAAU,CACZ,IAAIC,EACJ,MAAMC,OAAiCtkG,IAAtBkkG,EAAkC/rE,GAAmE,OAAzCksE,EAAoBpuF,EAAImiB,cAAwBisE,EAAoBxqG,EAAMu+B,aAAcgsE,EAAS5rF,MAAQ0rF,EACtL,OAAmB,MAAZI,OAAmBtkG,GAAY9E,EAAAA,EAAAA,GAAS,CAAC,EAAGkpG,EAAU,CAC3D5rF,KAAM8rF,GAEV,CACA,MAAO,CACLpvF,MAAOe,EAAIf,MACXsD,UAA4BxY,IAAtBkkG,EAAkC/rE,GAAoE,OAA1CgsE,EAAqBluF,EAAImiB,cAAwB+rE,EAAqBtqG,EAAMu+B,cAAgB8rE,EAC/J,GACA,CAAC/2F,EAAQtT,EAAMu+B,eACZiqE,EAAoB1kG,EAAAA,aAAkB,CAACwgG,EAAiB1nE,IAC9C,MAAVA,IAAsC,IAApBA,EAAO4L,SACpB87D,GAEY1nE,EAAO2B,cAAgBv+B,EAAMu+B,cACjCuF,MAAKzf,KAAUA,IACvB,IAAIigF,EAAiB,sBAEvBA,GACN,CAACtkG,EAAMu+B,eAKJ6+B,EAAet5D,EAAAA,aAAkB,KACrCwP,EAAOzB,QAAQqC,UAASR,IACtB,GAA0B,WAAtB1T,EAAMm8F,YAER,OADAjwE,EAAOR,MAAM,kDACNrqB,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBgO,SAASrgB,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMgO,QAAS,CACnCG,WAAY4pB,GAAuBvtB,GAAoB5K,GAASq2B,IAAoB,OAI1F,MACM+gE,EzE5BiCC,EAACxoF,EAAW7O,KACvD,MAAMs3F,EAAiBzoF,EAAUlK,KAAIoM,GA9CjBwmF,EAACvoF,EAAUhP,KAC/B,MAAMoI,EAASpI,EAAOzB,QAAQyrB,UAAUhb,EAASjH,OACjD,OAAKK,EAWE,CACLovF,kBARwB/xF,IAAM,CAC9BA,KACAsC,MAAOK,EAAOL,MACd0c,QAASzkB,EAAOzB,QAAQipD,WAAW/hD,GACnClD,MAAOvC,EAAOzB,QAAQ8jD,aAAa58C,EAAI2C,EAAOL,OAC9C4W,IAAK3e,EAAOzB,UAIZwD,WAvBsC,SAadiN,EAAS3D,KAAQ,kBAAc,EAAIjD,EAAOotB,kBAAe12B,UAAQ,EAAGsJ,EAAOotB,gBAF5F,IAaR,EA8B4C+hE,CAAcxmF,EAAM/Q,KAASmI,QAAOpG,KAAgBA,IACjG,OAA8B,IAA1Bu1F,EAAev4F,OACV,KAEF04F,GAAWA,EAAQ9yF,KAAI2zB,IAAQ,CACpCA,OACAxzB,OAAQwyF,EAAe3yF,KAAIwb,GAAMA,EAAGq3E,kBAAkBl/D,EAAK7yB,UACzD4F,MAAK,CAAC3L,EAAGC,KAAM+3F,OA3BiBC,EA2BWj4F,EA3BLk4F,EA2BQj4F,EAAnB23F,EA1BRruF,QAAO,CAAC8F,EAAKgC,EAAM9B,KACxC,GAAY,IAARF,EAEF,OAAOA,EAET,MAAM8oF,EAAkBF,EAAK7yF,OAAOmK,GAC9B6oF,EAAkBF,EAAK9yF,OAAOmK,GAEpC,OADM8B,EAAKhP,WAAW81F,EAAgBt1F,MAAOu1F,EAAgBv1F,MAAOs1F,EAAiBC,EAC3E,GACT,GAVeJ,IAAkBC,EAAMC,CA2BU,IAAEjzF,KAAIvK,GAAOA,EAAIk+B,KAAK7yB,IAAG,EyEoBrD4xF,CADFzoF,GAAsBxO,EAAOJ,EAAOzB,QAAQyH,YACDhG,GACvDuO,EAAavO,EAAOzB,QAAQmkB,uBAAuB,UAAW,CAClE00E,gBAEF,OAAOrpG,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBgO,SAASrgB,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMgO,QAAS,CACnCG,gBAEF,IAEJvO,EAAOzB,QAAQ+f,aAAa,iBAC5Bte,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,EAAQ4Y,EAAQlsB,EAAMm8F,cACpBkP,EAAevnG,EAAAA,aAAkBwb,IAChB4C,GAAsB5O,KACtBgM,IACnB4M,EAAOR,MAAM,sBACbpY,EAAOzB,QAAQqC,SAASmqB,GAAwB/e,EAAOtf,EAAMo+B,gCAC7D9qB,EAAOzB,QAAQiiB,cACfxgB,EAAOzB,QAAQurD,eACjB,GACC,CAAC9pD,EAAQ4Y,EAAQlsB,EAAMo+B,gCACpB6yD,EAAantF,EAAAA,aAAkB,CAAC4X,EAAQsiC,EAAWstD,KACvD,IAAK5vF,EAAO8sB,SACV,OAEF,MAAMlmB,EAAW8nF,EAAe1uF,EAAQsiC,GACxC,IAAI77B,EAEFA,GADGmpF,GAAwBtrG,EAAMo+B,8BACpB9b,EAAgB,CAACA,GAAN,GAEZ2nF,EAAgBvuF,EAAOL,MAAOiH,GAE5ChP,EAAOzB,QAAQw5F,aAAalpF,EAAU,GACrC,CAAC7O,EAAQ22F,EAAiBG,EAAgBpqG,EAAMo+B,gCAC7CmtE,EAAeznG,EAAAA,aAAkB,IAAMoe,GAAsB5O,IAAS,CAACA,IACvEi5C,EAAgBzoD,EAAAA,aAAkB,IACnBge,GAA6BxO,GAC9B2E,KAAIvK,GAAOA,EAAI4R,SAChC,CAAChM,IACEk4F,EAAkB1nG,EAAAA,aAAkB,IAAM6d,GAAyBrO,IAAS,CAACA,IAC7Em4F,EAAuB3nG,EAAAA,aAAkBye,GAASjP,EAAOzB,QAAQ25F,kBAAkBjpF,IAAQ,CAACjP,IAUlGwX,GAAiBxX,EATD,CACdi4F,eACAh/C,gBACAi/C,kBACAC,uBACAJ,eACApa,aACA7zB,gBAEgC,UAKlC,MAAMkmC,EAA2Bx/F,EAAAA,aAAkB,CAACy/F,EAAWpuE,KAC7D,IAAI0uB,EACJ,MAAM6nD,EAAoBxpF,GAAsB5O,GAUhD,OAPC6hB,EAAQyuE,uBAEU,MAAnB5jG,EAAMmiB,WAE8J,OAApH,OAA9C0hC,EAAuB7jD,EAAM2gD,eAAkF,OAAxDkD,EAAuBA,EAAqBniC,cAAmB,EAASmiC,EAAqB1hC,YAEtJupF,EAAkBr5F,OAAS,GAIpBhR,EAAAA,EAAAA,GAAS,CAAC,EAAGkiG,EAAW,CAC7B7hF,QAAS,CACPS,UAAWupF,KAJNnI,CAMP,GACD,CAACjwF,EAAQtT,EAAMmiB,UAA0D,OAA9CshF,EAAuBzjG,EAAM2gD,eAAkF,OAAxD8iD,EAAuBA,EAAqB/hF,cAAmB,EAAS+hF,EAAqBthF,YAC5K4hF,EAA4BjgG,EAAAA,aAAkB,CAACsU,EAAQ+c,KAC3D,IAAI6uE,EACJ,MAAM7hF,EAAwE,OAA3D6hF,EAAwB7uE,EAAQ+uE,eAAexiF,cAAmB,EAASsiF,EAAsB7hF,UACpH,OAAiB,MAAbA,EACK/J,GAET9E,EAAOzB,QAAQqC,SAASmqB,GAAwBlc,EAAWniB,EAAMo+B,iCAC1D/8B,EAAAA,EAAAA,GAAS,CAAC,EAAG+W,EAAQ,CAC1BkxF,UAAW,IAAIlxF,EAAOkxF,UAAWh2F,EAAOzB,QAAQurD,gBAChD,GACD,CAAC9pD,EAAQtT,EAAMo+B,gCACZutE,EAAoB7nG,EAAAA,aAAkBsU,IAC1C,MAAMuL,EAAUzF,GAAoB5K,GAC9Bk3B,EAAgB7mB,EAAQgmB,IACxBiiE,EAAiBxzF,EAAOsyF,YAActyF,EAAOsyF,YAAYlgE,EAAc3lC,SAASoT,KAAIulD,GAAW75C,EAAQ65C,MAAa,IAAIhzB,EAAc3lC,UAI5I,OAH8B,MAA1B2lC,EAAcC,UAChBmhE,EAAevzF,KAAKmyB,EAAcC,UAE7BmhE,CAAc,GACpB,CAACt4F,IACJ0gC,GAA6B1gC,EAAQ,cAAegwF,GACpDtvD,GAA6B1gC,EAAQ,eAAgBywF,GACrD92C,GAAiC35C,EAAQ4e,GAAuB,UAAWy5E,GAK3E,MAAME,EAA0B/nG,EAAAA,aAAkB,CAAAK,EAE/CwqB,KAAU,IAFsC,OACjDiO,GACDz4B,EACC,MAAMmnG,EAAuB38E,EAAMgjC,UAAYhjC,EAAM4I,SAAW5I,EAAM2I,QACtE25D,EAAWr0D,OAAQz2B,EAAWmlG,EAAqB,GAClD,CAACra,IACEjhC,EAA4BlsD,EAAAA,aAAkB,CAAA3C,EAEjDwtB,KAAU,IAFwC,OACnDiO,GACDz7B,GAEK+1B,GAAWvI,EAAMtjB,MAASsjB,EAAM2I,SAAY3I,EAAM4I,SACpD05D,EAAWr0D,OAAQz2B,EAAWwoB,EAAMgjC,SACtC,GACC,CAACs/B,IACE2Y,EAAsB9lG,EAAAA,aAAkB,KAE5C,MAAMqe,EAAYD,GAAsB5O,GAClCw4F,EAAgB7wF,EAAyB3H,GAC/C,GAAI6O,EAAU9P,OAAS,EAAG,CACxB,MAAM6iD,EAAW/yC,EAAU1G,QAAO6G,GAAYwpF,EAAcxpF,EAASjH,SACjE65C,EAAS7iD,OAAS8P,EAAU9P,QAC9BiB,EAAOzB,QAAQw5F,aAAan2C,EAEhC,IACC,CAAC5hD,IACEkrD,EAAgC16D,EAAAA,aAAkBotB,IACnC,YAAfA,GACF5d,EAAOzB,QAAQurD,cACjB,GACC,CAAC9pD,IACJ0gC,GAA6B1gC,EAAQ,aAAck1F,GACnDv6E,GAAuB3a,EAAQ,oBAAqBu4F,GACpD59E,GAAuB3a,EAAQ,sBAAuB08C,GACtD/hC,GAAuB3a,EAAQ,UAAWA,EAAOzB,QAAQurD,cACzDnvC,GAAuB3a,EAAQ,gBAAiBs2F,GAChD37E,GAAuB3a,EAAQ,gCAAiCkrD,GAKhEzqB,IAAe,KACbzgC,EAAOzB,QAAQurD,cAAc,KAM/Bp8C,EAAAA,EAAAA,IAAkB,UACQ7a,IAApBnG,EAAMmiB,WACR7O,EAAOzB,QAAQw5F,aAAarrG,EAAMmiB,UACpC,GACC,CAAC7O,EAAQtT,EAAMmiB,WAAW,EsE1L7B4nF,CAAez2F,EAAQtT,GlG9CK+rG,EAACz4F,EAAQtT,KACrC,MAAMksB,EAAS6K,GAAczjB,EAAQ,cAC/B04F,EAAaloG,EAAAA,aAAkBmoG,IACnC//E,EAAOR,MAAM,uBAAD/qB,OAAwBsrG,IACpC34F,EAAOzB,QAAQqC,UAASR,IACtB,MAAMw4F,EAAsB3xF,EAAoB7G,GAC1Cy4F,EAAkB,CACtBt2F,MAAOo2F,EACPtxF,OAAQmpC,GAAgBmoD,IAE1B,OAAI/iF,GAAYgjF,EAAqBC,GAC5Bz4F,GAEFrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzB8G,QAAS2xF,GACT,IAEJ74F,EAAOzB,QAAQiiB,aAAa,GAC3B,CAAC5H,EAAQ5Y,IACZxP,EAAAA,WAAgB,KACdwP,EAAOzB,QAAQm6F,WAAWhsG,EAAMwa,QAAQ,GACvC,CAAClH,EAAQtT,EAAMwa,UAIlBsQ,GAAiBxX,EAHE,CACjB04F,cAEmC,SAAS,EkGsB9CD,CAAez4F,EAAQtT,G5FvBQosG,EAAC94F,EAAQtT,KACxC,IAAIyjG,EACJ,MAAMv3E,EAAS6K,GAAczjB,EAAQ,qBAC/BsnB,EAA0B7mB,EAAgBT,EAAQyQ,IAClD4C,EAAgB5S,EAAgBT,EAAQoH,GACxCwxB,EAAYjjB,KAAKkjB,MAAMnsC,EAAMksC,UAAYvlB,GAC/CrT,EAAOzB,QAAQghB,qBAAqB,CAClCE,QAAS,aACTS,UAAWxzB,EAAMw6B,gBACjB9G,aAAc1zB,EAAMqsG,wBACpBh5E,cAAekH,GACf5G,YAAa,0BAMf,MAAMk8C,EAAU/rE,EAAAA,aAAkBm2B,IAChC,MAAM0gE,EAAepgE,GAA4BjnB,GAC7C2mB,IAAS0gE,EAAa1gE,OAG1B/N,EAAOR,MAAM,mBAAD/qB,OAAoBs5B,IAChC3mB,EAAOzB,QAAQy6F,mBAAmB,CAChCryE,OACAJ,SAAU8gE,EAAa9gE,WACvB,GACD,CAACvmB,EAAQ4Y,IACNyjD,EAAc7rE,EAAAA,aAAkB+1B,IACpC,MAAM8gE,EAAepgE,GAA4BjnB,GAC7CumB,IAAa8gE,EAAa9gE,WAG9B3N,EAAOR,MAAM,wBAAD/qB,OAAyBk5B,IACrCvmB,EAAOzB,QAAQy6F,mBAAmB,CAChCzyE,WACAI,KAAM0gE,EAAa1gE,OACnB,GACD,CAAC3mB,EAAQ4Y,IACNogF,EAAqBxoG,EAAAA,aAAkB02B,IAC3C,IAAI+xE,EAEA/xE,IADiBD,GAA4BjnB,KAIjD4Y,EAAOR,MAAM,+BAAgC8O,GAC7ClnB,EAAOzB,QAAQ+hB,mBAAmB,aAAcwzB,GAAoE,OAArCmlD,EAAkBvsG,EAAM45B,UAAoB2yE,EAAkB3xE,EAAyB56B,EAAM+xB,UAAWyI,GAAkB,sBACzMlnB,EAAOzB,QAAQiiB,cAAa,GAC3B,CAACxgB,EAAQ4Y,EAAQlsB,EAAM45B,SAAU55B,EAAM+xB,UAAW6I,IAMrD9P,GAAiBxX,EALD,CACdu8D,UACAF,cACA28B,sBAEgC,UAKlC,MAAMhJ,EAA2Bx/F,EAAAA,aAAkB,CAACy/F,EAAWpuE,KAC7D,IAAI0uB,EACJ,MAAMrpB,EAAkBD,GAA4BjnB,GAUpD,OAPC6hB,EAAQyuE,uBAEgB,MAAzB5jG,EAAMw6B,iBAEuK,OAA7H,OAA9CqpB,EAAuB7jD,EAAM2gD,eAAqF,OAA3DkD,EAAuBA,EAAqBvpB,iBAAsB,EAASupB,EAAqBrpB,kBAEhI,IAAzBA,EAAgBP,MAAcO,EAAgBX,YAA6B75B,EAAMg6B,avD9GvB,EAAI,MuDkHvD34B,EAAAA,EAAAA,GAAS,CAAC,EAAGkiG,EAAW,CAC7BjpE,YAAYj5B,EAAAA,EAAAA,GAAS,CAAC,EAAGkiG,EAAUjpE,WAAY,CAC7CE,sBAJK+oE,CAMP,GACD,CAACjwF,EAAQtT,EAAMw6B,gBAAgE,OAA9CipE,EAAuBzjG,EAAM2gD,eAAqF,OAA3D8iD,EAAuBA,EAAqBnpE,iBAAsB,EAASmpE,EAAqBjpE,gBAAiBx6B,EAAMg6B,eAC5M+pE,EAA4BjgG,EAAAA,aAAkB,CAACsU,EAAQ+c,KAC3D,IAAI6uE,EAAuBwI,EAAwBC,EACnD,MAAMjyE,EAAiF,OAA9DwpE,EAAwB7uE,EAAQ+uE,eAAe5pE,aAAuB0pE,EAAsBxpE,iBAAkBn5B,EAAAA,EAAAA,GAAS,CAAC,EAAG04B,GAA8B/5B,EAAMg6B,cAA+E,OAA/DwyE,EAAyBr3E,EAAQ+uE,eAAe5pE,iBAAsB,EAASkyE,EAAuBhyE,iBAAmBD,GAA4BjnB,GAE7V,OADAA,EAAOzB,QAAQ+hB,mBAAmB,aAAcwzB,GAAqE,OAAtCqlD,EAAmBzsG,EAAM45B,UAAoB6yE,EAAmB7xE,EAAyB56B,EAAM+xB,UAAWyI,GAAkB,6BACpMpiB,CAAM,GACZ,CAAC9E,EAAQtT,EAAMg6B,aAAch6B,EAAM45B,SAAU55B,EAAM+xB,UAAW6I,IACjEoZ,GAA6B1gC,EAAQ,cAAegwF,GACpDtvD,GAA6B1gC,EAAQ,eAAgBywF,GAKrD,MAUM2I,EAA2B5oG,EAAAA,aAAkB,KACjD,MAAM09C,EAAaluC,EAAOzB,QAAQoW,oBAClC,IAAKjoB,EAAMg6B,eAAiBwnB,EAC1B,OAEF,MAAMmrD,EAAmB5gE,GAA0Bz4B,GAC7Cs5F,EAAkC3jF,KAAKkjB,OAAOqV,EAAWO,kBAAkBz/C,OAASqqG,EAAiBrpG,IAAMqpG,EAAiBhpG,QAAUuoC,GAC5I54B,EAAOzB,QAAQ89D,YAAYi9B,EAAgC,GAC1D,CAACt5F,EAAQtT,EAAMg6B,aAAckS,IAChCje,GAAuB3a,EAAQ,0BAA2Bo5F,GAC1Dz+E,GAAuB3a,EAAQ,yBApBKk0F,KAClC,IAAIqF,EACJ,MAAMryE,EAAkBD,GAA4BjnB,GACe,OAA9Du5F,EAAwBv5F,EAAOzB,QAAQ+V,qBAA+BilF,EAAsBh7F,SAC/FyB,EAAOzB,QAAQu9C,gBAAgB,CAC7BC,SAAU70B,EAAgBP,KAAOO,EAAgBX,WAGrDvmB,EAAOzB,QAAQiiB,aAAa,IAiB9BhwB,EAAAA,WAAgB,KAC8B,GAK3C,CAAC9D,EAAM45B,SAAU55B,EAAMwtD,iBAC1B1pD,EAAAA,WAAgB,KACd,IAAIgpG,EACJx5F,EAAOzB,QAAQ+hB,mBAAmB,aAAcwzB,GAAqE,OAAtC0lD,EAAmB9sG,EAAM45B,UAAoBkzE,EAAmBlyE,EAAyB56B,EAAM+xB,UAAW/xB,EAAMw6B,iBAAiB,GAC/M,CAAClnB,EAAQtT,EAAMw6B,gBAAiBx6B,EAAM45B,SAAU55B,EAAMwtD,eAAgB5yB,EAAyB56B,EAAM+xB,YACxGjuB,EAAAA,WAAgB,KACd4oG,GAA0B,GACzB,CAACA,GAA0B,E4F1G9BN,CAAkB94F,EAAQtT,GL9BG+sG,EAACz5F,EAAQtT,KACtC,MACEgtG,aAAcC,EAAgB,cAC9BC,EAAa,sBACbC,GACEntG,EACEotG,EAAmBtpG,EAAAA,OAAagP,OAAOnQ,OAAO,OAG9C0qG,EAAuBvpG,EAAAA,QAAc,GACrCqkF,EAAuBrkF,EAAAA,QAAa,GACpC6iB,EAAgB5S,EAAgBT,EAAQoH,GACxCmI,EAAc9O,EAAgBT,EAAQqP,IACtC2kC,EAAkBvzC,EAAgBT,EAAQ+mB,IAC1ClY,EAAYpO,EAAgBT,EAAQ4O,IACpCy4C,EAAclN,GAAmBn6C,EAAQtT,GACzCmf,EAAapL,EAAgBT,EAAQwL,IACrCwuF,EAAiBxQ,GAAkB98F,EAAMksC,UAAW4vD,GAA+B5vD,WACnFA,EAAYjjB,KAAKkjB,MAAMmhE,EAAiB3mF,GACxC4mF,EAAkBzpG,EAAAA,aAAkB,KACxC,IAAI2b,EAAiBC,EACrByoE,EAAqBt2E,SAAU,EAC/B,MAAM27F,EAA6B9/F,IAC5B0/F,EAAiBv7F,QAAQnE,EAAIqL,MAChCq0F,EAAiBv7F,QAAQnE,EAAIqL,IAAM,CACjCglE,MAAO,CACL0vB,WAAYvhE,GAEdwhE,WAAW,EACXphG,YAAY,EACZqhG,uBAAuB,IAI3B,MAAM,UACJD,EAAS,sBACTC,EAAqB,MACrB5vB,GACEqvB,EAAiBv7F,QAAQnE,EAAIqL,IACjC,IAAIiyE,EAAqC,kBAAd9+C,GAA0BA,EAAY,EAAIA,EAAY,GACjF,MAAM0hE,EAAwB7vB,EAAM0vB,WACpC,GAAIC,EAEF1iB,EAAgB4iB,OACX,GAAIX,EAAkB,CAC3B,MAAMY,EAAoBZ,GAAiB5rG,EAAAA,EAAAA,GAAS,CAAC,EAAGqM,EAAK,CAC3DiZ,mBAEF,GAA0B,SAAtBknF,EAA8B,CAChC,GAAIF,EAAuB,CACzB,MAAMG,EAAqBX,EAAwBA,GAAsB9rG,EAAAA,EAAAA,GAAS,CAAC,EAAGqM,EAAK,CACzFiZ,mBACIulB,EAGN8+C,EAAsC,MAAtB8iB,EAA6BA,EAAqB5hE,CACpE,MACE8+C,EAAgB4iB,EAElBzlB,EAAqBt2E,SAAU,EAC/Bu7F,EAAiBv7F,QAAQnE,EAAIqL,IAAIzM,YAAa,CAChD,MAEE0+E,EAAgB8R,GAAkB+Q,EAAmB3hE,GACrDkhE,EAAiBv7F,QAAQnE,EAAIqL,IAAI40F,uBAAwB,EACzDP,EAAiBv7F,QAAQnE,EAAIqL,IAAIzM,YAAa,CAElD,MACE8gG,EAAiBv7F,QAAQnE,EAAIqL,IAAI40F,uBAAwB,EAE3D,MAAMI,EAAiB,CAAC,EAExB,IAAK,MAAM1iG,KAAO0yE,EACZ,aAAa51C,KAAK98B,KACpB0iG,EAAe1iG,GAAO0yE,EAAM1yE,IAIhC,GADA0iG,EAAeN,WAAaziB,EACxBkiB,EAAe,CACjB,IAAIc,EAAcC,EAClB,MAAMpvB,EAA6BvrE,EAAOzB,QAAQgrD,iCAAiCnvD,EAAIqL,IACjF7H,EAAUg8F,GAAc7rG,EAAAA,EAAAA,GAAS,CAAC,EAAGqM,EAAK,CAC9CoxE,eAA+C,IAA/BD,EAChB1C,cAAe0C,IAA+BlkB,EAAYp9C,KAAKlL,OAAS,EACxEwsE,gCAEFkvB,EAAe3vB,WAA6C,OAA/B4vB,EAAe98F,EAAQ5N,KAAe0qG,EAAe,EAClFD,EAAezvB,cAAsD,OAArC2vB,EAAkB/8F,EAAQvN,QAAkBsqG,EAAkB,CAChG,CACA,MAAMC,EAAiB56F,EAAOzB,QAAQqjB,6BAA6B,YAAa64E,EAAgBrgG,GAEhG,OADA0/F,EAAiBv7F,QAAQnE,EAAIqL,IAAIglE,MAAQmwB,EAClCA,CAAc,EAEjBpyF,EAAY,GACZmuC,EAAyB0Q,EAAYp9C,KAAKhB,QAAO,CAACC,EAAK9O,KAC3DoO,EAAUzD,KAAKmE,GACf,IAAI2xF,EAAkB,EAClBC,EAAa,EACjB,MAAMF,EAAiBV,EAA2B9/F,GAElD,IAAK,MAAMrC,KAAO6iG,EAAgB,CAChC,MAAMr4F,EAAQq4F,EAAe7iG,GACzB,aAAa88B,KAAK98B,GACpB8iG,EAAkBt4F,EAAQs4F,EAAkBt4F,EAAQs4F,EAEpDC,GAAcv4F,CAElB,CACA,OAAO2G,EAAM2xF,EAAkBC,CAAU,GACxC,GACW,MAAdjvF,GAA4D,OAArCM,EAAkBN,EAAW7b,MAAgBmc,EAAgBrU,SAAQsC,IAC1F8/F,EAA2B9/F,EAAI,IAEnB,MAAdyR,GAAkE,OAA3CO,EAAqBP,EAAWxb,SAAmB+b,EAAmBtU,SAAQsC,IACnG8/F,EAA2B9/F,EAAI,IAEjC4F,EAAOzB,QAAQqC,UAASR,IACfrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBuzC,SAAU,CACRgD,yBACAnuC,iBAIDqsE,EAAqBt2E,UAExBw7F,EAAqBx7F,QAAUy2B,KAEjCh1B,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,EAAQqnD,EAAYp9C,KAAM2uB,EAAW+gE,EAAkBC,EAAeC,EAAuBhuF,EAAYwH,IACvGqmF,EAAelpG,EAAAA,aAAkB41B,IACrC,MAAMp3B,EAAS8qG,EAAiBv7F,QAAQ6nB,GACxC,OAAOp3B,EAASA,EAAOy7E,MAAM0vB,WAAavhE,CAAS,GAClD,CAACA,IAKEmiE,EAAevqG,EAAAA,aAAkB,CAACiV,EAAIzW,KAC1C8qG,EAAiBv7F,QAAQkH,GAAIglE,MAAM0vB,WAAanrG,EAChD8qG,EAAiBv7F,QAAQkH,GAAI20F,WAAY,EACzCN,EAAiBv7F,QAAQkH,GAAI40F,uBAAwB,EACrDJ,GAAiB,GAChB,CAACA,IACEe,EAA2BxqG,EAAAA,SAAc,KAAMyqG,EAAAA,GAAAA,GAAShB,EAAiBvtG,EAAMq8F,yBAAyB,CAACkR,EAAiBvtG,EAAMq8F,yBAChImS,EAAyB1qG,EAAAA,aAAkB,CAACiV,EAAIzW,EAAQnC,KAC5D,IAAKitG,EAAiBv7F,QAAQkH,KAAQq0F,EAAiBv7F,QAAQkH,GAAIzM,WACjE,OAIF,MAAMmiG,EAAiBrB,EAAiBv7F,QAAQkH,GAAIglE,MAAM,OAADp9E,QAAQC,EAAAA,EAAAA,GAAWT,OAAiBmC,EAC7F8qG,EAAiBv7F,QAAQkH,GAAI40F,uBAAwB,EACrDP,EAAiBv7F,QAAQkH,GAAIglE,MAAM,OAADp9E,QAAQC,EAAAA,EAAAA,GAAWT,KAAemC,EAChEmsG,GACFH,GACF,GACC,CAACA,IACEjmB,EAAmBvkF,EAAAA,aAAkBiV,IACzC,IAAI21F,EACJ,OAAmE,OAA1DA,EAAyBtB,EAAiBv7F,QAAQkH,SAAe,EAAS21F,EAAuBpiG,cAAe,CAAK,GAC7H,IACGs7E,EAA0B9jF,EAAAA,aAAkB,IACzCupG,EAAqBx7F,SAC3B,IACG88F,EAA0B7qG,EAAAA,aAAkBye,IAC5C4lE,EAAqBt2E,SAAW0Q,EAAQ8qF,EAAqBx7F,UAC/Dw7F,EAAqBx7F,QAAU0Q,EACjC,GACC,IACGqsF,EAAkB9qG,EAAAA,aAAkB,KACxCspG,EAAiBv7F,QAAU,CAAC,EAC5B07F,GAAiB,GAChB,CAACA,IAIJzpG,EAAAA,WAAgB,KACdypG,GAAiB,GAChB,CAACrhE,EAAWrpB,EAAaykC,EAAiBnlC,EAAWorF,IACxDr5D,GAA2B5gC,EAAQ,YAAai6F,GAChD,MAQMsB,EAAqB,CACzBjnB,0BACAS,oBAEFv9D,GAAiBxX,EAZG,CAClBupE,iCAAkC8xB,EAClC3iE,sBAAuBghE,EACvBhvB,6BAlD0BtkD,IAC1B,IAAIo1E,EACJ,OAAoE,OAA5DA,EAAwB1B,EAAiBv7F,QAAQ6nB,SAAkB,EAASo1E,EAAsB/wB,KAAK,EAiD/GgxB,sBAAuBV,EACvBzxB,mCAAoC4xB,EACpCI,mBAMoC,UACtC9jF,GAAiBxX,EAAQu7F,EAAoB,UAAU,EKnKvD9B,CAAgBz5F,EAAQtT,GrExBGgvG,EAAC17F,EAAQtT,KACpC,MAAMoB,GAAQ27C,EAAAA,GAAAA,KACR7wB,EAAS6K,GAAczjB,EAAQ,iBAC/B27F,EAAS37F,EAAOzB,QAAQiW,wBACxBF,EAAqBtU,EAAOzB,QAAQ+V,mBACpClE,EAAoB3P,EAAgBT,EAAQ2P,IAC5CmsC,EAAkBtrD,EAAAA,aAAkBsU,IACxC,MAAMqF,EAAgBD,GAAqBlK,GACrCsI,EAAiBJ,GAAqClI,GAE5D,GAD0C,MAAnB8E,EAAOi3C,UACW,IAAlB5xC,GAAiD,IAA1B7B,EAAevJ,OAC3D,OAAO,EAET6Z,EAAOR,MAAM,4BAAD/qB,OAA6ByX,EAAOi3C,SAAQ,WAAA1uD,OAAUyX,EAAO22C,SAAQ,MACjF,IAAImgD,EAAoB,CAAC,EACzB,GAAuB,MAAnB92F,EAAO22C,SAAkB,CAC3B,MAAM1oC,EAAkBxK,GAA4BvI,GACpD,IAAI67F,EACJ,GAA+B,qBAApB/2F,EAAOi3C,SAA0B,CAC1C,IAAI+/C,EACJ,MAAM11E,EAAwE,OAA/D01E,EAAwB1rF,EAAkBtL,EAAOi3C,gBAAqB,EAAS+/C,EAAsBr2F,GAC9GypC,EAAkBlvC,EAAOzB,QAAQ4wC,4BAA4B/oB,EAAOthB,EAAO22C,UAC7EvM,IAAoBA,EAAgBE,mBACtCysD,EAAY3sD,EAAgBo3B,UAAU3tE,MAE1C,CACyB,qBAAdkjG,IACTA,EAAYvzF,EAAexD,EAAO22C,UAAU/yC,eAG9CkzF,EAAkBtrG,KAAO89D,GAAe,CACtCC,aAAc/5C,EAAmB/V,QAAQ6vE,YACzC9f,UAAW34C,KAAK++D,IAAIpgE,EAAmB/V,QAAQqxE,YAC/Cv5B,aAAcwlD,EACdttC,UAAWx7C,EAAgBjO,EAAO22C,WAEtC,CACA,GAAuB,MAAnB32C,EAAOi3C,SAAkB,CAC3B,IAAIxG,EAAgBC,EACpB,MAAM7B,EAAWD,GAAqB1zC,EAAOzB,QAAQ6B,OAC/CumB,EAAOQ,GAAiBnnB,GACxBumB,EAAWa,GAAqBpnB,GAChC+7F,EAAgBrvG,EAAMs6B,WAA+BliB,EAAOi3C,SAAWp1B,EAAOJ,EAA3CzhB,EAAOi3C,SAC1CigD,EAAqBroD,EAASnrC,UAAUuzF,EAAe,GAAKpoD,EAASnrC,UAAUuzF,EAAe,GAAKpoD,EAASnrC,UAAUuzF,GAAgBpoD,EAASgD,uBAAyBhD,EAASnrC,UAAUuzF,GAC3LE,GAA4H,OAApG1mD,EAAiBjhC,EAAmB/V,QAAQ0mB,cAAc,IAAD53B,OAAKkL,EAAY,2BAAiC,EAASg9C,EAAe8Y,eAAiB,EAC5K6tC,GAAmI,OAAxG1mD,EAAkBlhC,EAAmB/V,QAAQ0mB,cAAc,IAAD53B,OAAKkL,EAAY,8BAAoC,EAASi9C,EAAgB6Y,eAAiB,EAC1LutC,EAAkB5rG,IAAMo+D,GAAe,CACrCC,aAAc/5C,EAAmB/V,QAAQ8vD,aAAe4tC,EAAsBC,EAC9E5tC,UAAWh6C,EAAmB/V,QAAQ+vD,UACtCjY,aAAc2lD,EACdztC,UAAW5a,EAASnrC,UAAUuzF,IAElC,CAEA,OADAH,EAAoB57F,EAAOzB,QAAQqjB,6BAA6B,kBAAmBg6E,EAAmB92F,SAChEjS,WAA3B+oG,EAAkBtrG,WAAuDuC,WAA1B+oG,EAAkB5rG,OAC1EgQ,EAAOzB,QAAQypE,OAAO4zB,IACf,EAEG,GACX,CAAChjF,EAAQ5Y,EAAQsU,EAAoB5nB,EAAMs6B,WAAY5W,IACpD43D,EAASx3E,EAAAA,aAAkBsU,IAC/B,GAAIwP,EAAmB/V,SAA0B,MAAfuG,EAAOxU,MAAgBqrG,EAAOp9F,QAAS,CACvE,MAAMmsC,EAAgC,QAApB58C,EAAM48C,WAAuB,EAAI,EACnDixD,EAAOp9F,QAAQqxE,WAAa9qE,EAAOxU,KACnCgkB,EAAmB/V,QAAQqxE,WAAallC,EAAY5lC,EAAOxU,KAC3DsoB,EAAOR,MAAM,mBAAD/qB,OAAoByX,EAAOxU,MACzC,CACIgkB,EAAmB/V,SAAyB,MAAduG,EAAO9U,MACvCskB,EAAmB/V,QAAQ+vD,UAAYxpD,EAAO9U,IAC9C4oB,EAAOR,MAAM,kBAAD/qB,OAAmByX,EAAO9U,OAExC4oB,EAAOR,MAAM,8CAA8C,GAC1D,CAAC9D,EAAoBxmB,EAAM48C,UAAWixD,EAAQ/iF,IAC3CmvD,EAAoBv3E,EAAAA,aAAkB,IACd,MAAtB8jB,GAA8BA,EAAmB/V,QAMhD,CACLvO,IAAKskB,EAAmB/V,QAAQ+vD,UAChCh+D,KAAMgkB,EAAmB/V,QAAQqxE,YAP1B,CACL5/E,IAAK,EACLM,KAAM,IAOT,CAACgkB,IAMJkD,GAAiBxX,EALC,CAChBgoE,SACAlsB,kBACAisB,qBAEkC,SAAS,EqEjE7C2zB,CAAc17F,EAAQtT,G3HtDSsT,KAC/B,MAAM4Y,EAAS6K,GAAczjB,EAAQ,qBAK/Bm8F,EAAiB3rG,EAAAA,aAAkBuX,IAClB/H,EAAOzB,QAAQqC,UAASR,GACvCA,EAAMoS,WAAWguB,MAAQpgC,EAAMoS,WAAWzK,QAAUA,EAC/C3H,GAETwY,EAAOR,MAAM,wBACNrqB,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBoS,WAAY,CACVguB,MAAM,EACNz4B,gBAKJ/H,EAAOzB,QAAQmmE,kBACf1kE,EAAOzB,QAAQiiB,cACjB,GACC,CAACxgB,EAAQ4Y,IACN00D,EAAiB98E,EAAAA,aAAkB,KACvC,MAAM8iB,EAAkBf,GAAuBvS,EAAOzB,QAAQ6B,OAC9D,GAAIkT,EAAgBvL,MAAO,CACzB,MAAM6I,EAAejJ,EAAyB3H,GACxCiI,EAAwBD,GAAkChI,GAC1D0H,EAAgBF,EAAyBxH,GAC/C,IAAI8kD,EAAexxC,EAAgBvL,MAQnC,GALK6I,EAAak0C,KAChBA,EAAep9C,EAAc,KAIa,IAAxCO,EAAsB68C,GAAyB,CAEjD,MAAMs3C,EAAuB10F,EAAcS,QAAOJ,GAC5CA,IAAU+8C,IAG0B,IAAjC78C,EAAsBF,KAEzBs0F,EAAaD,EAAqBzjF,QAAQmsC,GAChDA,EAAes3C,EAAqBC,EAAa,IAAMD,EAAqBC,EAAa,EAC3F,CACAr8F,EAAOzB,QAAQ49C,qBAAqB2I,EACtC,CACqB9kD,EAAOzB,QAAQqC,UAASR,GACtCA,EAAMoS,WAAWguB,WAAmC3tC,IAA3BuN,EAAMoS,WAAWzK,OAG/C6Q,EAAOR,MAAM,uBACNrqB,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACzBoS,YAAYzkB,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMoS,WAAY,CACzCguB,MAAM,EACNz4B,WAAOlV,OANFuN,KAWTJ,EAAOzB,QAAQiiB,aACjB,GACC,CAACxgB,EAAQ4Y,IACN2kC,EAAmB/sD,EAAAA,aAAkBuX,IACzC6Q,EAAOR,MAAM,sBACb,MAAM5F,EAAaD,GAAuBvS,EAAOzB,QAAQ6B,OACpDoS,EAAWguB,MAAQhuB,EAAWzK,QAAUA,EAG3CulE,IAFA6uB,EAAep0F,EAGjB,GACC,CAAC/H,EAAQ4Y,EAAQujF,EAAgB7uB,IAMpC91D,GAAiBxX,EALK,CACpBm8F,iBACA7uB,iBACA/vB,oBAEsC,UACxC5iC,GAAuB3a,EAAQ,oBAAqBstE,GACpD3yD,GAAuB3a,EAAQ,uBAAwBA,EAAOzB,QAAQ+uE,gBACtE3yD,GAAuB3a,EAAQ,2BAA4BA,EAAOzB,QAAQ+uE,eAAe,E2H7BzFgvB,CAAkBt8F,GAClB2xC,GAAiB3xC,EAAQtT,GACzB2nD,GAAmBr0C,EAAQtT,GAC3BkyC,GAAiB5+B,EAAQtT,GErCpB,SAA2BsT,EAAQtT,GACxC,MAAMksB,EAAS6K,GAAczjB,EAAQ,sBAC/Bu8F,EAAa/rG,EAAAA,QAAa,GAC1BgsG,EAAoBhsG,EAAAA,OAAa,MACjCisG,EAAoBjsG,EAAAA,OAAa,MACjCmjD,EAAWlzC,EAAgBT,EAAQ0zC,IACnCrgC,EAAgB5S,EAAgBT,EAAQoH,GACxCwxB,EAAYjjB,KAAKkjB,MAAMnsC,EAAMksC,UAAYvlB,GACzCgnE,EAAoB1qC,GAAqB3vC,EAAQtT,EAAMkqD,oBACvD8lD,EAA0BlsG,EAAAA,aAAkB,KAChD,IAAIw0E,EACJ,MAAMwE,EAAyE,OAA1DxE,EAAwBhlE,EAAOzB,QAAQgP,qBAA0B,EAASy3D,EAAsBzmE,QAC/G2qE,EAAoBvgE,GAA8B3I,GAClDq5F,EAAmB5gE,GAA0Bz4B,GACnD,IAAKw8F,EAAkBj+F,QACrB,OAEF,IAAIo+F,EAiBAC,EACArjB,EACAsjB,EAlBJ,GAA2B,MAAvBnwG,EAAMowG,cACRH,EAAgBjwG,EAAMowG,mBACjB,GAAK5zB,GAAsBM,EAE3B,CACL,MACMuzB,GADMroD,EAAAA,GAAAA,GAAc80B,GACJzrC,cAAc,OACpCg/D,EAAU/+D,MAAMrlC,MAAQ,OACxBokG,EAAU/+D,MAAMhvC,OAAS,OACzB+tG,EAAU/+D,MAAMnxC,SAAW,WAC3BkwG,EAAU/+D,MAAM5hC,SAAW,SAC3B2gG,EAAU5rG,UAAY,YACtBq4E,EAAYrrC,YAAY4+D,GACxBJ,EAAgBI,EAAUC,YAAcD,EAAU3uB,YAClD5E,EAAY7qC,YAAYo+D,EAC1B,MAZEJ,EAAgB,EAgBlB,GAAIjwG,EAAMsM,WACR6jG,GAAa,EACbtjB,EAAa5jE,KAAKqa,MAAMk5C,GAAqBvzD,KAAKqa,MAAMwsE,EAAkBj+F,QAAQ5F,OAClFikG,EAAoB,CAClBjkG,MAAO6jG,EAAkBj+F,QAAQ5F,MACjC3J,OAAQ2kD,EAASgD,wBAA0B4iC,EAAaojB,EAAgB,QAErE,CACLC,EAAoB,CAClBjkG,MAAO6jG,EAAkBj+F,QAAQ5F,MACjC3J,OAAQ2mB,KAAKhkB,IAAI6qG,EAAkBj+F,QAAQvP,OAASqrF,EAAmB,IAEzE,MAAM4iB,EAxEMtsG,KAIZ,IAJa,QACjBg1E,EAAO,UACP7uB,EAAS,cACT6lD,GACDhsG,EACC,MAAMusG,EAA2Bv3B,EAAQhtE,MAAQm+C,EAAUn+C,MACrDwkG,EAA2Bx3B,EAAQ32E,OAAS8nD,EAAU9nD,OAC5D,IAAIuqF,GAAa,EACbsjB,GAAa,EAUjB,OATIK,GAA4BC,KAC9B5jB,EAAa2jB,EACbL,EAAal3B,EAAQ32E,QAAUuqF,EAAaojB,EAAgB,GAAK7lD,EAAU9nD,OAGvE6tG,IACFtjB,EAAa5T,EAAQhtE,MAAQgkG,EAAgB7lD,EAAUn+C,QAGpD,CACL4gF,aACAsjB,aACD,EAmD6BO,CAAU,CAClCz3B,QAAS,CACPhtE,MAAOgd,KAAKqa,MAAMk5C,GAClBl6E,OAAQ2kD,EAASgD,wBAEnBG,UAAW,CACTn+C,MAAOgd,KAAKqa,MAAM4sE,EAAkBjkG,OACpC3J,OAAQ4tG,EAAkB5tG,OAASqqG,EAAiBrpG,IAAMqpG,EAAiBhpG,QAE7EssG,kBAEFE,EAAaI,EAAkBJ,WAC/BtjB,EAAa0jB,EAAkB1jB,UACjC,CACA,MAIM8jB,EAAoB,CACxBT,oBACAnuD,kBANwB,CACxB91C,MAAOikG,EAAkBjkG,OAASkkG,EAAaF,EAAgB,GAC/D3tG,OAAQ4tG,EAAkB5tG,QAAUuqF,EAAaojB,EAAgB,IAKjEpjB,aACAsjB,aACAF,iBAEIW,EAAiBb,EAAkBl+F,QACzCk+F,EAAkBl+F,QAAU8+F,EACxBA,EAAkB5uD,kBAAkB91C,SAA6B,MAAlB2kG,OAAyB,EAASA,EAAe7uD,kBAAkB91C,QAAU0kG,EAAkB5uD,kBAAkBz/C,UAA8B,MAAlBsuG,OAAyB,EAASA,EAAe7uD,kBAAkBz/C,SACjPgR,EAAOzB,QAAQ+f,aAAa,0BAA2B++E,EAAkB5uD,kBAC3E,GACC,CAACzuC,EAAQtT,EAAMowG,cAAepwG,EAAMsM,WAAY26C,EAASgD,uBAAwB0jC,KAC7EkjB,EAAWC,GAAgBhtG,EAAAA,WAC5BitG,EAAwBjtG,EAAAA,SAAc,KAAMyqG,EAAAA,GAAAA,GAASuC,EAAc,KAAK,IACxEE,EAAeltG,EAAAA,UACrBkd,EAAAA,EAAAA,IAAkB,KACZ6vF,IACFb,IACA18F,EAAOzB,QAAQ+f,aAAa,kBAAmBk+E,EAAkBj+F,SACnE,GACC,CAACyB,EAAQu9F,EAAWb,IAGvB,MAAMiB,EAASntG,EAAAA,aAAkB,KAC/BwP,EAAOzB,QAAQmV,kCAAkC,GAChD,CAAC1T,IACE2U,EAAoBnkB,EAAAA,aAAkB,IAAMisG,EAAkBl+F,SAAS,IACvEu+C,EAAsBtsD,EAAAA,aAAkB,KAC5C,MAAM09C,EAAaluC,EAAOzB,QAAQoW,oBAClC,IAAKu5B,EACH,OAAO,EAET,MAAMmZ,EAAcpN,GAAej6C,EAAQ,CACzCgnB,WAAYt6B,EAAMs6B,WAClBkzB,eAAgBxtD,EAAMwtD,iBAKxB,GAAIxtD,EAAMgtG,aAAc,CACtB,MAAMvmB,EAAgBnzE,EAAOzB,QAAQ62E,mBAC/Bv4B,EAAmBs2B,EAAcxrD,aAAewrD,EAAczrD,cACpE,OAAO/R,KAAKD,IAAImnC,EAAmB,EAAGwK,EAAYp9C,KAAKlL,OACzD,CACA,MAAMu6F,EAAkC3jF,KAAKkjB,MAAMqV,EAAWO,kBAAkBz/C,OAAS4pC,GACzF,OAAOjjB,KAAKD,IAAI4jF,EAAiCjyC,EAAYp9C,KAAKlL,OAAO,GACxE,CAACiB,EAAQtT,EAAMs6B,WAAYt6B,EAAMwtD,eAAgBxtD,EAAMgtG,aAAc9gE,IAClEllB,EAAmCljB,EAAAA,aAAkB,KACzD,IAAIotG,EAAuBC,EAAuBC,EAClD,MAAMC,EAAoE,OAA1DH,EAAwB59F,EAAOzB,QAAQkW,qBAA0B,EAASmpF,EAAsBr/F,QAChH,IAAKw/F,EACH,OAEF,MACMC,GADMC,EAAAA,GAAAA,GAAYF,GACEG,iBAAiBH,GACrC/uG,EAASmvG,WAAWH,EAAchvG,SAAW,EAC7C2J,EAAQwlG,WAAWH,EAAcrlG,QAAU,EAC3CylG,EAAmBpvG,KAA8D,OAAjD6uG,EAAwBH,EAAan/F,cAAmB,EAASs/F,EAAsB7uG,QACvHqvG,EAAkB1lG,KAA8D,OAAlDmlG,EAAyBJ,EAAan/F,cAAmB,EAASu/F,EAAuBnlG,OAC7H,IAAK+kG,EAAan/F,SAAW6/F,GAAoBC,EAAiB,CAChE,MAAM1pG,EAAO,CACXgE,QACA3J,UAEFgR,EAAOzB,QAAQ+f,aAAa,SAAU3pB,GACtC+oG,EAAan/F,QAAU5J,CACzB,IACC,CAACqL,IAKEs+F,EAAuB,CAC3BxhD,sBACA4/C,0BACAhpF,oCAEF8D,GAAiBxX,EATK,CACpB29F,SACAhpF,qBAOsC,UACxC6C,GAAiBxX,EAAQs+F,EAAsB,WAC/C,MAAMC,EAAgB/tG,EAAAA,QAAa,GAC7BwkF,EAAexkF,EAAAA,aAAkBmE,IACrC6nG,EAAkBj+F,QAAU5J,EAG5B,MAAM6pG,EAAU,QAAQ3pE,KAAK5gB,OAAOyrB,UAAU++D,WAe9C,GAdoB,IAAhB9pG,EAAK3F,QAAiButG,EAAWh+F,SAAY7R,EAAMsM,YAAewlG,IACpE5lF,EAAOzhB,MAAM,CAAC,+DAAgE,8DAA+D,0CAA2C,GAAI,8DAA8DiI,KAAK,OAC/Pm9F,EAAWh+F,SAAU,GAEJ,IAAf5J,EAAKgE,OAAgB4jG,EAAWh+F,SAAYigG,IAC9C5lF,EAAOzhB,MAAM,CAAC,8DAA+D,6DAA8D,yCAA0C,GAAI,8DAA8DiI,KAAK,OAC5Pm9F,EAAWh+F,SAAU,GAQnBggG,EAAchgG,QAIhB,OAFAi/F,EAAa7oG,QACb4pG,EAAchgG,SAAU,GAG1Bk/F,EAAsB9oG,EAAK,GAC1B,CAACjI,EAAMsM,WAAYykG,EAAuB7kF,KAC7ClL,EAAAA,EAAAA,IAAkB,IAAMgvF,KAA2B,CAACA,IACpD1gF,GAAwBhc,EAAQ,gBAAiB08F,GACjD1gF,GAAwBhc,EAAQ,wBAAyB08F,GACzD1gF,GAAwBhc,EAAQ,gBAAiB08F,GACjD/hF,GAAuB3a,EAAQ,SAAUg1E,GACzCh5D,GAAwBhc,EAAQ,kBAAmBtT,EAAMgyG,SAC3D,CF/IEC,CAAkB3+F,EAAQtT,GGrErB,SAAuBsT,EAAQtT,GACpCsvB,GAAwBhc,EAAQ,oBAAqBtT,EAAMkyG,qBAC3D5iF,GAAwBhc,EAAQ,0BAA2BtT,EAAMmyG,2BACjE7iF,GAAwBhc,EAAQ,mBAAoBtT,EAAMoyG,oBAC1D9iF,GAAwBhc,EAAQ,kBAAmBtT,EAAMqyG,mBACzD/iF,GAAwBhc,EAAQ,oBAAqBtT,EAAMsyG,qBAC3DhjF,GAAwBhc,EAAQ,oBAAqBtT,EAAMuyG,qBAC3DjjF,GAAwBhc,EAAQ,YAAatT,EAAMwyG,aACnDljF,GAAwBhc,EAAQ,kBAAmBtT,EAAMyyG,mBACzDnjF,GAAwBhc,EAAQ,cAAetT,EAAM0yG,eACrDpjF,GAAwBhc,EAAQ,uBAAwBtT,EAAM2yG,wBAC9DrjF,GAAwBhc,EAAQ,sBAAuBtT,EAAM4yG,uBAC7DtjF,GAAwBhc,EAAQ,WAAYtT,EAAM6yG,YAClDvjF,GAAwBhc,EAAQ,YAAatT,EAAM8yG,aACnDxjF,GAAwBhc,EAAQ,iBAAkBtT,EAAM+yG,kBACxDzjF,GAAwBhc,EAAQ,WAAYtT,EAAMgzG,YAClD1jF,GAAwBhc,EAAQ,cAAetT,EAAMizG,cACvD,CHqDEC,CAAc5/F,EAAQtT,GIzEesT,KACrC,MAAMg5C,EAAcxoD,EAAAA,aAAkB,WAAiB,IAAhBsU,EAAMhG,UAAAC,OAAA,QAAAlM,IAAAiM,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE/C,OADsBkB,EAAOzB,QAAQqjB,6BAA6B,cAAe,CAAC,EAAG9c,EAEvF,GAAG,CAAC9E,IACE84C,EAAetoD,EAAAA,aAAkBogG,IACpB5wF,EAAOzB,QAAQqjB,6BAA6B,eAAgB,CAC3Eo0E,UAAW,IACV,CACDpF,mBAEOoF,UAAUl+F,SAAQkpB,IACzBA,GAAU,IAEZhhB,EAAOzB,QAAQiiB,aAAa,GAC3B,CAACxgB,IAKJwX,GAAiBxX,EAJW,CAC1Bg5C,cACAF,gBAE4C,SAAS,EJsDvD+mD,CAAwB7/F,GDhEnB,SAA+BA,EAAQtT,GAK5C,MAAMozG,EAAoBl7B,IACxB5kE,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDkxE,gBAAgBvjF,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMkxE,eAAgB,CACjD1M,eAED,EASCjmD,EAAM,CACVo6B,2BAA4B+mD,EAC5BC,iCAT8Bn7B,IAC9B5kE,EAAOzB,QAAQqC,UAASR,IAASrS,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAO,CACnDkxE,gBAAgBvjF,EAAAA,EAAAA,GAAS,CAAC,EAAGqS,EAAMkxE,eAAgB,CACjDG,kBAAmB7M,OAEpB,GAMLptD,GAAiBxX,EAAQ2e,EAAK,UAO9BnuB,EAAAA,WAAgB,KACdsvG,GAAmBpzG,EAAMi8F,sBAAsB,GAC9C,CAACj8F,EAAMi8F,uBAEZ,CC+BEqX,CAAsBhgG,EAAQtT,GACvBsT,CAAM,EK7DTigG,IAAsB1zG,EAAAA,GAAAA,GAAO,MAAO,CACxCC,KAAM,cACNN,KAAM,kBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOuzG,iBAHnB3zG,CAIzB,CACD6P,SAAU,OACVpN,OAAQ,OAERnC,SAAU,WACV,eAAgB,CACduP,SAAU,UAEZlN,OAAQ,IAGJixG,GAAmC3vG,EAAAA,YAAiB,SAA6B9D,EAAOgE,GAC5F,MAAM6C,GAAYgZ,EAAAA,EAAAA,KACZzZ,EA1BkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,oBAEoB0L,EAAyBxF,EAAQ,EAmB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKgsG,IAAqBlyG,EAAAA,EAAAA,GAAS,CACrD2C,IAAKA,GACJhE,EAAO,CACRyE,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMF,EAAMyE,WACpCjE,WAAYqG,IAEhB,ICxBM6sG,IAA6B7zG,EAAAA,GAAAA,GAAO,MAAO,CAC/CC,KAAM,cACNN,KAAM,yBACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO0zG,wBAHZ9zG,CAIhC,CAAC,GACE+zG,GAA0C9vG,EAAAA,YAAiB,SAAoC9D,EAAOgE,GAC1G,IAAI6vG,EACJ,MAAMhtG,GAAYgZ,EAAAA,EAAAA,KAEZzZ,EAlBkBE,EAACtG,EAAO8zG,KAChC,MAAM,QACJ1tG,GACEpG,EACEqF,EAAQ,CACZnF,KAAM,CAAC,yBAA0B4zG,GAAqB,uCAExD,OAAOztG,EAAAA,EAAAA,GAAehB,EAAOuG,EAAyBxF,EAAQ,EAW9CE,CAAkBO,GADPA,EAAUyF,YAA2F,UAA5C,OAA/BunG,EAAe7zG,EAAMsxC,YAAiB,EAASuiE,EAAavkG,YAEjH,OAAoB/H,EAAAA,GAAAA,KAAKmsG,IAA4BryG,EAAAA,EAAAA,GAAS,CAC5D2C,IAAKA,GACJhE,EAAO,CACRQ,WAAYqG,EACZpC,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMF,EAAMyE,aAExC,IC/BM9E,GAAY,CAAC,aAiBbo0G,IAAgCl0G,EAAAA,GAAAA,GAAO,MAAO,CAClDC,KAAM,cACNN,KAAM,4BACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAO+zG,2BAHTn0G,CAInC,CACDM,SAAU,WACVC,QAAS,OAETkB,cAAe,WAEX2yG,GAA6CnwG,EAAAA,YAAiB,SAAuC9D,EAAOgE,GAChH,MAAM,UACFS,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,IACzCkH,GAAYgZ,EAAAA,EAAAA,KACZzZ,EAzBkB5F,KACxB,MAAM,QACJ4F,GACE5F,EAIJ,OAAO6F,EAAAA,EAAAA,GAHO,CACZnG,KAAM,CAAC,8BAEoB0L,EAAyBxF,EAAQ,EAkB9CE,CAAkBO,GAClC,OAAoBU,EAAAA,GAAAA,KAAKwsG,IAA+B1yG,EAAAA,EAAAA,GAAS,CAC/D2C,IAAKA,EACLS,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,KAAMuE,GAC9BjE,WAAYqG,GACXpB,GACL,IC3BMyuG,IAAyBr0G,EAAAA,GAAAA,GAAO,MAAO,CAC3CC,KAAM,cACNN,KAAM,iBACNqI,kBAAmBC,GAAiB,gBAATA,EAC3B/H,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOk0G,gBAJhBt0G,EAK5BoE,IAAA,IAAC,YACFmwG,GACDnwG,EAAA,MAAM,CACL9D,SAAU,SAEVmD,IAAK,EACLM,KAAM,EACNqI,MAAO,EAEP3J,OAAQ,EAERE,OAAwB,mBAAhB4xG,EAAmC,EACzC,EACH,IAEKC,IAA0Bx0G,EAAAA,GAAAA,GAAO,MAAO,CAC5CC,KAAM,cACNN,KAAM,sBACNqI,kBAAmBC,GAAiB,gBAATA,EAC3B/H,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOq0G,qBAJfz0G,CAK7B,CAAC,GACEyG,GAAoB9F,IACxB,MAAM,QACJ4F,GACE5F,EAKJ,OAAO6F,EAAAA,EAAAA,GAJO,CACZnG,KAAM,CAAC,kBACPq0G,MAAO,CAAC,wBAEmB3oG,EAAyBxF,EAAQ,EAEhE,SAASouG,GAAmBx0G,GAC1B,IAAIy0G,EAAuBC,EAC3B,MAAMphG,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,MACXkiC,EAAmB4yD,GAAwB7wG,EAAAA,UAAe,KAC/D,IAAI+8C,EAAuBC,EAC3B,OAA8J,OAAtJD,EAAyF,OAAhEC,EAAyBxtC,EAAOzB,QAAQoW,0BAA+B,EAAS64B,EAAuBiB,mBAA6BlB,EAAwB,IAAI,IAE7L+zD,EAA2B9wG,EAAAA,aAAkB,KACjD,IAAI+wG,EAAwBC,EAC5BH,EAA6K,OAAvJE,EAA0F,OAAhEC,EAAyBxhG,EAAOzB,QAAQoW,0BAA+B,EAAS6sF,EAAuB/yD,mBAA6B8yD,EAAyB,KAAK,GACjN,CAACvhG,KACJ0N,EAAAA,EAAAA,IAAkB,IACT1N,EAAOzB,QAAQkd,eAAe,0BAA2B6lF,IAC/D,CAACthG,EAAQshG,IACZ,IAAItyG,EAAoG,OAA1FmyG,EAA6C,MAArB1yD,OAA4B,EAASA,EAAkBz/C,QAAkBmyG,EAAwB,EACnI5tG,EAAUyF,YAAyB,IAAXhK,IAC1BA,EAAS2pC,GAAwB34B,EAAQzM,EAAUqlC,YAGrD,MAAM9lC,EAAUE,IAAkBjF,EAAAA,EAAAA,GAAS,CAAC,EAAGrB,EAAO,CACpDoG,QAASS,EAAUT,WAErB,OAAK27C,GAGex6C,EAAAA,GAAAA,KAAK2sG,GAAwB,CAC/CzvG,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQlG,MACxBk0G,YAAap0G,EAAMo0G,YACnBvvG,UAAuB0C,EAAAA,GAAAA,KAAK8sG,IAAyBhzG,EAAAA,EAAAA,GAAS,CAC5DoD,WAAW2C,EAAAA,EAAAA,GAAKhB,EAAQmuG,OACxBjjE,MAAO,CACLhvC,SACA2J,MAAiG,OAAzFyoG,EAA6C,MAArB3yD,OAA4B,EAASA,EAAkB91C,OAAiByoG,EAAwB,IAEjI10G,MAXI,IAaX,CAQO,SAAS+0G,KACd,MAAMzhG,EAASskB,KACT/wB,GAAYgZ,EAAAA,EAAAA,KACZpC,EAAgB1J,EAAgBT,EAAQkK,IACxCgvC,EAAkBz4C,EAAgBT,EAAQwQ,IAC1CnG,EAAU5J,EAAgBT,EAAQoK,IAElCs3F,GAAwBr3F,GAAWF,EAAgB,GAAyB,IAApB+uC,EAC9D,IAAIoe,EAAU,KACVwpC,EAAc,GAEhB,IAAIlzF,EAKAC,EAKA8rB,EAfqBtvB,GAA6B,IAAlBF,IAMpCmtD,GAAuBrjE,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM4vG,eAAe5zG,EAAAA,EAAAA,GAAS,CAAC,EAAmD,OAA/C6f,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqB+zF,gBAC7Jb,EAAc,iBAEZY,IAEFpqC,GAAuBrjE,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM6vG,kBAAkB7zG,EAAAA,EAAAA,GAAS,CAAC,EAAoD,OAAhD8f,EAAwBta,EAAUvB,gBAAqB,EAAS6b,EAAsB+zF,mBAClKd,EAAc,oBAEZz2F,IAEFitD,GAAuBrjE,EAAAA,GAAAA,KAAKV,EAAUxB,MAAM8vG,gBAAgB9zG,EAAAA,EAAAA,GAAS,CAAC,EAAoD,OAAhD4rC,EAAwBpmC,EAAUvB,gBAAqB,EAAS2nC,EAAsBkoE,iBAChKf,EAAc,kBAEhB,OAAgB,OAAZxpC,EACK,MAEWrjE,EAAAA,GAAAA,KAAKitG,GAAoB,CAC3CJ,YAAaA,EACbvvG,SAAU+lE,GAEd,CC7HA,MAAMjrE,GAAY,CAAC,aASby1G,GAAuCtxG,EAAAA,YAAiB,SAAiC9D,EAAOgE,GACpG,MAAM,UACFS,GACEzE,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,KACzC,aACJ0rF,EAAY,gBACZI,EAAe,mBACfC,EAAkB,QAClBzB,GACEjE,GAAuB,CACzBhiF,QAEF,OAAoBsD,EAAAA,GAAAA,MAAMmsG,IAAqBpyG,EAAAA,EAAAA,GAAS,CACtDoD,UAAWA,GACV4mF,EAAa5lF,GAAQ,CACtBZ,SAAU,EAAc0C,EAAAA,GAAAA,KAAKwtG,GAAc,CAAC,IAAiBxtG,EAAAA,GAAAA,KAAKqsG,IAA4BvyG,EAAAA,EAAAA,GAAS,CAAC,EAAGoqF,IAAmB,CAC5H5mF,UAAuB0C,EAAAA,GAAAA,KAAK0sG,IAA+B5yG,EAAAA,EAAAA,GAAS,CAAC,EAAGqqF,IAAsB,CAC5F7mF,SAAUolF,aAIlB,ICtBMorB,GAA2BvxG,EAAAA,YAAiB,SAAkBC,EAASC,GAC3E,MAAMhE,EAAQs8F,GAAiBv4F,GACzByQ,EAAgB+qF,GAAqBv/F,EAAMsT,OAAQtT,GACzD,OAAoBuH,EAAAA,GAAAA,KAAKghB,GAAqB,CAC5C/T,cAAeA,EACfxU,MAAOA,EACP6E,UAAuByC,EAAAA,GAAAA,MAAM+Y,IAAUhf,EAAAA,EAAAA,GAAS,CAC9CoD,UAAWzE,EAAMyE,UACjB6sC,MAAOtxC,EAAMsxC,MACb0jC,GAAIh1E,EAAMg1E,GACVhxE,IAAKA,GACJhE,EAAM27F,eAAgB,CACvB92F,SAAU,EAAc0C,EAAAA,GAAAA,KAAK0Z,GAAY,CAAC,IAAiB1Z,EAAAA,GAAAA,KAAKwe,GAAU,CACxEC,yBAA0BovF,MACX7tG,EAAAA,GAAAA,KAAK4gB,GAAuB,CAAC,QAGpD,IAQaiS,GAAwBt2B,EAAAA,KAAWuxG,IAahDA,GAAYC,UAAY,CAQtBhiG,OAAQiiG,IAAAA,MAAgB,CACtB1jG,QAAS0jG,IAAAA,OAAiBC,aAK5B,aAAcD,IAAAA,OAId,kBAAmBA,IAAAA,OAKnBjpG,WAAYipG,IAAAA,KAKZv7E,aAAcu7E,IAAAA,KAId7iD,eAAgB6iD,IAAAA,OAKhBj0C,kBAAmBi0C,IAAAA,KAInBnvG,QAASmvG,IAAAA,OAKTjjE,2BAA4BijE,IAAAA,OAK5BvyD,aAAcuyD,IAAAA,OACd/X,oBAAqB+X,IAAAA,QAAkBA,IAAAA,QAKvCrrD,mBAAoBqrD,IAAAA,OAIpB16F,SAAwB06F,IAAAA,MAAgBC,WC5G/B,IAAM,MDuHfpsB,gBAAiBmsB,IAAAA,OAKjBh6F,sBAAuBg6F,IAAAA,OAKvB5wG,WAAY4wG,IAAAA,OAKZ3wG,gBAAiB2wG,IAAAA,OAKjB/6F,QAAS+6F,IAAAA,MAAgB,CAAC,cAAe,UAAW,aAKpDjxB,oBAAqBixB,IAAAA,KAKrBhnE,kBAAmBgnE,IAAAA,KAKnBjlB,sBAAuBilB,IAAAA,KAKvBxZ,uBAAwBwZ,IAAAA,KAMxBrwE,YAAaqwE,IAAAA,KAKbvZ,2BAA4BuZ,IAAAA,KAK5BtZ,sBAAuBsZ,IAAAA,KAKvB/8D,SAAU+8D,IAAAA,MAAgB,CAAC,OAAQ,QAKnCt1F,qBAAsBs1F,IAAAA,MAAgB,CACpCr1F,OAAQq1F,IAAAA,KACR74F,eAAgB64F,IAAAA,KAChBE,4BAA6BF,IAAAA,OAM/B/0E,iBAAkB+0E,IAAAA,OAMlBrZ,WAAYqZ,IAAAA,MAAgB,CAAC,SAAU,WAIvC1yF,YAAa0yF,IAAAA,MAAgB,CAC3BnxF,MAAOmxF,IAAAA,QAAkBA,IAAAA,MAAgB,CACvCl6F,MAAOk6F,IAAAA,OAAiBC,WACxBz8F,GAAIw8F,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAC3C7wF,SAAU6wF,IAAAA,OAAiBC,WAC3B3/F,MAAO0/F,IAAAA,OACLC,WACJ5yE,cAAe2yE,IAAAA,MAAgB,CAAC,MAAO,OACvCpvE,gCAAiCovE,IAAAA,KACjCzyE,yBAA0ByyE,IAAAA,MAAgB,CAAC,MAAO,OAClDxyF,kBAAmBwyF,IAAAA,QAMrB5Z,eAAgB4Z,IAAAA,OAMhBh8B,iBAAkBg8B,IAAAA,KAMlBG,sBAAuBH,IAAAA,KAQvBpI,sBAAuBoI,IAAAA,KAMvB52B,gBAAiB42B,IAAAA,KAMjBvI,aAAcuI,IAAAA,KAIdhwE,SAAUgwE,IAAAA,KAMVrI,cAAeqI,IAAAA,KAKfntF,WAAYmtF,IAAAA,KAKZvrC,qBAAsBurC,IAAAA,KAKtB5rC,2BAA4B4rC,IAAAA,KAM5B/wE,iBAAkB+wE,IAAAA,KAMlB50D,aAAc40D,IAAAA,OAMdniD,eAAgBmiD,IAAAA,KAMhB18E,gBAAiB08E,IAAAA,KAOjBnZ,4BAA6BmZ,IAAAA,KAI7B53F,QAAS43F,IAAAA,KAKT5+E,WAAY4+E,IAAAA,OAKZrpF,OAAQqpF,IAAAA,MAAgB,CACtB7pF,MAAO6pF,IAAAA,KAAeC,WACtB/qG,MAAO8qG,IAAAA,KAAeC,WACtB7pF,KAAM4pF,IAAAA,KAAeC,WACrB5iG,KAAM2iG,IAAAA,KAAeC,aAMvB1pF,SAAUypF,IAAAA,MAAgB,CAAC,QAAS,QAAS,OAAQ,QAAQ,IAI7DI,MAAOJ,IAAAA,OAOP/C,YAAa+C,IAAAA,KAOb9C,kBAAmB8C,IAAAA,KAMnB1gD,gBAAiB0gD,IAAAA,KAMjBzgD,eAAgBygD,IAAAA,KAOhB7C,cAAe6C,IAAAA,KAMftiD,uBAAwBsiD,IAAAA,KAKxB3hE,gBAAiB2hE,IAAAA,KAOjBrD,oBAAqBqD,IAAAA,KAOrBpD,0BAA2BoD,IAAAA,KAO3BjD,oBAAqBiD,IAAAA,KAOrBhD,oBAAqBgD,IAAAA,KAOrBlD,kBAAmBkD,IAAAA,KAOnBnD,mBAAoBmD,IAAAA,KAOpBK,oBAAqBL,IAAAA,KAMrB9S,8BAA+B8S,IAAAA,KAM/BpN,oBAAqBoN,IAAAA,KAOrBzC,YAAayC,IAAAA,KAOb1C,WAAY0C,IAAAA,KAMZlJ,wBAAyBkJ,IAAAA,KAOzB5C,uBAAwB4C,IAAAA,KAOxB3C,sBAAuB2C,IAAAA,KAKvBxiD,wBAAyBwiD,IAAAA,KAOzBvD,SAAUuD,IAAAA,KAQVvC,WAAYuC,IAAAA,KAOZxC,iBAAkBwC,IAAAA,KAMlBM,gBAAiBN,IAAAA,KAMjB/8C,eAAgB+8C,IAAAA,KAMhB98C,cAAe88C,IAAAA,KAMf79C,sBAAuB69C,IAAAA,KAMvB1V,0BAA2B0V,IAAAA,KAM3BvL,kBAAmBuL,IAAAA,KAQnBtC,cAAesC,IAAAA,KAKfzlC,gBAAiBylC,IAAAA,QAAkBA,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,MAAgB,CACxFtrG,MAAOsrG,IAAAA,OAAiBC,WACxB3/F,MAAO0/F,IAAAA,OAAiBC,eACrBA,YACLl7E,WAAYt6B,IACe,IAArBA,EAAMs6B,WACD,IAAI7lB,MAAM,CAAC,8DAA+D,0DAA2D,GAAI,8FAA8F/B,KAAK,OAE9O,KAQT86C,eAAgB+nD,IAAAA,MAAgB,CAAC,SAAU,WAI3C/6E,gBAAiB+6E,IAAAA,MAAgB,CAC/Bt7E,KAAMs7E,IAAAA,OAAiBC,WACvB37E,SAAU07E,IAAAA,OAAiBC,aAS7B1iD,iBAAkByiD,IAAAA,KAKlBntB,UAAWmtB,IAAAA,OAKX37E,SAAU27E,IAAAA,OAKVrpE,UAAWqpE,IAAAA,OAIXp+C,cAAeo+C,IAAAA,OAOflZ,uBAAwBkZ,IAAAA,OAIxBh4F,KAAMg4F,IAAAA,QAAkBA,IAAAA,QAAkBC,WAK1Cr8E,aAAco8E,IAAAA,KAIdx0C,kBAAmBw0C,IAAAA,UAAoB,CAACA,IAAAA,QAAkBA,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,SAAmBC,YAAaD,IAAAA,OAAkBA,IAAAA,SAKnJl3B,eAAgBk3B,IAAAA,MAAgB,CAAC,SAAU,WAK3CpsB,aAAcosB,IAAAA,OAIdnF,cAAemF,IAAAA,OAKfr2B,uBAAwBq2B,IAAAA,KAKxBtzB,yBAA0BszB,IAAAA,KAI1BjwG,UAAWiwG,IAAAA,OAIXlwG,MAAOkwG,IAAAA,OAOPpZ,YAAaoZ,IAAAA,MAAgB,CAAC,SAAU,WAKxCh3E,aAAcg3E,IAAAA,QAAkBA,IAAAA,MAAgB,CAAC,MAAO,UAIxDpzF,UAAWozF,IAAAA,QAAkBA,IAAAA,MAAgB,CAC3Cl6F,MAAOk6F,IAAAA,OAAiBC,WACxB72F,KAAM42F,IAAAA,MAAgB,CAAC,MAAO,YAKhCvgC,GAAIugC,IAAAA,UAAoB,CAACA,IAAAA,QAAkBA,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAAkBA,IAAAA,QAAmBA,IAAAA,KAAgBA,IAAAA,SAMrInjE,0CAA2CmjE,IAAAA,UAAoB,CAACA,IAAAA,MAAgB,CAC9EljE,gBAAiBkjE,IAAAA,KACjBrwD,UAAWqwD,IAAAA,OACTA,IAAAA,O,mHE7qBN,MAAM51G,EAAY,CAAC,QAAS,OAAQ,aAAc,WAQ5Cm2G,EAAmChyG,EAAAA,YAAiB,CAAC9D,EAAOgE,KAChE,MAAM,MACFiG,EAAK,KACLV,EAAI,WACJ8zC,EAAU,QACVS,GACE99C,EACJyF,GAAQC,EAAAA,EAAAA,GAA8B1F,EAAOL,GACzCkH,GAAYgZ,EAAAA,EAAAA,KACZk2F,EAAcpnF,IACdmvB,GACFA,EAAQnvB,EACV,EAGA,IAAIzN,EADN,OAAKm8B,GAee/1C,EAAAA,EAAAA,MAAMu9C,EAAAA,GAAUxjD,EAAAA,EAAAA,GAAS,CAC3C2C,IAAKA,GACJyB,EAAO,CACRq4C,QAASA,EACTj5C,SAAU,CAAC0E,IAAqBhC,EAAAA,EAAAA,KAAKgpF,EAAAA,EAAc,CACjD1rF,SAAU0E,IACRU,OAnBgB1C,EAAAA,EAAAA,KAAKV,EAAUxB,MAAMi5C,gBAAgBj9C,EAAAA,EAAAA,GAAS,CAChE2C,IAAKA,EACLiE,KAAM,QACN+X,KAAM,WACN,aAAc/V,GACbxE,EAAO,CACRq4C,QAASi4D,GACwC,OAA/C70F,EAAuBra,EAAUvB,gBAAqB,EAAS4b,EAAqBo9B,eAAgB,CACtGz5C,SAAuBf,EAAAA,aAAmByF,EAAM,CAC9CvH,SAAU,YAWb,G,mCC7CL,MAAMymB,E,SAAoC3kB,mBAAoBqC,E,6DCCvD,MAAM0Z,EAAmBA,KAC9B,MAAMm2F,EAAelyG,EAAAA,WAAiB2kB,EAAAA,GACtC,IAAKutF,EACH,MAAM,IAAIvhG,MAAM,4GAElB,OAAOuhG,CAAY,C,kDCLN,SAASjhF,EAAekhF,GACrC,IAAI5qG,ECFS,SAAsBitB,EAAO49E,GAC1C,GAAuB,YAAnB,OAAQ59E,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAI69E,EAAO79E,EAAM7H,OAAO2lF,aACxB,QAAajwG,IAATgwG,EAAoB,CACtB,IAAI9zF,EAAM8zF,EAAKjsF,KAAKoO,EAAO49E,GAAQ,WACnC,GAAqB,YAAjB,OAAQ7zF,GAAmB,OAAOA,EACtC,MAAM,IAAIg0F,UAAU,+CACtB,CACA,OAAiB,WAATH,EAAoB31E,OAASt6B,QAAQqyB,EAC/C,CDPY,CAAY29E,EAAK,UAC3B,MAAwB,YAAjB,OAAQ5qG,GAAoBA,EAAMk1B,OAAOl1B,EAClD,C,kBELe,SAASirG,EAAQ74D,GAG9B,OAAO64D,EAAU,mBAAqB7lF,QAAU,iBAAmBA,OAAO8lF,SAAW,SAAU94D,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBhtB,QAAUgtB,EAAEt0B,cAAgBsH,QAAUgtB,IAAMhtB,OAAO1G,UAAY,gBAAkB0zB,CACpH,EAAG64D,EAAQ74D,EACb,C","sources":["../../../node_modules/@mui/material/Badge/badgeClasses.js","../../../node_modules/@mui/material/Badge/Badge.js","../../../node_modules/@mui/base/useBadge/useBadge.js","../../../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../../../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../../../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../../../node_modules/@mui/material/Checkbox/checkboxClasses.js","../../../node_modules/@mui/material/Checkbox/Checkbox.js","../../../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../../../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../../../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../../../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useLazyRef.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useOnMount.js","../../../node_modules/@mui/x-data-grid/utils/warning.js","../../../node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/reselect/es/defaultMemoize.js","../../../node_modules/reselect/es/index.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/components/base/GridBody.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/GridApiContext.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/utils/EventManager.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useTimeout.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/colDef/utils.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/material/internal/svg-icons/LastPage.js","../../../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../../../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../../../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../../../node_modules/@mui/material/TablePagination/TablePagination.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../../../node_modules/@mui/x-data-grid/constants/envConstants.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/utils/fastMemo.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/internals/utils/slotsMigration.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/utils/esm/chainPropTypes/chainPropTypes.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCellItem.js","../../../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../../node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"classes\", \"component\", \"components\", \"componentsProps\", \"children\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"slots\", \"slotProps\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useBadge } from '@mui/base/useBadge';\nimport { useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  color: (theme.vars || theme).palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _ref, _slots$root, _ref2, _slots$badge, _slotProps$root, _slotProps$badge;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n      anchorOrigin: anchorOriginProp = {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      className,\n      component,\n      components = {},\n      componentsProps = {},\n      children,\n      overlap: overlapProp = 'rectangular',\n      color: colorProp = 'default',\n      invisible: invisibleProp = false,\n      max: maxProp = 99,\n      badgeContent: badgeContentProp,\n      slots,\n      slotProps,\n      showZero = false,\n      variant: variantProp = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = (_ref = (_slots$root = slots == null ? void 0 : slots.root) != null ? _slots$root : components.Root) != null ? _ref : BadgeRoot;\n  const BadgeSlot = (_ref2 = (_slots$badge = slots == null ? void 0 : slots.badge) != null ? _slots$badge : components.Badge) != null ? _ref2 : BadgeBadge;\n  const rootSlotProps = (_slotProps$root = slotProps == null ? void 0 : slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  const badgeSlotProps = (_slotProps$badge = slotProps == null ? void 0 : slotProps.badge) != null ? _slotProps$badge : componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps == null ? void 0 : rootSlotProps.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps == null ? void 0 : badgeSlotProps.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, _extends({}, rootProps, {\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, _extends({}, badgeProps, {\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nexport function useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"required\", \"slotProps\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { useFormControl } from '../FormControl';\nimport Stack from '../Stack';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  var _ref, _slotProps$typography;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n      className,\n      componentsProps = {},\n      control,\n      disabled: disabledProp,\n      disableTypography,\n      label: labelProp,\n      labelPlacement = 'end',\n      required: requiredProp,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const disabled = (_ref = disabledProp != null ? disabledProp : control.props.disabled) != null ? _ref : muiFormControl == null ? void 0 : muiFormControl.disabled;\n  const required = requiredProp != null ? requiredProp : control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  const typographySlotProps = (_slotProps$typography = slotProps.typography) != null ? _slotProps$typography : componentsProps.typography;\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\"\n    }, typographySlotProps, {\n      className: clsx(classes.label, typographySlotProps == null ? void 0 : typographySlotProps.className),\n      children: label\n    }));\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(Stack, {\n      display: \"block\",\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--selectionMode', 'cell', 'cellContent', 'cellCheckbox', 'cellSkeleton', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnGroupHeader', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeader--showColumnBorder', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorderColor', 'cell--withRightBorder', 'columnHeader--withRightBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${gridClasses.columnSeparator}, .${gridClasses['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${gridClasses.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${gridClasses.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${gridClasses.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${gridClasses.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${gridClasses['root--disableUserSelection']} .${gridClasses.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${gridClasses.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  },\n  // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${gridClasses['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${gridClasses['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${gridClasses['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${gridClasses['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = getBorderColor(theme);\n  const radius = theme.shape.borderRadius;\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': theme.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': theme.vars ? `rgba(${theme.vars.palette.background.defaultChannel} / ${theme.vars.palette.action.disabledOpacity})` : alpha(theme.palette.background.default, theme.palette.action.disabledOpacity),\n    '--DataGrid-cellOffsetMultiplier': 2,\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (theme.vars || theme).palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`&.${gridClasses.autosizing}`]: {\n      [`& .${gridClasses.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      [`& .${gridClasses.cell} > *`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / 0.5)` : alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      borderBottom: `none`\n    },\n    [`& .${gridClasses['columnHeader--filledGroup']}.${gridClasses['columnHeader--showColumnBorder']}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.headerFilterRow}`]: {\n      borderTop: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    '@media (hover: hover)': {\n      [`& .${gridClasses.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${gridClasses.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${gridClasses.columnHeaders}`]: columnHeadersStyles,\n      [`& .${gridClasses.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (theme.vars || theme).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: (theme.vars || theme).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: (theme.vars || theme).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(\n                ${theme.vars.palette.action.selectedOpacity} + \n                ${theme.vars.palette.action.hoverOpacity}\n              ))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: '1px solid',\n      '&.Mui-selected': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity + theme.palette.action.hoverOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`&.${gridClasses['root--disableUserSelection']} .${gridClasses.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: (theme.vars || theme).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(theme.vars || theme).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: (theme.vars || theme).palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: (theme.vars || theme).palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`.${gridClasses.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${gridClasses['cell--withRightBorder']}`]: {\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${gridClasses['columnHeader--withRightBorder']}`]: {\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: (theme.vars || theme).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: (theme.vars || theme).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n  return gridStyle;\n});","import * as React from 'react';\nconst UNINITIALIZED = {};\n\n// See https://github.com/facebook/react/issues/14490 for when to use this.\nexport function useLazyRef(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}","import * as React from 'react';\nconst EMPTY = [];\nexport function useOnMount(fn) {\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable no-restricted-syntax */\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  /* eslint-enable no-restricted-syntax */\n  /* eslint-enable guard-for-in */\n\n  return aLength === bLength;\n}","import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: new WeakMap()\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g. `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam != null ? instanceIdParam : isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID;\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (...selectorArgs) => {\n    var _cache$get, _cache$get3;\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const {\n      cache\n    } = cacheContainer;\n    if (cache.get(cacheKey) && (_cache$get = cache.get(cacheKey)) != null && _cache$get.get(args)) {\n      var _cache$get2;\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return (_cache$get2 = cache.get(cacheKey)) == null ? void 0 : _cache$get2.get(args)(state, cacheKey);\n    }\n    const newSelector = reselectCreateSelector(...args);\n    if (!cache.get(cacheKey)) {\n      cache.set(cacheKey, new Map());\n    }\n    (_cache$get3 = cache.get(cacheKey)) == null || _cache$get3.set(args, newSelector);\n    return newSelector(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = new WeakMap();\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$unwra;\n  return (_columnGrouping$unwra = columnGrouping == null ? void 0 : columnGrouping.unwrappedGroupingModel) != null ? _columnGrouping$unwra : {};\n});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$looku;\n  return (_columnGrouping$looku = columnGrouping == null ? void 0 : columnGrouping.lookup) != null ? _columnGrouping$looku : {};\n});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$heade;\n  return (_columnGrouping$heade = columnGrouping == null ? void 0 : columnGrouping.headerStructure) != null ? _columnGrouping$heade : [];\n});\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => {\n  var _columnGrouping$maxDe;\n  return (_columnGrouping$maxDe = columnGrouping == null ? void 0 : columnGrouping.maxDepth) != null ? _columnGrouping$maxDe : 0;\n});","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows == null ? void 0 : rows.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  var _rawPinnedRows$bottom, _rawPinnedRows$top;\n  const rawPinnedRows = additionalRowGroups == null ? void 0 : additionalRowGroups.pinnedRows;\n  return {\n    bottom: rawPinnedRows == null || (_rawPinnedRows$bottom = rawPinnedRows.bottom) == null ? void 0 : _rawPinnedRows$bottom.map(rowEntry => {\n      var _rowEntry$model;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model = rowEntry.model) != null ? _rowEntry$model : {}\n      };\n    }),\n    top: rawPinnedRows == null || (_rawPinnedRows$top = rawPinnedRows.top) == null ? void 0 : _rawPinnedRows$top.map(rowEntry => {\n      var _rowEntry$model2;\n      return {\n        id: rowEntry.id,\n        model: (_rowEntry$model2 = rowEntry.model) != null ? _rowEntry$model2 : {}\n      };\n    })\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  return ((pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.length) || 0) + ((pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.length) || 0);\n});","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nexport const useGridAriaAttributes = () => {\n  var _rootProps$experiment;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 && rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': !rootProps.disableMultipleRowSelection\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  var _rootProps$experiment;\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const getAriaAttributes = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 // ariaV7 should never change\n  ? null : useGridAriaAttributes;\n  const ariaAttributes = typeof getAriaAttributes === 'function' ? getAriaAttributes() : null;\n  const ownerState = _extends({}, rootProps, {\n    density: densityValue\n  });\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.register('public', {\n    rootElementRef: rootContainerRef\n  });\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, ariaAttributes, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.preferencesPanel, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.preferencesPanel)), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment;\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const getAriaAttributes = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.ariaV7 // ariaV7 should never change\n  ? useGridAriaAttributes : null;\n  const ariaAttributes = typeof getAriaAttributes === 'function' ? getAriaAttributes() : null;\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    ownerState: rootProps\n  }, ariaAttributes, {\n    children: props.children\n  }));\n});","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector,\n// TODO rows v6: Is this the best approach ?\n(sortedIds, idRowsLookup) => sortedIds.map(id => {\n  var _idRowsLookup$id;\n  return {\n    id,\n    model: (_idRowsLookup$id = idRowsLookup[id]) != null ? _idRowsLookup$id : {}\n  };\n}));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n    if (!item.field) {\n      return false;\n    }\n    const column = columnLookup[item.field];\n    if (!(column != null && column.filterOperators) || (column == null || (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n    if (!filterOperator) {\n      return false;\n    }\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, unstable_gridTabIndexColumnGroupHeaderSelector, unstable_gridFocusColumnGroupHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridDensityFactorSelector } from '../../hooks/features/density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridBody(props) {\n  const {\n    VirtualScrollerComponent,\n    ColumnHeadersProps,\n    children\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const rootRef = React.useRef(null);\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, unstable_gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, unstable_gridFocusColumnGroupHeaderSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  useEnhancedEffect(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n    const elementToObserve = rootRef.current;\n    if (typeof ResizeObserver === 'undefined') {\n      return () => {};\n    }\n    let animationFrame;\n    const observer = new ResizeObserver(() => {\n      // See https://github.com/mui/mui-x/issues/8733\n      animationFrame = requestAnimationFrame(() => {\n        apiRef.current.computeSizeAndPublishResizeEvent();\n      });\n    });\n    if (elementToObserve) {\n      observer.observe(elementToObserve);\n    }\n    return () => {\n      if (animationFrame) {\n        window.cancelAnimationFrame(animationFrame);\n      }\n      if (elementToObserve) {\n        observer.unobserve(elementToObserve);\n      }\n    };\n  }, [apiRef]);\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerElementRef: columnsContainerRef,\n    columnHeadersElementRef: columnHeadersRef,\n    virtualScrollerRef,\n    mainElementRef: rootRef\n  });\n  const hasDimensions = !!apiRef.current.getRootDimensions();\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    ref: rootRef,\n    children: [/*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef,\n      visibleColumns: visibleColumns,\n      filterColumnLookup: filterColumnLookup,\n      sortColumnLookup: sortColumnLookup,\n      columnPositions: columnPositions,\n      columnHeaderTabIndexState: columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n      columnHeaderFocus: columnHeaderFocus,\n      columnGroupHeaderFocus: columnGroupHeaderFocus,\n      densityFactor: densityFactor,\n      headerGroupingMaxDepth: headerGroupingMaxDepth,\n      columnMenuState: columnMenuState,\n      columnVisibility: columnVisibility,\n      columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence: hasOtherElementInTabSequence\n    }, ColumnHeadersProps)), hasDimensions && /*#__PURE__*/_jsx(VirtualScrollerComponent\n    // The content is only rendered after dimensions are computed because\n    // the lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // If this event is published while dimensions haven't been computed,\n    // the `onFetchRows` prop won't be called during mount.\n    , {\n      ref: virtualScrollerRef\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersProps: PropTypes.object,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$slotProps;\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.footer));\n}","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n          (_handlerRef$current = handlerRef.current) == null || _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n        (_subscription$current = subscription.current) == null || _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n            (_handlerRef$current2 = handlerRef.current) == null || _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        var _subscription$current2;\n        (_subscription$current2 = subscription.current) == null || _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n  (_registryContainer$re = registryContainer.registry) == null || _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","import * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  var _publicApiRef$current;\n  const existingPrivateApi = (_publicApiRef$current = publicApiRef.current) == null ? void 0 : _publicApiRef$current[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if ((currentPrivateMethod == null ? void 0 : currentPrivateMethod.spying) === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if ((currentPublicMethod == null ? void 0 : currentPublicMethod.spying) === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef, props);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","export const isEscapeKey = key => key === 'Escape'; // TODO remove\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace';\n\n// Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isEnterKey(event.key) || isDeleteKeys(event.key) || isPrintableKey(event);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$slotProps;\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null || input.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { buildWarning } from '../../../utils/warning';\nimport { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  return 0;\n};\nexport const noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridFilteredTopLevelRowCountSelector, gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridFilteredTopLevelRowCountSelector, (paginationModel, visibleTopLevelRowCount) => getPageCount(visibleTopLevelRowCount, paginationModel.pageSize));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    var _rowTree$row$id;\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = (_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$slotProps;\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getCellParams(id, field));\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if ((meta == null ? void 0 : meta.changeReason) !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column) {\n    return null;\n  }\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nclass Timeout {\n  constructor() {\n    this.currentId = 0;\n    this.clear = () => {\n      if (this.currentId !== 0) {\n        clearTimeout(this.currentId);\n        this.currentId = 0;\n      }\n    };\n    this.disposeEffect = () => {\n      return this.clear;\n    };\n  }\n  static create() {\n    return new Timeout();\n  }\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(fn, delay);\n  }\n}\nexport function useTimeout() {\n  const timeout = useLazyRef(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$slotProps;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id) {\n      var _item$value2;\n      setFilterValueState(String((_item$value2 = item.value) != null ? _item$value2 : ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$slotProps;\n      return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/**\n * A global API ref, for v7-to-legacy converter\n */\nexport const GLOBAL_API_REF = {\n  current: null\n};\n\n/**\n * A tagger to determine if the filter is internal or custom user-supplied.\n * To be a valid internal filter, the v7 function *must* be defined/redefined at\n * the same time as the legacy one.\n * https://github.com/mui/mui-x/pull/9254#discussion_r1231095551\n */\nexport function tagInternalFilter(fn) {\n  fn.isInternal = true;\n  return fn;\n}\nexport function isInternalFilter(fn) {\n  return fn !== undefined && fn.isInternal === true;\n}\nexport function convertFilterV7ToLegacy(fn) {\n  return tagInternalFilter((filterItem, column) => {\n    const filterFn = fn(filterItem, column);\n    if (!filterFn) {\n      return filterFn;\n    }\n    return cellParams => {\n      return filterFn(cellParams.value, cellParams.row, column, GLOBAL_API_REF.current);\n    };\n  });\n}\nexport function convertLegacyOperators(ops) {\n  return ops.map(op => {\n    return _extends({}, op, {\n      getApplyFilterFn: convertFilterV7ToLegacy(op.getApplyFilterFnV7),\n      getApplyFilterFnV7: tagInternalFilter(op.getApplyFilterFnV7)\n    });\n  });\n}\nexport function convertQuickFilterV7ToLegacy(fn) {\n  return tagInternalFilter((filterItem, column, apiRef) => {\n    const filterFn = fn(filterItem, column, apiRef);\n    if (!filterFn) {\n      return filterFn;\n    }\n    return cellParams => {\n      return filterFn(cellParams.value, cellParams.row, column, apiRef);\n    };\n  });\n}","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { GLOBAL_API_REF, isInternalFilter } from '../../../colDef/utils';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\n\n// Fixes https://github.com/mui/mui-x/issues/10056\nconst globalScope = typeof window === 'undefined' ? globalThis : window;\nconst evalCode = globalScope[atob('ZXZhbA==')];\nlet hasEval;\ntry {\n  hasEval = evalCode('true');\n} catch (_) {\n  hasEval = false;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning('MUI: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning('MUI: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    var _filterItem$value;\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!(filterOperators != null && filterOperators.length)) {\n    throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const hasUserFunctionLegacy = !isInternalFilter(filterOperator.getApplyFilterFn);\n  const hasUserFunctionV7 = !isInternalFilter(filterOperator.getApplyFilterFnV7);\n  const publicApiRef = getPublicApiRef(apiRef);\n  if (filterOperator.getApplyFilterFnV7 && !(hasUserFunctionLegacy && !hasUserFunctionV7)) {\n    const applyFilterOnRow = filterOperator.getApplyFilterFnV7(newFilterItem, column);\n    if (typeof applyFilterOnRow !== 'function') {\n      return null;\n    }\n    return {\n      v7: true,\n      item: newFilterItem,\n      fn: row => {\n        let value = apiRef.current.getRowValue(row, column);\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        return applyFilterOnRow(value, row, column, publicApiRef);\n      }\n    };\n  }\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    v7: false,\n    item: newFilterItem,\n    fn: rowId => {\n      const params = apiRef.current.getCellParams(rowId, newFilterItem.field);\n      GLOBAL_API_REF.current = publicApiRef;\n      if (ignoreDiacritics) {\n        params.value = removeDiacritics(params.value);\n      }\n      const result = applyFilterOnRow(params);\n      GLOBAL_API_REF.current = null;\n      return result;\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (!hasEval || disableEval) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.v7 ? applier.fn(row) : applier.fn(apiRef.current.getRowId(row));\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `eval()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, e.g. `{ [dynamicKey]: value }`.\n  const filterItemTemplate = `(function filterItem$$(getRowId, appliers, row, shouldApplyFilter) {\n      ${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\n      const result$$ = {\n      ${appliers.map((applier, i) => `${JSON.stringify(String(applier.item.id))}:\n          !shouldApply${i} ?\n            false :\n            ${applier.v7 ? `appliers[${i}].fn(row)` : `appliers[${i}].fn(getRowId(row))`},\n      `).join('\\n')}};\n\n      return result$$;\n    })`;\n  const filterItemCore = evalCode(filterItemTemplate.replaceAll('$$', String(filterItemsApplierId)));\n  const filterItem = (row, shouldApplyItem) => {\n    return filterItemCore(apiRef.current.getRowId, appliers, row, shouldApplyItem);\n  };\n  filterItemsApplierId += 1;\n  return filterItem;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  var _filterModel$quickFil, _filterModel$quickFil2, _filterModel$quickFil3;\n  const quickFilterValues = (_filterModel$quickFil = (_filterModel$quickFil2 = filterModel.quickFilterValues) == null ? void 0 : _filterModel$quickFil2.filter(Boolean)) != null ? _filterModel$quickFil : [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const quickFilterExcludeHiddenColumns = (_filterModel$quickFil3 = filterModel.quickFilterExcludeHiddenColumns) != null ? _filterModel$quickFil3 : false;\n  const columnFields = quickFilterExcludeHiddenColumns ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n    const getApplyQuickFilterFnV7 = column == null ? void 0 : column.getApplyQuickFilterFnV7;\n    const hasUserFunctionLegacy = !isInternalFilter(getApplyQuickFilterFn);\n    const hasUserFunctionV7 = !isInternalFilter(getApplyQuickFilterFnV7);\n    if (getApplyQuickFilterFnV7 && !(hasUserFunctionLegacy && !hasUserFunctionV7)) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            v7: true,\n            fn: getApplyQuickFilterFnV7(value, column, publicApiRef)\n          };\n        })\n      });\n    } else if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            v7: false,\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n    const usedCellParams = {};\n\n    /* eslint-disable no-restricted-syntax, no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (applier.v7) {\n          if (ignoreDiacritics) {\n            value = removeDiacritics(value);\n          }\n          const isMatching = applier.fn(value, row, column, publicApiRef);\n          if (isMatching) {\n            result[filterValue] = true;\n            continue outer;\n          }\n        } else {\n          var _usedCellParams$field;\n          const cellParams = (_usedCellParams$field = usedCellParams[field]) != null ? _usedCellParams$field : apiRef.current.getCellParams(apiRef.current.getRowId(row), field);\n          if (ignoreDiacritics) {\n            cellParams.value = removeDiacritics(cellParams.value);\n          }\n          usedCellParams[field] = cellParams;\n          const isMatching = applier.fn(cellParams);\n          if (isMatching) {\n            result[filterValue] = true;\n            continue outer;\n          }\n        }\n      }\n      result[filterValue] = false;\n    }\n    /* eslint-enable no-restricted-syntax, no-labels */\n\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    var _isRowMatchingFilterI, _isRowMatchingQuickFi;\n    result.passingFilterItems = (_isRowMatchingFilterI = isRowMatchingFilterItems == null ? void 0 : isRowMatchingFilterItems(row, shouldApplyFilter)) != null ? _isRowMatchingFilterI : null;\n    result.passingQuickFilterValues = (_isRowMatchingQuickFi = isRowMatchingQuickFilter == null ? void 0 : isRowMatchingQuickFilter(row, shouldApplyFilter)) != null ? _isRowMatchingQuickFi : null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    var _filterModel$logicOpe;\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = (_filterModel$logicOpe = filterModel.logicOperator) != null ? _filterModel$logicOpe : getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    var _filterModel$quickFil4;\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = (_filterModel$quickFil4 = filterModel.quickFilterLogicOperator) != null ? _filterModel$quickFil4 : getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { convertLegacyOperators, tagInternalFilter } from './utils';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = tagInternalFilter(value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n});\nexport const getGridStringOperators = (disableTrim = false) => convertLegacyOperators([{\n  value: 'contains',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}]);","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\nimport { convertQuickFilterV7ToLegacy } from './utils';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: convertQuickFilterV7ToLegacy(getGridStringQuickFilterFn),\n  getApplyQuickFilterFnV7: getGridStringQuickFilterFn\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp\n  });\n};\nexport const isAutoGeneratedRow = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[child])) {\n      validDescendants.push(child);\n    }\n    validDescendants.push(...getTreeNodeDescendants(tree, child, skipAutoGeneratedRows));\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates\n}) => {\n  var _previousCache$update, _previousCache$update2, _previousCache$update3;\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI: Unable to prepare a partial update if a full update is not applied yet');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...((_previousCache$update = previousCache.updates.actions.insert) != null ? _previousCache$update : [])],\n      modify: [...((_previousCache$update2 = previousCache.updates.actions.modify) != null ? _previousCache$update2 : [])],\n      remove: [...((_previousCache$update3 = previousCache.updates.actions.remove) != null ? _previousCache$update3 : [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup)\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = (pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  const bottomPinnedRowsHeight = (pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0)) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef, rowHeight) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  return `var(--DataGrid-overlayHeight, ${2 * Math.floor(rowHeight * densityFactor)}px)`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutoGeneratedRow } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (isAutoGeneratedRow(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  var _rootProps$slotProps;\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  var _rootProps$slotProps, _baseSelectProps$nati, _rootProps$slotProps2, _rootProps$slotProps3;\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const baseSelectOptionProps = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelectOption) || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp != null ? labelProp : apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: \"standard\",\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: \"standard\",\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nimport { convertLegacyOperators } from './utils';\nexport const getGridBooleanOperators = () => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = filterItem.value === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nfunction sanitizeCellValue(value, delimiterCharacter) {\n  if (typeof value === 'string') {\n    // Make sure value containing delimiter or line break won't be split into multiple rows\n    if ([delimiterCharacter, '\\n', '\\r', '\"'].some(delimiter => value.includes(delimiter))) {\n      return `\"${value.replace(/\"/g, '\"\"')}\"`;\n    }\n    return value;\n  }\n  return value;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    delimiterCharacter,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    var _cellParams$value2;\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      var _cellParams$value;\n      value = (_cellParams$value = cellParams.value) == null ? void 0 : _cellParams$value.toISOString();\n    } else if (typeof ((_cellParams$value2 = cellParams.value) == null ? void 0 : _cellParams$value2.toString) === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, delimiterCharacter);\n};\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.delimiterCharacter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.delimiterCharacter);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  delimiterCharacter,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    delimiterCharacter\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        objectFormattedValueWarning();\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      delimiterCharacter,\n      ignoreValueFormatter\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    delimiterCharacter,\n    includeHeaders,\n    includeColumnGroupsHeaders,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    delimiterCharacter,\n    ignoreValueFormatter\n  })}\\r\\n`, '').trim();\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.unstable_getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.unstable_getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        delimiterCharacter,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    delimiterCharacter,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  var _window$getSelection;\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if ((_window$getSelection = window.getSelection()) != null && _window$getSelection.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.unstable_ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp == null ? void 0 : ignoreValueFormatterProp.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key === 'c')) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        // TODO: make it configurable\n        delimiter: clipboardCopyCellDelimiter\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          delimiterCharacter: clipboardCopyCellDelimiter,\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { convertLegacyOperators, tagInternalFilter } from './utils';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = tagInternalFilter(value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n});\nexport const getGridNumericOperators = () => convertLegacyOperators([{\n  value: '=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { convertQuickFilterV7ToLegacy } from './utils';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: convertQuickFilterV7ToLegacy(getGridNumericQuickFilterFn),\n  getApplyQuickFilterFnV7: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$slotProps;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    var _item$value2;\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nimport { convertLegacyOperators } from './utils';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    const timeToCompare = dateCopy.setHours(showTime ? value.getHours() : 0, showTime ? value.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\nexport const getGridDateOperators = showTime => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFnV7: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFnV7: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const hasUpdatedEditValueOnMount = React.useRef(false);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  const handleInputRef = el => {\n    inputRef.current = el;\n    if (meta != null && meta.unstable_updateValueOnRender && !hasUpdatedEditValueOnMount.current) {\n      const inputValue = inputRef.current.value;\n      const parsedDate = parseValueToDate(inputValue);\n      setValueState({\n        parsed: parsedDate,\n        formatted: inputValue\n      });\n      apiRef.current.setEditCellValue({\n        id,\n        field,\n        value: parsedDate\n      });\n      hasUpdatedEditValueOnMount.current = true;\n    }\n  };\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: handleInputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport function gridDateFormatter({\n  value,\n  field,\n  id\n}) {\n  if (!value) {\n    return '';\n  }\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId: id,\n    field\n  });\n  return value.toLocaleDateString();\n}\nexport function gridDateTimeFormatter({\n  value,\n  field,\n  id\n}) {\n  if (!value) {\n    return '';\n  }\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId: id,\n    field\n  });\n  return value.toLocaleString();\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","export function isSingleSelectColDef(colDef) {\n  return (colDef == null ? void 0 : colDef.type) === 'singleSelect';\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}\nexport const getLabelFromValueOption = valueOption => {\n  const label = typeof valueOption === 'object' ? valueOption.label : valueOption;\n  return label != null ? String(label) : '';\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\", \"getOptionLabel\", \"getOptionValue\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$slotProps, _baseSelectProps$nati, _rootProps$slotProps2;\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell,\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  const _ref = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelect) || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) == null || _inputRef$current.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  let valueOptions;\n  if (typeof (colDef == null ? void 0 : colDef.valueOptions) === 'function') {\n    valueOptions = colDef == null ? void 0 : colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptions = colDef == null ? void 0 : colDef.valueOptions;\n  }\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = getOptionValueProp || colDef.getOptionValue;\n  const getOptionLabel = getOptionLabelProp || colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      var _rootProps$slotProps3;\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, ((_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseSelectOption) || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"getOptionLabel\", \"getOptionValue\", \"placeholder\", \"tabIndex\", \"label\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column: {\n    valueOptions,\n    field\n  },\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    const label = getOptionLabel(option);\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$slotProps$, _rootProps$slotProps, _resolvedColumn, _resolvedColumn2, _rootProps$slotProps2, _rootProps$slotProps3, _rootProps$slotProps4;\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = (_rootProps$slotProps$ = (_rootProps$slotProps = rootProps.slotProps) == null || (_rootProps$slotProps = _rootProps$slotProps.baseSelect) == null ? void 0 : _rootProps$slotProps.native) != null ? _rootProps$slotProps$ : true;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = getOptionValueProp || ((_resolvedColumn = resolvedColumn) == null ? void 0 : _resolvedColumn.getOptionValue);\n  const getOptionLabel = getOptionLabelProp || ((_resolvedColumn2 = resolvedColumn) == null ? void 0 : _resolvedColumn2.getOptionLabel);\n  const currentValueOptions = React.useMemo(() => {\n    if (!resolvedColumn) {\n      return undefined;\n    }\n    return typeof resolvedColumn.valueOptions === 'function' ? resolvedColumn.valueOptions({\n      field: resolvedColumn.field\n    }) : resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  React.useEffect(() => {\n    var _itemValue;\n    let itemValue;\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions, getOptionValue);\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue, getOptionValue]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp != null ? labelProp : apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: \"standard\",\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: \"standard\",\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder != null ? placeholder : apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative\n      }, others, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: (_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (e.g. `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\", \"getOptionLabel\", \"getOptionValue\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  var _resolvedColumn, _resolvedColumn2;\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard',\n      getOptionLabel: getOptionLabelProp,\n      getOptionValue: getOptionValueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = getOptionValueProp || ((_resolvedColumn = resolvedColumn) == null ? void 0 : _resolvedColumn.getOptionValue);\n  const getOptionLabel = getOptionLabelProp || ((_resolvedColumn2 = resolvedColumn) == null ? void 0 : _resolvedColumn2.getOptionLabel);\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    var _resolvedColumn3;\n    if (!((_resolvedColumn3 = resolvedColumn) != null && _resolvedColumn3.valueOptions)) {\n      return [];\n    }\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getOptionValue);\n  }, [resolvedValueOptions, getOptionValue]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // Gets the index matching between values and valueOptions\n        return resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formattedOption => formattedOption === element);\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filteredValues.length !== item.value.length) {\n      // Updates the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filteredValues.map(getOptionValue)\n      }));\n    }\n  }, [item, filteredValues, applyValue, getOptionValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: getOptionLabel(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$slotProps;\n      return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField));\n    }\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue: PropTypes.func,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nimport { convertLegacyOperators } from './utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => convertLegacyOperators([{\n  value: 'is',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFnV7: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFnV7: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(params) {\n    const {\n      id,\n      field,\n      value,\n      api\n    } = params;\n    const colDef = params.api.getColumn(field);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    let valueOptions;\n    if (typeof colDef.valueOptions === 'function') {\n      valueOptions = colDef.valueOptions({\n        id,\n        row: id ? api.getRow(id) : null,\n        field\n      });\n    } else {\n      valueOptions = colDef.valueOptions;\n    }\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, params) => {\n    const colDef = params.colDef;\n    const colDefValueOptions = colDef.valueOptions;\n    const valueOptions = typeof colDefValueOptions === 'function' ? colDefValueOptions({\n      field: colDef.field\n    }) : colDefValueOptions || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  var _rootProps$slotProps;\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      var _savedFocusRef$curren, _savedFocusRef$curren2;\n      (_savedFocusRef$curren = savedFocusRef.current) == null || (_savedFocusRef$curren2 = _savedFocusRef$curren.focus) == null || _savedFocusRef$curren2.call(_savedFocusRef$curren);\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target != null && target.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  var _rootProps$slotProps;\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null || ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      var _options;\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = theme.direction === 'rtl' ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return (_options = options[index + indexMod]) != null && _options.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Enter', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      onClick: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined,\n  getApplyQuickFilterFnV7: undefined\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width || GRID_STRING_COL_DEF.width, newColumn.minWidth || GRID_STRING_COL_DEF.minWidth, newColumn.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(columnTypes, type) {\n  let colDef = columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && columnTypes[type]) {\n    colDef = columnTypes[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current;\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(columnTypes, newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(columnTypes, newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null || (_apiRef$current$getRo2 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, headerHeight) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  return Math.floor(headerHeight * densityFactor) * ((maxDepth != null ? maxDepth : 0) + 1);\n}","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { getGridDefaultColumnTypes } from '../../../colDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultColumnTypes = getGridDefaultColumnTypes();\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _ref, _props$columnVisibili, _props$initialState2;\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: defaultColumnTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.columns,\n    columnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.columns) == null ? void 0 : _props$initialState2.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  var _props$initialState4, _props$slotProps2;\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = defaultColumnTypes;\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    var _columnVisibilityMode;\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState$c, _props$initialState3;\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys((_props$initialState$c = (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.columns) == null ? void 0 : _props$initialState3.columnVisibilityModel) != null ? _props$initialState$c : {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, (_props$initialState4 = props.initialState) == null ? void 0 : _props$initialState4.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const columnVisibilityModelToImport = (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$slotProps;\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$slotProps = props.slotProps) == null ? void 0 : _props$slotProps.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, (_props$slotProps2 = props.slotProps) == null ? void 0 : _props$slotProps2.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: {\n    value: props.density,\n    factor: DENSITY_FACTORS[props.density]\n  }\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback(newDensity => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = {\n        value: newDensity,\n        factor: DENSITY_FACTORS[newDensity]\n      };\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density);\n  }, [apiRef, props.density]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  var _pinnedRows$top, _pinnedRows$bottom;\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = (pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null ? void 0 : _pinnedRows$top.map(row => row.id)) || [];\n  const bottomPinnedRowsIds = (pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null ? void 0 : _pinnedRows$bottom.map(row => row.id)) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null || hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null || hideMenu();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.unstable_ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp == null ? void 0 : ignoreValueFormatterProp.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade, _options$includeColum;\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true,\n      includeColumnGroupsHeaders: (_options$includeColum = options.includeColumnGroupsHeaders) != null ? _options$includeColum : true,\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI: exportAs not supported');\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationModelSelector } from './gridPaginationSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getPageCount, noRowCountInServerMode, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$paginationMode, _props$initialState;\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_props$paginationMode = props.paginationModel) != null ? _props$paginationMode : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.pagination) == null ? void 0 : _props$initialState.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  return _extends({}, state, {\n    pagination: {\n      paginationModel\n    }\n  });\n};\nexport const mergeStateWithPaginationModel = (rowCount, signature, paginationModelProp) => paginationState => {\n  var _paginationModelProp$;\n  let paginationModel = paginationState.paginationModel;\n  const pageSize = (_paginationModelProp$ = paginationModelProp == null ? void 0 : paginationModelProp.pageSize) != null ? _paginationModelProp$ : paginationModel.pageSize;\n  const pageCount = getPageCount(rowCount, pageSize);\n  if (paginationModelProp && ((paginationModelProp == null ? void 0 : paginationModelProp.page) !== paginationModel.page || (paginationModelProp == null ? void 0 : paginationModelProp.pageSize) !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return {\n    paginationModel\n  };\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridPagination');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'pagination',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    var _props$rowCount;\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount = props.rowCount) != null ? _props$rowCount : visibleTopLevelRowCount, props.signature, paginationModel), 'setPaginationModel');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.rowCount, props.signature, visibleTopLevelRowCount]);\n  const pageApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, pageApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.pagination) == null ? void 0 : _props$initialState2.paginationModel) != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.pagination) == null ? void 0 : _props$initialState3.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2, _props$rowCount2;\n    const paginationModel = (_context$stateToResto = context.stateToRestore.pagination) != null && _context$stateToResto.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : visibleTopLevelRowCount, props.signature, paginationModel), 'stateRestorePreProcessing');\n    return params;\n  }, [apiRef, props.autoPageSize, props.rowCount, props.signature, visibleTopLevelRowCount]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    var _apiRef$current$virtu;\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if ((_apiRef$current$virtu = apiRef.current.virtualScrollerRef) != null && _apiRef$current$virtu.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n    apiRef.current.forceUpdate();\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const maximumPageSizeWithoutScrollBar = Math.floor((dimensions.viewportInnerSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom) / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    var _props$rowCount3;\n    apiRef.current.updateControlState('pagination', mergeStateWithPaginationModel((_props$rowCount3 = props.rowCount) != null ? _props$rowCount3 : visibleTopLevelRowCount, props.signature, props.paginationModel));\n  }, [apiRef, props.paginationModel, props.rowCount, props.paginationMode, visibleTopLevelRowCount, props.signature]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { mergeStateWithPaginationModel } from '../pagination/useGridPagination';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.map(id => apiRef.current.getRow(id));\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.offsetHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.offsetHeight) || 0;\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null || _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null || _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props.columnHeaderHeight) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // the footer is always being placed at the bottom of the page as if all rows are exported\n    // so if getRowsToExport is being used to only export a subset of rows then we need to\n    // adjust the footer position to be correctly placed at the bottom of the grid\n    if (options != null && options.getRowsToExport) {\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props.columnHeaderHeight]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu;\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu = _previousGridState$cu.columns) != null && _previousGridState$cu.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.unstable_setVirtualization(true);\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows();\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.updateControlState('pagination',\n      // Using signature `DataGridPro` to allow more than 100 rows in the print export\n      mergeStateWithPaginationModel(visibleRowCount, 'DataGridPro', paginationModel));\n      apiRef.current.forceUpdate();\n    }\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns, options == null ? void 0 : options.includeCheckboxes);\n    if (options != null && options.getRowsToExport) {\n      updateGridRowsForPrint(options.getRowsToExport);\n    }\n    apiRef.current.unstable_setVirtualization(false);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState;\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.filter) == null ? void 0 : _props$initialState.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  var _props$initialState3, _props$slotProps2;\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n      const filteringResult = apiRef.current.applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel != null ? filterModel : getDefaultGridFilterModel()\n      });\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef, props.filterMode, props.disableEval]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        var _column$filterOperato;\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof (filterOperator == null ? void 0 : filterOperator.requiresFilterValue) === 'undefined' ? true : filterOperator == null ? void 0 : filterOperator.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.filter) == null ? void 0 : _props$initialState2.filterModel) != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.filter) == null ? void 0 : _props$initialState3.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$slotProps;\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$slotProps = props.slotProps) == null ? void 0 : _props$slotProps.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, (_props$slotProps2 = props.slotProps) == null ? void 0 : _props$slotProps2.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && filterableColumnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && filterModel.quickFilterExcludeHiddenColumns) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, unstable_gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => unstable_gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    var _event$relatedTarget;\n    if ((_event$relatedTarget = event.relatedTarget) != null && _event$relatedTarget.className.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","/* eslint-disable @typescript-eslint/naming-convention */\nimport { createSelector } from '../../../utils/createSelector';\nexport const unstable_gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const unstable_gridHeaderFilteringEditFieldSelector = createSelector(unstable_gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const unstable_gridHeaderFilteringMenuSelector = createSelector(unstable_gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { unstable_gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { unstable_gridHeaderFilteringEditFieldSelector, unstable_gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled =\n  // @ts-expect-error // TODO move relevant code to the `DataGridPro`\n  props.signature !== 'DataGrid' && props.unstable_headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    var _currentPageRows$rowI;\n    return (_currentPageRows$rowI = currentPageRows[rowIndex]) == null ? void 0 : _currentPageRows$rowI.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const isEditing = unstable_gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = unstable_gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return;\n    }\n    const focusedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    if (currentPageRows.length === 0 || !dimensions) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    ((_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.preferencePanel) != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, (_props$initialState3 = props.initialState) == null ? void 0 : _props$initialState3.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key,\n      colDef\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('17')) {\n        // In React 17, cleaning the input is enough.\n        // The sequence of events makes the key pressed by the end-users update the textbox directly.\n        startCellEditModeParams.deleteValue = true;\n      } else {\n        const initialValue = colDef.valueParser ? colDef.valueParser(key) : key;\n        startCellEditModeParams.initialValue = initialValue;\n      }\n    } else if (reason === GridCellEditStartReasons.deleteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {});\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    let unstable_updateValueOnRender = false;\n    if (deleteValue || initialValue) {\n      newValue = deleteValue ? '' : initialValue;\n      unstable_updateValueOnRender = true;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false,\n      unstable_updateValueOnRender\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    var _editingState$id;\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !((_editingState$id = editingState[id]) != null && (_editingState$id = _editingState$id[field]) != null && _editingState$id.error);\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _copyOfPrevCellModes$, _idToIdLookup$id;\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null || (_copyOfPrevCellModes$ = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n      focusTimeout.current = null;\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete' || event.key === 'Backspace') {\n        // Delete on Windows, Backspace on macOS\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          key: event.key,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason,\n      key,\n      columns\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown) {\n      if (React.version.startsWith('17')) {\n        // In React 17, cleaning the input is enough.\n        // The sequence of events makes the key pressed by the end-users update the textbox directly.\n        startRowEditModeParams.deleteValue = !!field;\n      } else {\n        const colDef = columns.find(col => col.field === field);\n        startRowEditModeParams.initialValue = colDef.valueParser ? colDef.valueParser(key) : key;\n      }\n    } else if (reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {});\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      let unstable_updateValueOnRender = false;\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n        unstable_updateValueOnRender = true;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false,\n        unstable_updateValueOnRender\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    var _editingState$id$fiel, _editingState$id;\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return (_editingState$id$fiel = (_editingState$id = editingState[id]) == null ? void 0 : _editingState$id[field]) != null ? _editingState$id$fiel : null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutoGeneratedRow, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutoGeneratedRow(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = [];\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n      const rowNode = apiRef.current.getRowNode(id);\n      if ((rowNode == null ? void 0 : rowNode.type) === 'pinnedRow') {\n        // @ts-ignore because otherwise `release:build` doesn't work\n        const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n        const prevModel = pinnedRowsCache.idLookup[id];\n        if (prevModel) {\n          pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n        }\n      } else {\n        nonPinnedRowsUpdates.push(update);\n      }\n    });\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => {\n      var _idRowsLookup$id;\n      return [id, (_idRowsLookup$id = idRowsLookup[id]) != null ? _idRowsLookup$id : {}];\n    }));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI: Only group nodes can be expanded or collapsed');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _ref;\n    return (_ref = gridRowTreeSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI: No row with id #${rowId} found`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI: The row reordering do not support reordering of grouped rows yet`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI: The row reordering do not support reordering of footer or grouping rows`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error([\"MUI: You can't replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [replacedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      delete dataRowIdToModelLookup[replacedRowId];\n      delete dataRowIdToIdLookup[replacedRowId];\n      delete tree[replacedRowId];\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId].type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      return;\n    }\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n  return findParentElementFromClassName(cell, gridClasses.row);\n}\n\n// TODO remove\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { GRID_ID_AUTOGENERATED } from './gridRowsUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const {\n    getRowId\n  } = props;\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n      if (!rowModel) {\n        throw new MissingRowIdError(`No row with id #${id} found`);\n      }\n      return rowModel[field];\n    }\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    var _getRowId;\n    const id = GRID_ID_AUTOGENERATED in row ? row[GRID_ID_AUTOGENERATED] : (_getRowId = getRowId == null ? void 0 : getRowId(row)) != null ? _getRowId : row.id;\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [getBaseCellParams, getRowId]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    var _ref;\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    const id = (_ref = getRowId ? getRowId(row) : row.id) != null ? _ref : row[GRID_ID_AUTOGENERATED];\n    const field = colDef.field;\n    return colDef.valueFormatter({\n      id,\n      field,\n      value,\n      api: apiRef.current\n    });\n  }, [apiRef, getRowId, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n  return _extends({}, state, {\n    rowSelection: props.rowSelection ? (_getSelectionModelPro = getSelectionModelPropValue(props.rowSelectionModel)) != null ? _getSelectionModelPro : [] : []\n  });\n};\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleRowSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleRowSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !props.checkboxSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, props.checkboxSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if ((rowNode == null ? void 0 : rowNode.type) === 'footer' || (rowNode == null ? void 0 : rowNode.type) === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    var _closest;\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = (_closest = event.target.closest(`.${gridClasses.cell}`)) == null ? void 0 : _closest.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if ((column == null ? void 0 : column.type) === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n      (_window$getSelection = window.getSelection()) == null || _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState;\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null || (_props$initialState = _props$initialState.sorting) == null ? void 0 : _props$initialState.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  var _props$initialState3;\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      var _col$sortingOrder;\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    var _props$initialState2;\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    ((_props$initialState2 = props.initialState) == null || (_props$initialState2 = _props$initialState2.sorting) == null ? void 0 : _props$initialState2.sortModel) != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, (_props$initialState3 = props.initialState) == null || (_props$initialState3 = _props$initialState3.sorting) == null ? void 0 : _props$initialState3.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: virtualScrollerRef.current.clientWidth,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex != null) {\n      var _querySelector, _querySelector2;\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      const topPinnedRowsHeight = ((_querySelector = virtualScrollerRef.current.querySelector(`.${gridClasses['pinnedRows--top']}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n      const bottomPinnedRowsHeight = ((_querySelector2 = virtualScrollerRef.current.querySelector(`.${gridClasses['pinnedRows--bottom']}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: virtualScrollerRef.current.clientHeight - topPinnedRowsHeight - bottomPinnedRowsHeight,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left != null && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top != null) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(virtualScrollerRef != null && virtualScrollerRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"contentWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridSkeletonCell(props) {\n  const {\n      align,\n      width,\n      contentWidth\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  contentWidth: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.panel, props, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slotProps$firstButto, _slotProps$previousBu, _slotProps$nextButton, _slotProps$lastButton;\n  const {\n      backIconButtonProps,\n      count,\n      disabled = false,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const theme = useTheme();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, (_slotProps$firstButto = slotProps == null ? void 0 : slotProps.firstButton) != null ? _slotProps$firstButto : {}, {\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, (_slotProps$previousBu = slotProps == null ? void 0 : slotProps.previousButton) != null ? _slotProps$previousBu : backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, (_slotProps$nextButton = slotProps == null ? void 0 : slotProps.nextButton) != null ? _slotProps$nextButton : nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, (_slotProps$lastButton = slotProps == null ? void 0 : slotProps.lastButton) != null ? _slotProps$lastButton : {}, {\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    lastButton: PropTypes.object,\n    nextButton: PropTypes.object,\n    previousButton: PropTypes.object\n  })\n} : void 0;\nexport default TablePaginationActions;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"disabled\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\n\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  var _slotProps$select;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = (_slotProps$select = slotProps == null ? void 0 : slotProps.select) != null ? _slotProps$select : SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !selectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, selectProps, {\n        classes: _extends({}, selectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        }),\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps == null ? void 0 : slotProps.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      lastButton: PropTypes.object,\n      nextButton: PropTypes.object,\n      previousButton: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter';\nimport { gridPaginationModelSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCount = React.useMemo(() => {\n    var _ref, _rootProps$rowCount;\n    return (_ref = (_rootProps$rowCount = rootProps.rowCount) != null ? _rootProps$rowCount : visibleTopLevelRowCount) != null ? _ref : 0;\n  }, [rootProps.rowCount, visibleTopLevelRowCount]);\n  const lastPage = React.useMemo(() => Math.floor(rowCount / (paginationModel.pageSize || 1)), [rowCount, paginationModel.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pagination, _rootProps$pagination2;\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = (_rootProps$pagination = (_rootProps$pagination2 = rootProps.paginationModel) == null ? void 0 : _rootProps$pagination2.pageSize) != null ? _rootProps$pagination : paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI: The page size \\`${paginationModel.pageSize}\\` is not preset in the \\`pageSizeOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: paginationModel.page <= lastPage ? paginationModel.page : lastPage,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2, _baseSelectProps$nati, _rootProps$slotProps3, _rootProps$slotProps4, _rootProps$slotProps5, _rootProps$slotProps6, _rootProps$slotProps7, _rootProps$slotProps8, _currentColumn$filter2;\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      multiFilterOperator,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const baseInputLabelProps = ((_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseInputLabel) || {};\n  const baseSelectOptionProps = ((_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseSelectOption) || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const filteredColumns = React.useMemo(() => {\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return filterableColumns;\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: (filterModel == null ? void 0 : filterModel.items) || []\n    });\n    return filterableColumns.filter(column => filteredFields.includes(column.field));\n  }, [filterColumns, filterModel == null ? void 0 : filterModel.items, filterableColumns, item.field]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component is modified\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n        valueRef == null || (_valueRef$current = valueRef.current) == null || _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\"\n      }, (_rootProps$slotProps5 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps5.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$slotProps6 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps6.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.field || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$slotProps7 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps7.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$slotProps8 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps8.baseSelect, {\n        children: currentColumn == null || (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: (filterModel == null ? void 0 : filterModel.items) || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => {\n        var _colDef$filterOperato;\n        return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n      });\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel == null ? void 0 : filterModel.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const addNewFilter = () => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  };\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  const handleRemoveAll = () => {\n    if (items.length === 1 && items[0].value === undefined) {\n      apiRef.current.deleteFilterItem(items[0]);\n      apiRef.current.hideFilterPanel();\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: []\n    }));\n  };\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.logicOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\nfunction GridPanelHeader(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nexport const GRID_EXPERIMENTAL_ENABLED = false;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sort\", \"searchPredicate\", \"autoFocusSearchField\", \"disableHideAllButton\", \"disableShowAllButton\", \"getTogglableColumns\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})({\n  padding: '8px 0px 8px 8px'\n});\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nconst collator = new Intl.Collator();\nconst defaultSearchPredicate = (column, searchValue) => {\n  return (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;\n};\nfunction GridColumnsPanel(props) {\n  var _rootProps$slotProps, _rootProps$slotProps3, _rootProps$slotProps4;\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n      sort,\n      searchPredicate = defaultSearchPredicate,\n      autoFocusSearchField = true,\n      disableHideAllButton = false,\n      disableShowAllButton = false,\n      getTogglableColumns\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    columns.forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: currentColumns.map(column => {\n          var _rootProps$slotProps2;\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            ownerState: rootProps,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.slots.baseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\",\n                inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n              }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(rootProps.slots.columnReorderIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), disableShowAllButton && disableHideAllButton ? null : /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableHideAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.baseButton, {\n        disabled: disableHideAllButton,\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableShowAllButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$slotProps4 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps4.baseButton, {\n        disabled: disableShowAllButton,\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      })) : null]\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Hide all` button will not be displayed.\n   * @default false\n   */\n  disableHideAllButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show all` button will be disabled\n   * @default false\n   */\n  disableShowAllButton: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  slotProps: PropTypes.object,\n  sort: PropTypes.oneOf(['asc', 'desc'])\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    var _apiRef$current$rootE;\n    const columnHeadersElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null || (_apiRef$current$rootE = _apiRef$current$rootE.current) == null ? void 0 : _apiRef$current$rootE.querySelector(`.${gridClasses.columnHeaders}`);\n    if (columnHeadersElement) {\n      setAnchorEl(columnHeadersElement);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"changeReason\", \"unstable_updateValueOnRender\"],\n  _excluded2 = [\"align\", \"children\", \"editCellState\", \"colIndex\", \"column\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"isSelected\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded3 = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"height\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded4 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', isSelected && 'selected', showRightBorder && 'cell--withRightBorder', isSelectionMode && !isEditable && 'cell--selectionMode', 'withBorderColor'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// GridCellWrapper is a compatibility layer for the V6 cell slot. If we can use the more efficient\n// `GridCellV7`, we should. That component is a merge of `GridCellWrapper` and `GridCell`.\n// TODO(v7): Remove the wrapper & cellV6 and use the cellV7 exclusively.\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\nconst GridCellWrapper = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    column,\n    rowId,\n    editCellState\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const managesOwnFocus = column.type === 'actions';\n  const tabIndex = (cellMode === 'view' || !isEditable) && !managesOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  const {\n    slots\n  } = rootProps;\n  const CellComponent = slots.cell;\n  const cellProps = _extends({}, props, {\n    ref,\n    field,\n    formattedValue,\n    hasFocus,\n    isEditable,\n    isSelected,\n    value,\n    cellMode,\n    children,\n    tabIndex,\n    className: clsx(classNames)\n  });\n  return /*#__PURE__*/React.createElement(CellComponent, cellProps);\n});\nconst GridCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _rootProps$experiment, _rootProps$experiment2;\n  const {\n      align,\n      children: childrenProp,\n      colIndex,\n      column,\n      cellMode,\n      field,\n      formattedValue,\n      hasFocus,\n      height,\n      isEditable,\n      isSelected,\n      rowId,\n      tabIndex,\n      value,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = {\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n    };\n\n    return cellStyle;\n  }, [width, height, isNotVisible]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  const managesOwnFocus = column.type === 'actions';\n  let children = childrenProp;\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      role: \"presentation\",\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  const ariaV7 = (_rootProps$experiment2 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment2.ariaV7;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      ref: handleRef,\n      className: clsx(className, classes.root),\n      role: ariaV7 ? 'gridcell' : 'cell',\n      \"data-field\": field,\n      \"data-colindex\": colIndex,\n      \"aria-colindex\": colIndex + 1,\n      \"aria-colspan\": colSpan,\n      style: style,\n      tabIndex: tabIndex,\n      onClick: publish('cellClick', onClick),\n      onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n      onMouseOver: publish('cellMouseOver', onMouseOver),\n      onMouseDown: publishMouseDown('cellMouseDown'),\n      onMouseUp: publishMouseUp('cellMouseUp'),\n      onKeyDown: publish('cellKeyDown', onKeyDown),\n      onKeyUp: publish('cellKeyUp', onKeyUp)\n    }, draggableEventHandlers, other, {\n      onFocus: handleFocus,\n      children: children\n    }))\n  );\n});\nconst MemoizedCellWrapper = fastMemo(GridCellWrapper);\nprocess.env.NODE_ENV !== \"production\" ? GridCellWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']),\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number,\n  colSpan: PropTypes.number,\n  column: PropTypes.object,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  isNotVisible: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number\n} : void 0;\nexport { MemoizedCellWrapper as GridCellWrapper, GridCell };\nconst GridCellV7 = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _getActions, _ref, _rootProps$unstable_c, _rootProps$experiment3, _rootProps$experiment4;\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      height,\n      width,\n      className,\n      showRightBorder,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && ((_getActions = (_ref = column).getActions) == null ? void 0 : _getActions.call(_ref, apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled));\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n  const classNames = apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  });\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  // @ts-expect-error To access `unstable_cellSelection` flag as it's a `premium` feature\n  const isSelectionMode = (_rootProps$unstable_c = rootProps.unstable_cellSelection) != null ? _rootProps$unstable_c : false;\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = {\n      minWidth: width,\n      maxWidth: width,\n      minHeight: height,\n      maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n    };\n\n    return cellStyle;\n  }, [width, height, isNotVisible]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment3 = rootProps.experimentalFeatures) != null && _rootProps$experiment3.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  if (editCellState == null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n    classNames.push(gridClasses['cell--withRenderer']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--withRenderer']);\n  }\n  if (editCellState != null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded4);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses == null ? void 0 : rootClasses['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender == null ? void 0 : valueToRender.toString();\n    children = /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      title: valueString,\n      role: \"presentation\",\n      children: valueString\n    });\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  const ariaV7 = (_rootProps$experiment4 = rootProps.experimentalFeatures) == null ? void 0 : _rootProps$experiment4.ariaV7;\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      ref: handleRef,\n      className: clsx(className, classNames, classes.root),\n      role: ariaV7 ? 'gridcell' : 'cell',\n      \"data-field\": field,\n      \"data-colindex\": colIndex,\n      \"aria-colindex\": colIndex + 1,\n      \"aria-colspan\": colSpan,\n      style: style,\n      tabIndex: tabIndex,\n      onClick: publish('cellClick', onClick),\n      onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n      onMouseOver: publish('cellMouseOver', onMouseOver),\n      onMouseDown: publishMouseDown('cellMouseDown'),\n      onMouseUp: publishMouseUp('cellMouseUp'),\n      onKeyDown: publish('cellKeyDown', onKeyDown),\n      onKeyUp: publish('cellKeyUp', onKeyUp)\n    }, draggableEventHandlers, other, {\n      onFocus: handleFocus,\n      children: children\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellV7.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isNotVisible: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCellV7 = fastMemo(GridCellV7);\nexport { MemoizedGridCellV7 as GridCellV7 };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"hovered\", \"rowId\", \"row\", \"index\", \"style\", \"position\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"isLastVisible\", \"focusedCellColumnIndexNotInRange\", \"isNotVisible\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { randomNumberBetween } from '../utils/utils';\nimport { GridCellWrapper, GridCellV7 } from './cell/GridCell';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: `${gridClasses.cell} ${gridClasses.withBorderColor}`,\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n}\n\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      hovered,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      position,\n      rowHeight,\n      className,\n      visibleColumns,\n      renderedColumns,\n      containerWidth,\n      firstColumnToRender,\n      isLastVisible = false,\n      focusedCellColumnIndexNotInRange,\n      isNotVisible,\n      focusedCell,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const ownerState = {\n    selected,\n    hovered,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight, position);\n    }\n  }, [apiRef, rowHeight, rowId, position]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height, position);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId, position]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if ((column == null ? void 0 : column.type) === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const CellComponent = slots.cell === GridCellV7 ? GridCellV7 : GridCellWrapper;\n  const rowReordering = rootProps.rowReordering;\n  const getCell = (column, cellProps) => {\n    var _editRowsState$rowId$, _editRowsState$rowId;\n    const disableDragEvents = disableColumnReorder && column.disableReorder || !rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n    const editCellState = (_editRowsState$rowId$ = (_editRowsState$rowId = editRowsState[rowId]) == null ? void 0 : _editRowsState$rowId[column.field]) != null ? _editRowsState$rowId$ : null;\n    let cellIsNotVisible = false;\n    if (focusedCellColumnIndexNotInRange !== undefined && visibleColumns[focusedCellColumnIndexNotInRange].field === column.field) {\n      cellIsNotVisible = true;\n    }\n    return /*#__PURE__*/_jsx(CellComponent, _extends({\n      column: column,\n      width: cellProps.width,\n      rowId: rowId,\n      height: rowHeight,\n      showRightBorder: cellProps.showRightBorder,\n      align: column.align || 'left',\n      colIndex: cellProps.indexRelativeToAllColumns,\n      colSpan: cellProps.colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible\n    }, slotProps == null ? void 0 : slotProps.cell), column.field);\n  };\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    let numberOfBaseSizes = 0;\n    const maximumSize = Object.entries(sizes).reduce((acc, [key, size]) => {\n      const isBaseHeight = /^base[A-Z]/.test(key);\n      if (!isBaseHeight) {\n        return acc;\n      }\n      numberOfBaseSizes += 1;\n      if (size > acc) {\n        return size;\n      }\n      return acc;\n    }, 0);\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight\n    });\n    if (sizes != null && sizes.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes != null && sizes.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    var _currentPage$range;\n    const indexRelativeToCurrentPage = index - (((_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const randomNumber = randomNumberBetween(10000, 20, 80);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  if (!rowNode) {\n    return null;\n  }\n  const rowType = rowNode.type;\n  const cells = [];\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    let indexRelativeToAllColumns = firstColumnToRender + i;\n    if (focusedCellColumnIndexNotInRange !== undefined && focusedCell) {\n      if (visibleColumns[focusedCellColumnIndexNotInRange].field === column.field) {\n        indexRelativeToAllColumns = focusedCellColumnIndexNotInRange;\n      } else {\n        indexRelativeToAllColumns -= 1;\n      }\n    }\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      if (rowType !== 'skeletonRow') {\n        const {\n          colSpan,\n          width\n        } = cellColSpanInfo.cellProps;\n        const cellProps = {\n          width,\n          colSpan,\n          showRightBorder: rootProps.showCellVerticalBorder,\n          indexRelativeToAllColumns\n        };\n        cells.push(getCell(column, cellProps));\n      } else {\n        const {\n          width\n        } = cellColSpanInfo.cellProps;\n        const contentWidth = Math.round(randomNumber());\n        cells.push( /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: width,\n          contentWidth: contentWidth,\n          field: column.field,\n          align: column.align\n        }, column.field));\n      }\n    }\n  }\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className, hovered && 'Mui-hovered'),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  containerWidth: PropTypes.number.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedCell: PropTypes.string,\n  focusedCellColumnIndexNotInRange: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  isNotVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  position: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.object,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  var _rootProps$slotProps;\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\"\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target != null && target.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$slotProps;\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef != null && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      columnMenuOpen,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  var _rootProps$slotProps, _colDef$sortingOrder, _rootProps$slotProps2, _colDef$headerName;\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder: rootProps.showColumnVerticalBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = (_colDef$sortingOrder = colDef.sortingOrder) != null ? _colDef$sortingOrder : rootProps.sortingOrder;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.columnHeaderFilterIconButton)), colDef.sortable && !colDef.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = (_colDef$headerName = colDef.headerName) != null ? _colDef$headerName : colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: headerClassName,\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import { createSelector } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"style\"],\n  _excluded2 = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useTheme } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\n\n// Uses binary search to avoid looping through all possible positions\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function binarySearch(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\nexport const areRenderContextsEqual = (context1, context2) => {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n};\n// The `maxSize` is 3 so that reselect caches the `renderedColumns` values for the pinned left,\n// unpinned, and pinned right sections.\nconst MEMOIZE_OPTIONS = {\n  maxSize: 3\n};\nexport const useGridVirtualScroller = props => {\n  var _currentPage$range3, _currentPage$range4;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector);\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const {\n    ref,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const theme = useTheme();\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContextState] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerDimensions, setContainerDimensions] = React.useState({\n    width: null,\n    height: null\n  });\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  // Each visible row (not to be confused with a filter result) is composed of a central row element\n  // and up to two additional row elements for pinned columns (left and right).\n  // When hovering any of these elements, the :hover styles are applied only to the row element that\n  // was actually hovered, not its additional siblings. To make it look like a contiguous row,\n  // we add/remove the .Mui-hovered class to all of the row elements inside one visible row.\n  const [hoveredRowId, setHoveredRowId] = React.useState(null);\n  const rowStyleCache = React.useRef(Object.create(null));\n  const prevGetRowProps = React.useRef();\n  const prevRootRowStyle = React.useRef();\n  const getRenderedColumnsRef = React.useRef(defaultMemoize((columns, firstColumnToRender, lastColumnToRender, minFirstColumn, maxLastColumn, indexOfColumnWithFocusedCell) => {\n    // If the selected column is not within the current range of columns being displayed,\n    // we need to render it at either the left or right of the columns,\n    // depending on whether it is above or below the range.\n    let focusedCellColumnIndexNotInRange;\n    const renderedColumns = columns.slice(firstColumnToRender, lastColumnToRender);\n    if (indexOfColumnWithFocusedCell > -1) {\n      // check if it is not on the left pinned column.\n      if (firstColumnToRender > indexOfColumnWithFocusedCell && indexOfColumnWithFocusedCell >= minFirstColumn) {\n        focusedCellColumnIndexNotInRange = indexOfColumnWithFocusedCell;\n      }\n      // check if it is not on the right pinned column.\n      else if (lastColumnToRender < indexOfColumnWithFocusedCell && indexOfColumnWithFocusedCell < maxLastColumn) {\n        focusedCellColumnIndexNotInRange = indexOfColumnWithFocusedCell;\n      }\n    }\n    return {\n      focusedCellColumnIndexNotInRange,\n      renderedColumns\n    };\n  }, MEMOIZE_OPTIONS));\n  const indexOfColumnWithFocusedCell = React.useMemo(() => {\n    if (cellFocus !== null) {\n      return visibleColumns.findIndex(column => column.field === cellFocus.field);\n    }\n    return -1;\n  }, [cellFocus, visibleColumns]);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    var _currentPage$range, _currentPage$range2;\n    const lastMeasuredIndexRelativeToAllRows = apiRef.current.getLastMeasuredRowIndex();\n    let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n    if ((_currentPage$range = currentPage.range) != null && _currentPage$range.lastRowIndex && !allRowsMeasured) {\n      // Check if all rows in this page are already measured\n      allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= currentPage.range.lastRowIndex;\n    }\n    const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (((_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.firstRowIndex) || 0), 0, rowsMeta.positions.length);\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    }\n\n    // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage);\n  }, [apiRef, (_currentPage$range3 = currentPage.range) == null ? void 0 : _currentPage$range3.firstRowIndex, (_currentPage$range4 = currentPage.range) == null ? void 0 : _currentPage$range4.lastRowIndex, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (!enabled) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + containerDimensions.height);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    if (enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: currentPage.rows.length,\n        buffer: rootProps.rowBuffer\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = currentPage.rows[i];\n        hasRowWithAutoHeight = apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(Math.abs(left), columnPositions);\n        lastColumnIndex = binarySearch(Math.abs(left) + containerDimensions.width, columnPositions);\n      }\n    }\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [enabled, enabledForColumns, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerDimensions]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    } else {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    }\n  }, [enabled]);\n  useEnhancedEffect(() => {\n    setContainerDimensions({\n      width: rootRef.current.clientWidth,\n      height: rootRef.current.clientHeight\n    });\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(() => {\n    if (rootRef.current) {\n      setContainerDimensions({\n        width: rootRef.current.clientWidth,\n        height: rootRef.current.clientHeight\n      });\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'debouncedResize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = direction * gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer, theme.direction]);\n  const getRenderContext = React.useCallback(() => prevRenderContext.current, []);\n  const setRenderContext = React.useCallback(nextRenderContext => {\n    if (prevRenderContext.current && areRenderContextsEqual(nextRenderContext, prevRenderContext.current)) {\n      updateRenderZonePosition(nextRenderContext);\n      return;\n    }\n    setRenderContextState(nextRenderContext);\n    updateRenderZonePosition(nextRenderContext);\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    apiRef.current.publishEvent('renderedRowsIntervalChange', {\n      firstRowToRender,\n      lastRowToRender\n    });\n    prevRenderContext.current = nextRenderContext;\n  }, [apiRef, setRenderContextState, prevRenderContext, currentPage.rows.length, rootProps.rowBuffer, updateRenderZonePosition]);\n  useEnhancedEffect(() => {\n    if (containerDimensions.width == null) {\n      return;\n    }\n    const initialRenderContext = computeRenderContext();\n    setRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('scrollPositionChange', params);\n  }, [apiRef, computeRenderContext, containerDimensions.width, setRenderContext]);\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (!prevRenderContext.current || scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n\n    // When virtualization is disabled, the context never changes during scroll\n    const nextRenderContext = enabled ? computeRenderContext() : prevRenderContext.current;\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth;\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        setRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const indexOfRowWithFocusedCell = React.useMemo(() => {\n    if (cellFocus !== null) {\n      return currentPage.rows.findIndex(row => row.id === cellFocus.id);\n    }\n    return -1;\n  }, [cellFocus, currentPage.rows]);\n  useGridApiEventHandler(apiRef, 'rowMouseOver', (params, event) => {\n    var _params$id;\n    if (event.currentTarget.contains(event.relatedTarget)) {\n      return;\n    }\n    setHoveredRowId((_params$id = params.id) != null ? _params$id : null);\n  });\n  useGridApiEventHandler(apiRef, 'rowMouseOut', (params, event) => {\n    if (event.currentTarget.contains(event.relatedTarget)) {\n      return;\n    }\n    setHoveredRowId(null);\n  });\n  const getRows = (params = {\n    renderContext\n  }) => {\n    var _rootProps$slotProps;\n    const {\n      onRowRender,\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerDimensions.width,\n      rowIndexOffset = 0,\n      position = 'center'\n    } = params;\n    if (!nextRenderContext || availableSpace == null) {\n      return null;\n    }\n    const rowBuffer = enabled ? rootProps.rowBuffer : 0;\n    const columnBuffer = enabled ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n    if (params.rows) {\n      params.rows.forEach(row => {\n        renderedRows.push(row);\n        apiRef.current.calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      });\n    } else {\n      if (!currentPage.range) {\n        return null;\n      }\n      for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n        const row = currentPage.rows[i];\n        renderedRows.push(row);\n        apiRef.current.calculateColSpan({\n          rowId: row.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n    // If the selected row is not within the current range of rows being displayed,\n    // we need to render it at either the top or bottom of the rows,\n    // depending on whether it is above or below the range.\n\n    let isRowWithFocusedCellNotInRange = false;\n    if (indexOfRowWithFocusedCell > -1) {\n      const rowWithFocusedCell = currentPage.rows[indexOfRowWithFocusedCell];\n      if (firstRowToRender > indexOfRowWithFocusedCell || lastRowToRender < indexOfRowWithFocusedCell) {\n        isRowWithFocusedCellNotInRange = true;\n        if (indexOfRowWithFocusedCell > firstRowToRender) {\n          renderedRows.push(rowWithFocusedCell);\n        } else {\n          renderedRows.unshift(rowWithFocusedCell);\n        }\n        apiRef.current.calculateColSpan({\n          rowId: rowWithFocusedCell.id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n      }\n    }\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    let isColumnWihFocusedCellNotInRange = false;\n    if (firstColumnToRender > indexOfColumnWithFocusedCell || lastColumnToRender < indexOfColumnWithFocusedCell) {\n      isColumnWihFocusedCellNotInRange = true;\n    }\n    const {\n      focusedCellColumnIndexNotInRange,\n      renderedColumns\n    } = getRenderedColumnsRef.current(visibleColumns, firstColumnToRender, lastColumnToRender, minFirstColumn, maxLastColumn, isColumnWihFocusedCellNotInRange ? indexOfColumnWithFocusedCell : -1);\n    const _ref = ((_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.row) || {},\n      {\n        style: rootRowStyle\n      } = _ref,\n      rootRowProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const invalidatesCachedRowStyle = prevGetRowProps.current !== getRowProps || prevRootRowStyle.current !== rootRowStyle;\n    if (invalidatesCachedRowStyle) {\n      rowStyleCache.current = Object.create(null);\n    }\n    const rows = [];\n    let isRowWithFocusedCellRendered = false;\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _currentPage$range5;\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const isRowNotVisible = isRowWithFocusedCellNotInRange && cellFocus.id === id;\n      const lastVisibleRowIndex = isRowWithFocusedCellNotInRange ? firstRowToRender + i === currentPage.rows.length : firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      if (onRowRender) {\n        onRowRender(id);\n      }\n      const focusedCell = cellFocus !== null && cellFocus.id === id ? cellFocus.field : null;\n      const columnWithFocusedCellNotInRange = focusedCellColumnIndexNotInRange !== undefined && visibleColumns[focusedCellColumnIndexNotInRange];\n      const renderedColumnsWithFocusedCell = columnWithFocusedCellNotInRange && focusedCell ? [columnWithFocusedCellNotInRange, ...renderedColumns] : renderedColumns;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      const _ref2 = typeof getRowProps === 'function' && getRowProps(id, model) || {},\n        {\n          style: rowStyle\n        } = _ref2,\n        rowProps = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n      if (!rowStyleCache.current[id]) {\n        const style = _extends({}, rowStyle, rootRowStyle);\n        rowStyleCache.current[id] = style;\n      }\n      let index = rowIndexOffset + ((currentPage == null || (_currentPage$range5 = currentPage.range) == null ? void 0 : _currentPage$range5.firstRowIndex) || 0) + firstRowToRender + i;\n      if (isRowWithFocusedCellNotInRange && (cellFocus == null ? void 0 : cellFocus.id) === id) {\n        index = indexOfRowWithFocusedCell;\n        isRowWithFocusedCellRendered = true;\n      } else if (isRowWithFocusedCellRendered) {\n        index -= 1;\n      }\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        focusedCellColumnIndexNotInRange: focusedCellColumnIndexNotInRange,\n        isNotVisible: isRowNotVisible,\n        rowHeight: baseRowHeight,\n        focusedCell: focusedCell,\n        tabbableCell: tabbableCell,\n        renderedColumns: renderedColumnsWithFocusedCell,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: index,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex,\n        position: position\n      }, rowProps, rootRowProps, {\n        hovered: hoveredRowId === id,\n        style: rowStyleCache.current[id]\n      }), id));\n    }\n    prevGetRowProps.current = getRowProps;\n    prevRootRowStyle.current = rootRowStyle;\n    return rows;\n  };\n  const needsHorizontalScrollbar = containerDimensions.width && columnsTotalWidth >= containerDimensions.width;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n    }\n\n    return size;\n  }, [apiRef, rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, needsHorizontalScrollbar, rootProps.autoHeight, rootProps.rowHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  const rootStyle = React.useMemo(() => {\n    const style = {};\n    if (!needsHorizontalScrollbar) {\n      style.overflowX = 'hidden';\n    }\n    if (rootProps.autoHeight) {\n      style.overflowY = 'hidden';\n    }\n    return style;\n  }, [needsHorizontalScrollbar, rootProps.autoHeight]);\n  apiRef.current.register('private', {\n    getRenderContext\n  });\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (inputProps = {}) => _extends({\n      ref: handleRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove\n    }, inputProps, {\n      style: inputProps.style ? _extends({}, inputProps.style, rootStyle) : rootStyle,\n      role: 'presentation'\n    }),\n    getContentProps: ({\n      style\n    } = {}) => ({\n      style: style ? _extends({}, style, contentSize) : contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef,\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showColumnBorder,\n    groupId\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showColumnBorder && 'columnHeader--showColumnBorder', showColumnBorder && 'columnHeader--withRightBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  var _columnGroupsLookup$g;\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId != null ? groupId : '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && ((_columnGroupsLookup$g = columnGroupsLookup[groupId]) == null ? void 0 : _columnGroupsLookup$g.renderHeaderGroup);\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showColumnBorder = rootProps.showColumnVerticalBorder;\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showColumnBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName != null ? headerName : groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null || elementToFocus.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { defaultMemoize } from 'reselect';\nimport { useGridSelector } from '../../utils';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { areRenderContextsEqual, getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const theme = useTheme();\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContextRaw] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const setRenderContext = React.useCallback(nextRenderContext => {\n    if (renderContext && nextRenderContext && areRenderContextsEqual(renderContext, nextRenderContext)) {\n      return;\n    }\n    setRenderContextRaw(nextRenderContext);\n  }, [renderContext]);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]);\n\n  // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    }\n\n    // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left;\n\n    // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n    let canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    }\n\n    // Pass directly the render context to avoid waiting for the next render\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition, setRenderContext]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    if (!nextRenderContext) {\n      return null;\n    }\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = !hasVirtualization ? 0 : getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n      const rowStructure = columnGroupsHeaderStructure[depth];\n      const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      const firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      const firstGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n      const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      const lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      const lastGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n      const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n        });\n      }).filter(groupStructure => groupStructure.columnFields.length > 0);\n      const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n      const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n        var _column$computedWidth;\n        const column = apiRef.current.getColumn(field);\n        return acc + ((_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0);\n      }, 0);\n      let columnIndex = firstColumnToRender;\n      const elements = visibleColumnGroupHeader.map(({\n        groupId,\n        columnFields\n      }) => {\n        const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        const headerInfo = {\n          groupId,\n          width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus,\n          tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow,\n        elements\n      });\n    }\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex,\n          hasFocus,\n          tabIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnsToRender,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    }),\n    headerHeight\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  alignItems: 'center',\n  boxSizing: 'border-box',\n  borderBottom: '1px solid',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'flex-start',\n  flexDirection: 'column',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n  const {\n      isDragging,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnPositions\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"densityFactor\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeaders(props, ref) {\n  const {\n      innerRef,\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnPositions,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      densityFactor,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumnHeaders,\n    getColumnGroupHeaders\n  } = useGridColumnHeaders({\n    innerRef,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsx(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsxs(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: [getColumnGroupHeaders(), getColumnHeaders()]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnPositions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  densityFactor: PropTypes.number.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  innerRef: refType,\n  minColumnIndex: PropTypes.number,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps == null ? void 0 : leftItemProps.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps == null ? void 0 : rightItemProps.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  var _colDef$sortingOrder;\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = (_colDef$sortingOrder = colDef.sortingOrder) != null ? _colDef$sortingOrder : rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (!colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon,\n  ColumnMenuHideIcon: GridVisibilityOffIcon,\n  ColumnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  ColumnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  ColumnMenuFilterIcon: GridFilterAltIcon,\n  ColumnMenuManageColumnsIcon: GridViewColumnIcon,\n  ColumnMenuClearIcon: GridClearIcon,\n  LoadIcon: GridLoadIcon,\n  FilterPanelAddIcon: GridAddIcon,\n  FilterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  ColumnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseIconButton: MUIIconButton,\n  BaseInputAdornment: MUIInputAdornment,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  BaseInputLabel: MUIInputLabel,\n  BaseSelectOption: MUISelectOption,\n  BaseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount } from '../components';\nimport { GridCellV7 } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  Cell: GridCellV7,\n  SkeletonCell: GridSkeletonCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ColumnHeaders: GridColumnHeaders,\n  Footer: GridFooter,\n  FooterRowCount: GridRowCount,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$slotProps, _rootProps$slotProps2;\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// TODO v7: This file exist only to simplify typing between\n// components/componentsProps and slots/slotProps\n// Should be deleted when components/componentsProps are removed\n\nexport const uncapitalizeObjectKeys = capitalizedObject => {\n  if (capitalizedObject === undefined) {\n    return undefined;\n  }\n  return Object.keys(capitalizedObject).reduce((acc, key) => _extends({}, acc, {\n    [`${key.charAt(0).toLowerCase()}${key.slice(1)}`]: capitalizedObject[key]\n  }), {});\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"components\", \"componentsProps\"];\nimport * as React from 'react';\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  var _props$forwardedProps;\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = (_props$forwardedProps = props.forwardedProps) != null ? _props$forwardedProps : {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => {\n    const {\n        components,\n        componentsProps\n      } = allProps,\n      themedProps = _objectWithoutPropertiesLoose(allProps, _excluded);\n    return [components, componentsProps, groupForwardedProps(themedProps)];\n  }, [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps, uncapitalizeObjectKeys } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleRowSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  rowSelection: true,\n  density: 'standard',\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleRowSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: 'client',\n  filterDebounceMs: 150,\n  columnHeaderHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: 'client',\n  rowHeight: 52,\n  pageSizeOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: 'client',\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false,\n  unstable_ignoreValueFormatterDuringExport: false,\n  clipboardCopyCellDelimiter: '\\t',\n  rowPositionsDebounceMs: 166\n};\nconst defaultSlots = uncapitalizeObjectKeys(DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\nexport const useDataGridProps = inProps => {\n  const [components, componentsProps, themedProps] = useProps(useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots,\n    components\n  }), [components, themedProps.slots]);\n  return React.useMemo(() => {\n    var _themedProps$slotProp;\n    return _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n      localeText,\n      slots,\n      slotProps: (_themedProps$slotProp = themedProps.slotProps) != null ? _themedProps$slotProp : componentsProps\n    }, DATA_GRID_FORCED_PROPS);\n  }, [themedProps, localeText, slots, componentsProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { uncapitalizeObjectKeys } from './slotsMigration';\n\n// TODO v7: Remove `components` and usages of `UncapitalizeObjectKeys` type\n// after converting keys in Grid(Pro|Premium)SlotsComponent to camelCase.\n// https://github.com/mui/mui-x/issues/7940\nexport function computeSlots({\n  defaultSlots,\n  slots,\n  components\n}) {\n  const overrides = slots != null ? slots : components ? uncapitalizeObjectKeys(components) : null;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce, unstable_capitalize as capitalize } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    var _pinnedRows$top, _pinnedRows$bottom;\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {};\n      /* eslint-disable-next-line no-restricted-syntax */\n      for (const key in sizes) {\n        if (/^base[A-Z]/.test(key)) {\n          initialHeights[key] = sizes[key];\n        }\n      }\n      initialHeights.baseCenter = baseRowHeight;\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let maximumBaseSize = 0;\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line no-restricted-syntax, guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (/^base[A-Z]/.test(key)) {\n          maximumBaseSize = value > maximumBaseSize ? value : maximumBaseSize;\n        } else {\n          otherSizes += value;\n        }\n      }\n      return acc + maximumBaseSize + otherSizes;\n    }, 0);\n    pinnedRows == null || (_pinnedRows$top = pinnedRows.top) == null || _pinnedRows$top.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows == null || (_pinnedRows$bottom = pinnedRows.bottom) == null || _pinnedRows$bottom.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height, position) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes[`base${capitalize(position)}`] = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => {\n    var _unwrappedGroupingMod;\n    return (_unwrappedGroupingMod = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod : [];\n  };\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields != null && pinnedFields.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields != null && pinnedFields.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      var _getParents$depth;\n      const groupId = (_getParents$depth = getParents(newField)[depth]) != null ? _getParents$depth : null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (!children) {\n      console.warn(`MUI: group groupId=${groupId} has no children.`);\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  var _props$experimentalFe, _props$columnGrouping, _props$columnGrouping2, _apiRef$current$state;\n  if (!((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.columnGrouping)) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup((_props$columnGrouping = props.columnGroupingModel) != null ? _props$columnGrouping : []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel((_props$columnGrouping2 = props.columnGroupingModel) != null ? _props$columnGrouping2 : []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, // @ts-expect-error Move this part to `Pro` package\n  (_apiRef$current$state = apiRef.current.state.pinnedColumns) != null ? _apiRef$current$state : {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => {\n    var _unwrappedGroupingMod, _unwrappedGroupingMod2;\n    return (_unwrappedGroupingMod = (_unwrappedGroupingMod2 = unwrappedGroupingModel[field]) == null ? void 0 : _unwrappedGroupingMod2.length) != null ? _unwrappedGroupingMod : 0;\n  }));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  var _props$experimentalFe3;\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    var _unwrappedGroupingMod3;\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return (_unwrappedGroupingMod3 = unwrappedGroupingModel[field]) != null ? _unwrappedGroupingMod3 : [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    unstable_getColumnGroupPath: getColumnGroupPath,\n    unstable_getAllGroupDetails: getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    var _props$columnGrouping3;\n    const unwrappedGroupingModel = unwrapGroupingColumnModel((_props$columnGrouping3 = props.columnGroupingModel) != null ? _props$columnGrouping3 : []);\n    apiRef.current.setState(state => {\n      var _state$columns$ordere, _state$columns, _state$pinnedColumns;\n      const orderedFields = (_state$columns$ordere = (_state$columns = state.columns) == null ? void 0 : _state$columns.orderedFields) != null ? _state$columns$ordere : [];\n\n      // @ts-expect-error Move this logic to `Pro` package\n      const pinnedColumns = (_state$pinnedColumns = state.pinnedColumns) != null ? _state$pinnedColumns : {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    var _props$experimentalFe2, _apiRef$current$getPi, _apiRef$current$getPi2, _apiRef$current;\n    if (!((_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.columnGrouping)) {\n      return;\n    }\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = (_apiRef$current$getPi = (_apiRef$current$getPi2 = (_apiRef$current = apiRef.current).getPinnedColumns) == null ? void 0 : _apiRef$current$getPi2.call(_apiRef$current)) != null ? _apiRef$current$getPi : {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel != null ? columnGroupingModel : []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel != null ? columnGroupingModel : []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => {\n      var _unwrappedGroupingMod4, _unwrappedGroupingMod5;\n      return (_unwrappedGroupingMod4 = (_unwrappedGroupingMod5 = unwrappedGroupingModel[field]) == null ? void 0 : _unwrappedGroupingMod5.length) != null ? _unwrappedGroupingMod4 : 0;\n    }));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef, (_props$experimentalFe3 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe3.columnGrouping]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []);\n\n  // Calculate `colSpan` for the cell.\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex,\n      columns\n    } = params;\n    const columnsLength = columns.length;\n    const column = columns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n    let width = column.computedWidth;\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j;\n      // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = columns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]);\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import * as React from 'react';\nimport { unstable_debounce as debounce, unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height;\n\n    // We recalculate the scroll x to consider the size of the y scrollbar.\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, props.columnHeaderHeight);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n    let scrollBarSize;\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: Math.max(rootDimensionsRef.current.height - totalHeaderHeight, 0)\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: {\n          width: Math.round(viewportOuterSize.width),\n          height: viewportOuterSize.height - pinnedRowsHeight.top - pinnedRowsHeight.bottom\n        },\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, totalHeaderHeight]);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => debounce(setSavedSize, 60), []);\n  const previousSize = React.useRef();\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateGridDimensionsRef();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateGridDimensionsRef]);\n\n  // This is the function called by apiRef.current.resize()\n  const resize = React.useCallback(() => {\n    apiRef.current.computeSizeAndPublishResizeEvent();\n  }, [apiRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n    if (!dimensions) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const computeSizeAndPublishResizeEvent = React.useCallback(() => {\n    var _apiRef$current$mainE, _previousSize$current, _previousSize$current2;\n    const mainEl = (_apiRef$current$mainE = apiRef.current.mainElementRef) == null ? void 0 : _apiRef$current$mainE.current;\n    if (!mainEl) {\n      return;\n    }\n    const win = ownerWindow(mainEl);\n    const computedStyle = win.getComputedStyle(mainEl);\n    const height = parseFloat(computedStyle.height) || 0;\n    const width = parseFloat(computedStyle.width) || 0;\n    const hasHeightChanged = height !== ((_previousSize$current = previousSize.current) == null ? void 0 : _previousSize$current.height);\n    const hasWidthChanged = width !== ((_previousSize$current2 = previousSize.current) == null ? void 0 : _previousSize$current2.width);\n    if (!previousSize.current || hasHeightChanged || hasWidthChanged) {\n      const size = {\n        width,\n        height\n      };\n      apiRef.current.publishEvent('resize', size);\n      previousSize.current = size;\n    }\n  }, [apiRef]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions\n  };\n  const dimensionsPrivateApi = {\n    getViewportPageSize,\n    updateGridDimensionsRef,\n    computeSizeAndPublishResizeEvent\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'public');\n  useGridApiMethod(apiRef, dimensionsPrivateApi, 'private');\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  height: '100%',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  },\n  zIndex: 0 // See https://github.com/mui/mui-x/issues/10547\n});\n\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref\n  }, props, {\n    className: clsx(classes.root, props.className),\n    ownerState: rootProps\n  }));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  var _props$style;\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && ((_props$style = props.style) == null ? void 0 : _props$style.minHeight) === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType\n}) => ({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 0,\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n}));\n\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n  if (rootProps.autoHeight && height === 0) {\n    height = getMinimalContentHeight(apiRef, rootProps.rowHeight); // Give room to show the overlay when there no rows.\n  }\n\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  if (!viewportInnerSize) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    overlayType: props.overlayType,\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0\n      }\n    }, props))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  overlayType: PropTypes.string.isRequired\n} : void 0;\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  let overlayType = '';\n  if (showNoRowsOverlay) {\n    var _rootProps$slotProps;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.noRowsOverlay));\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    var _rootProps$slotProps2;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.noResultsOverlay));\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    var _rootProps$slotProps3;\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, (_rootProps$slotProps3 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps3.loadingOverlay));\n    overlayType = 'loadingOverlay';\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    overlayType: overlayType,\n    children: overlay\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { GridOverlays } from './base/GridOverlays';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref\n  });\n  return /*#__PURE__*/_jsxs(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))]\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, DATA_GRID_PROPS_DEFAULT_VALUES } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {\n        VirtualScrollerComponent: DataGridVirtualScroller\n      }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\n\n/**\n * Remove at v7\n * @deprecated\n */\nexport const SUBMIT_FILTER_STROKE_TIME = DATA_GRID_PROPS_DEFAULT_VALUES.filterDebounceMs;\n\n/**\n * Remove at v7\n * @deprecated\n */\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = DATA_GRID_PROPS_DEFAULT_VALUES.filterDebounceMs;\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the grid height is dynamic and follow the number of rows in the grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the grid get a first column with a checkbox that allows to select rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef[]]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n  /**\n   * Set the column visibility model of the grid.\n   * If defined, the grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Overridable components.\n   * @deprecated Use `slots` instead.\n   */\n  components: PropTypes.object,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   * @deprecated Use the `slotProps` prop instead.\n   */\n  componentsProps: PropTypes.object,\n  /**\n   * Set the density of the grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   * @ignore - do not document\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    ariaV7: PropTypes.bool,\n    columnGrouping: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n    return null;\n  },\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n  /**\n   * Override the height/width of the grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  unstable_ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\", \"icon\", \"showInMenu\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridActionsCellItem = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      label,\n      icon,\n      showInMenu,\n      onClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const handleClick = event => {\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  if (!showInMenu) {\n    var _rootProps$slotProps;\n    return /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: ref,\n      size: \"small\",\n      role: \"menuitem\",\n      \"aria-label\": label\n    }, other, {\n      onClick: handleClick\n    }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.baseIconButton, {\n      children: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: 'small'\n      })\n    }));\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, _extends({\n    ref: ref\n  }, other, {\n    onClick: onClick,\n    children: [icon && /*#__PURE__*/_jsx(ListItemIcon, {\n      children: icon\n    }), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCellItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  showInMenu: PropTypes.bool\n} : void 0;\nexport { GridActionsCellItem };","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}"],"names":["getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeRoot","styled","name","overridesResolver","props","styles","root","position","display","verticalAlign","flexShrink","BadgeBadge","ownerState","badge","variant","concat","capitalize","anchorOrigin","vertical","horizontal","overlap","color","invisible","_ref3","theme","_extends","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","vars","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","React","inProps","ref","_ref","_slots$root","_ref2","_slots$badge","_slotProps$root","_slotProps$badge","useThemeProps","anchorOriginProp","className","component","components","componentsProps","children","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slots","slotProps","showZero","variantProp","other","_objectWithoutPropertiesLoose","invisibleFromHook","displayValue","displayValueFromHook","parameters","prevProps","usePreviousProps","Number","useBadge","undefined","classes","composeClasses","useUtilityClasses","RootSlot","Root","BadgeSlot","Badge","rootSlotProps","badgeSlotProps","rootProps","useSlotProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","clsx","badgeProps","_jsxs","_jsx","createSvgIcon","d","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","indeterminate","size","text","secondary","disableRipple","action","activeChannel","mainChannel","hoverOpacity","alpha","active","checkboxClasses","checked","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","_icon$props$fontSize","_indeterminateIcon$pr","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","composedClasses","type","getFormControlLabelUtilityClasses","FormControlLabelRoot","formControlLabelClasses","label","labelPlacement","cursor","WebkitTapHighlightColor","marginLeft","marginRight","AsteriskComponent","asterisk","error","_slotProps$typography","control","disabledProp","disableTypography","labelProp","required","requiredProp","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","typographySlotProps","Typography","Stack","getDataGridUtilityClass","gridClasses","columnHeadersStyles","columnSeparator","visibility","width","columnHeaderStyles","iconButtonContainer","menuIcon","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","autosizing","editBooleanCell","cellContent","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","TableCell","border","mode","lighten","divider","darken","getBorderColor","radius","shape","background","defaultChannel","disabledOpacity","default","flex","borderWidth","borderStyle","primary","body2","outline","minHeight","overflowAnchor","borderBottomColor","columnHeaderTitleContainerContent","overflow","whiteSpace","outlineWidth","outlineOffset","opacity","shorter","borderBottomWidth","borderBottomStyle","borderBottom","borderTop","hover","columnHeaders","touchAction","pointerEvents","breakInside","selectedOpacity","userSelect","textOverflow","boxShadow","shadows","paper","booleanCell","actionsCell","gridGap","spacing","rowReorderCellContainer","borderRightWidth","borderRightStyle","alignSelf","groupingCriteriaCell","groupingCriteriaCellToggle","UNINITIALIZED","useLazyRef","init","initArg","current","EMPTY","useOnMount","fn","buildWarning","message","gravity","arguments","length","alreadyWarned","cleanMessage","Array","isArray","join","console","warn","is","Object","fastObjectShallowCompare","a","b","aLength","bLength","_","applySelector","apiRef","selector","acceptsApiRef","isOutputSelector","state","defaultCompare","objectShallowCompare","createRefs","equals","useGridSelector","refs","didInit","setState","store","subscribe","newState","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","Error","NOT_FOUND","defaultEqualityCheck","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","entry","get","value","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption2","finalMemoizeOptions","dependencies","every","dep","dependencyTypes","map","getDependencies","memoizedResultFunc","params","push","assign","lastResult","recomputations","resetRecomputations","createSelector","cacheContainer","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","id","c","e","f","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","va","vb","vc","vd","ve","createSelectorMemoized","args","_cache$get","_cache$get3","selectorArgs","cacheKey","_cache$get2","newSelector","reselectCreateSelector","set","Map","gridDensitySelector","density","gridDensityValueSelector","gridDensityFactorSelector","factor","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","filter","column","gridVisibleColumnFieldsSelector","visibleColumns","gridColumnPositionsSelector","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","reduce","acc","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","_columnGrouping$unwra","unwrappedGroupingModel","gridColumnGroupsLookupSelector","_columnGrouping$looku","gridColumnGroupsHeaderStructureSelector","_columnGrouping$heade","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","_columnGrouping$maxDe","maxDepth","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","depth","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","_rawPinnedRows$bottom","_rawPinnedRows$top","rawPinnedRows","pinnedRows","rowEntry","_rowEntry$model","model","_rowEntry$model2","gridPinnedRowsCountSelector","_pinnedRows$top","_pinnedRows$bottom","useGridAriaAttributes","_rootProps$experiment","useGridRootProps","headerGroupingMaxDepth","pinnedRowsCount","role","experimentalFeatures","ariaV7","treeData","disableMultipleRowSelection","GridRoot","densityValue","rootContainerRef","handleRef","useForkRef","getAriaAttributes","ariaAttributes","register","rootElementRef","mountedState","setMountedState","useEnhancedEffect","GridHeader","_rootProps$slotProps","_rootProps$slotProps2","preferencesPanel","toolbar","GridMainContainerRoot","flexGrow","GridMainContainer","gridSortingStateSelector","sorting","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","_idRowsLookup$id","gridSortModelSelector","sortModel","gridSortColumnLookupSelector","res","sortItem","index","sortDirection","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","filterModel","gridFilteredRowsLookupSelector","quickFilterValues","filteredRowsLookup","gridExpandedSortedRowEntriesSelector","filteredDescendantCountLookup","visibleRowsLookup","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRows","rowTree","rowTreeDepth","_rowTree$row$id","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","columnLookup","_filterModel$items","items","item","_column$filterOperato","_item$value","filterOperators","filterOperator","operator","InputComponent","toString","gridFilterActiveItemsLookupSelector","activeFilters","filterItem","gridFocusStateSelector","focus","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","unstable_gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","tabIndex","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","unstable_gridTabIndexColumnGroupHeaderSelector","gridColumnMenuSelector","columnMenu","GridBody","VirtualScrollerComponent","ColumnHeadersProps","rootRef","filterColumnLookup","sortColumnLookup","columnPositions","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","densityFactor","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","computeSizeAndPublishResizeEvent","elementToObserve","ResizeObserver","animationFrame","observer","requestAnimationFrame","observe","window","cancelAnimationFrame","unobserve","columnHeadersRef","columnsContainerRef","virtualScrollerRef","columnHeadersContainerElementRef","columnHeadersElementRef","mainElementRef","hasDimensions","getRootDimensions","innerRef","GridFooterPlaceholder","hideFooter","footer","GridApiContext","GridContextProvider","getPublicApi","GridRootPropsContext","Provider","isFunction","isObject","escapeRegExp","replace","clamp","min","Math","isDeepEqual","constructor","entriesA","from","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","prototype","keys","hasOwnProperty","call","randomNumberBetween","seed","random","t","imul","deepClone","obj","structuredClone","JSON","parse","stringify","useGridApiMethod","apiMethods","isFirstRender","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noop","noopLogger","debug","info","LOG_LEVELS","getAppender","logLevel","appender","minLogLevelIdx","indexOf","logger","loggerObj","method","idx","Store","_value","this","listeners","add","delete","getSnapshot","update","l","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","setTimeout","cleanupToken","unregister","clearTimeout","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","event","details","_handlerRef$current","defaultMuiPrevented","subscribeEvent","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","SYMBOL_API_PRIVATE","Symbol","globalId","useGridApiInitialization","inputApiRef","publicApiRef","_publicApiRef$current","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","isPropagationStopped","isSyntheticEvent","signature","DataGridPro","api","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridLoggerFactory","getLogger","useGridStateInitialization","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","reason","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","processorsCache","isRunning","runAppliers","groupCache","values","appliers","callback","registerPipeProcessor","group","processor","processors","registerPipeApplier","applier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","preProcessor","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","getLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isPrintableKey","ctrlKey","metaKey","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","useGridApiContext","GridCellCheckboxRenderer","isChecked","rowNode","hasFocus","checkboxElement","rippleRef","element","getCellElement","_checkboxElement$curr","input","querySelector","preventScroll","stop","handleKeyDown","stopPropagation","isSelectable","isRowSelectable","baseCheckbox","onChange","onKeyDown","touchRippleRef","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","rowId","getPageCount","rowCount","pageSize","ceil","getDefaultGridPaginationModel","autoPageSize","page","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPageSelector","gridPageSizeSelector","gridPaginationRowRangeSelector","visibleTopLevelRowCount","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","slice","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","getRow","getRowParams","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","isIndeterminate","getColumnHeaderElement","handleSelectionChange","p","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","debounceMs","isProcessingProps","onValueChange","inputRef","valueState","setValueState","handleChange","async","newValue","getColumn","parsedValue","valueParser","getCellParams","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","fullWidth","endAdornment","loadIcon","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","getNextGridSortDirection","sortingOrder","currentIdx","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","Timeout","currentId","disposeEffect","start","delay","useTimeout","GridFilterInputValue","applyValue","focusElementRef","clearButton","InputProps","others","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","useId","onFilterChange","String","filterDebounceMs","newItem","fromInput","_item$value2","baseTextField","placeholder","InputLabelProps","shrink","GridFilterInputMultipleValue","helperText","TextFieldProps","itemValue","Autocomplete","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","baseChip","renderInput","GLOBAL_API_REF","tagInternalFilter","isInternal","isInternalFilter","convertLegacyOperators","ops","op","getApplyFilterFn","getApplyFilterFnV7","filterFn","cellParams","convertQuickFilterV7ToLegacy","GridLogicOperator","getDefaultGridFilterModel","logicOperator","And","quickFilterLogicOperator","getPublicApiRef","evalCode","globalThis","atob","hasEval","cleanFilterItem","cleanItem","round","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","some","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","_filterItem$value","parser","x","ignoreDiacritics","newFilterItem","hasUserFunctionLegacy","hasUserFunctionV7","applyFilterOnRow","v7","getRowValue","result","filterItemsApplierId","buildAggregatedFilterApplier","disableEval","isRowMatchingFilterItems","buildAggregatedFilterItemsApplier","shouldApplyFilter","resultPerItemId","getRowId","filterItemTemplate","filterItemCore","replaceAll","shouldApplyItem","isRowMatchingQuickFilter","buildAggregatedQuickFilterApplier","_filterModel$quickFil","_filterModel$quickFil2","_filterModel$quickFil3","Boolean","columnFields","quickFilterExcludeHiddenColumns","appliersPerField","getApplyQuickFilterFn","getApplyQuickFilterFnV7","quickFilterValue","usedCellParams","outer","v","filterValue","_usedCellParams$field","_isRowMatchingFilterI","_isRowMatchingQuickFi","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","_filterModel$logicOpe","filterItemPredicate","filterItemResult","_filterModel$quickFil4","quickFilterValuePredicate","quickFilterValueResult","getGridStringQuickFilterFn","filterRegex","columnValue","getRowFormattedValue","test","GRID_STRING_COL_DEF","maxWidth","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","gridStringOrNumberComparator","compare","align","disableTrim","filterItemValue","trim","sensitivity","usage","requiresFilterValue","val","getGridStringOperators","renderEditCell","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","detailErrorMessage","checkGridRowIdIsValid","createRowsInternalCache","updates","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","footerId","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","isAutoGeneratedRow","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","calculatePinnedRowsHeight","unstable_getRowHeight","getMinimalContentHeight","rowHeight","floor","GridBooleanCellRaw","Icon","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","idProp","htmlFor","BooleanOperatorContainer","margin","GridFilterInputBoolean","_baseSelectProps$nati","_rootProps$slotProps3","labelId","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","displayEmpty","GRID_BOOLEAN_COL_DEF","headerAlign","renderCell","valueFormatter","valueAsBoolean","pastedValueParser","toLowerCase","stringToBoolean","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableColumnMenu","disableReorder","disableExport","valueGetter","renderHeader","sanitizeCellValue","delimiterCharacter","delimiter","includes","serializeCellValue","ignoreValueFormatter","_cellParams$value2","columnType","_cellParams$value","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","buildCSV","rowIds","includeHeaders","includeColumnGroupsHeaders","CSVBody","serializeRow","filteredColumns","headerRows","columnGroupLookup","unstable_getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","unstable_getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","CSVHead","writeToClipboardPolyfill","data","span","document","createElement","style","textContent","body","appendChild","range","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","unstable_ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","_window$getSelection","selectionEnd","selectionStart","hasNativeSelection","textToCopy","getSelectedRows","getDataAsCsv","focusedCell","navigator","clipboard","writeText","catch","useGridNativeEventListener","added","setAdded","wrapHandler","targetElement","addEventListener","boundElem","removeEventListener","onClipboardCopy","columnMenuStateInitializer","open","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","parseNumericValue","getGridNumericQuickFilterFn","isNaN","GRID_NUMERIC_COL_DEF","isNumber","toLocaleString","InputComponentProps","GridFilterInputDate","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","year","month","day","hour","minute","match","time","Date","getTime","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","substr","parsed","formatted","hasUpdatedEditValueOnMount","parseValueToDate","date","split","setFullYear","hours","minutes","newFormattedDate","newParsedDate","_valueTransformed$par","_state$parsed","unstable_updateValueOnRender","renderEditDateCell","throwIfNotDateObject","GRID_DATE_COL_DEF","toLocaleDateString","GRID_DATETIME_COL_DEF","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueFromValueOptions","valueOptions","getOptionValue","optionValue","_excluded2","GridEditSingleSelectCell","initialOpen","editMode","Cell","getOptionLabel","getOptionLabelProp","getOptionValueProp","setOpen","MenuProps","otherBaseSelectProps","_inputRef$current","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","Row","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","_rootProps$slotProps$","_resolvedColumn","_resolvedColumn2","_rootProps$slotProps4","resolvedColumn","currentValueOptions","_itemValue","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","_resolvedColumn3","resolvedFormattedValueOptions","filteredValues","formattedOption","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","colDefValueOptions","GridMenuRoot","Popper","menu","modal","GridMenu","onExited","savedFocusRef","_savedFocusRef$curren","_savedFocusRef$curren2","activeElement","HTMLElement","handleClickAway","contains","basePopper","anchorEl","placement","TransitionProps","ClickAwayListener","onClickAway","mouseEvent","Grow","popperOnExited","Paper","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","buttonRef","ignoreCallToFocus","touchRippleRefs","useTheme","menuId","buttonId","getActions","hasActions","iconButtons","showInMenu","menuButtons","numberOfButtons","focusableButtonIndex","o","hideMenu","handleTouchRippleRef","instance","handleButtonClick","onClick","getNewIndex","direction","_options","indexMod","newIndex","preventDefault","button","baseIconButton","showMenu","moreActionsIcon","MenuList","autoFocusItem","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","DEFAULT_GRID_COL_TYPE_KEY","COLUMNS_DIMENSION_PROPERTIES","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","newColumn","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","columnTypes","createColumnsState","_ref4","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","_apiRef$current$getRo","_apiRef$current$getRo2","_apiRef$current","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","hasBeenResized","columnsStateWithPortableColumns","applyInitialState","dimensions","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","viewportInnerSize","mergeColumnsState","getFirstNonSpannedColumnToRender","_ref5","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstColumnIndexToRender","_ref6","firstColumnIndex","minColumnIndex","columnBuffer","getTotalHeaderHeight","headerHeight","GridPreferencePanelsValue","defaultColumnTypes","string","number","dateTime","boolean","singleSelect","columnsStateInitializer","_props$initialState","_props$columnVisibili","_props$initialState2","DENSITY_FACTORS","compact","comfortable","standard","densityStateInitializer","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","GridCsvExportMenuItem","MenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","csvExport","_options$getRowsToExp","_options$includeHeade","_options$includeColum","getRowsToExport","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","url","URL","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","componentName","gridRowsMetaSelector","rowsMeta","paginationStateInitializer","_props$paginationMode","mergeStateWithPaginationModel","paginationModelProp","paginationState","_paginationModelProp$","pageCount","validPage","getValidPage","useGridPrintExport","doc","previousGridState","previousColumnVisibility","previousRows","ownerDocument","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","columnHeadersInner","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","_gridClone$querySelec2","computedTotalHeight","currentPageTotalHeight","columnHeaderHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","j","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","restoreState","unstable_setVirtualization","exportState","getSortedRows","visibleRowCount","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","_options$printOptions","printOptions","useGridRegisterStrategyProcessor","filterStateInitializer","_props$filterModel","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","getVisibleRows","paginationMode","useGridVisibleRows","response","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","unstable_gridHeaderFilteringStateSelector","headerFiltering","unstable_gridHeaderFilteringEditFieldSelector","headerFilteringState","editing","unstable_gridHeaderFilteringMenuSelector","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","unstable_headerFilters","goToCell","colIndex","closestColumnToUse","nextCellColSpanInfo","rightVisibleCellIndex","rowIndexRelativeToAllRows","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","_currentPageRows$rowI","handleColumnHeaderKeyDown","headerTitleNode","currentTarget","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","rowIndexBefore","shiftKey","nextRowIndex","checkIfCanStartEditing","gridPreferencePanelStateSelector","preferencePanel","preferencePanelStateInitializer","_props$initialState$p","gridEditRowsStateSelector","editRows","missingOnProcessRowUpdateErrorWarning","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","startsWith","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editingState","updateCellModesModel","useEventCallback","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","_editingState$id","skipValueParser","preProcessEditCellProps","hasChanged","valueSetter","idToIdLookup","copyOfPrevCellModes","_copyOfPrevCellModes$","_idToIdLookup$id","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","rowParams","handleCellFocusIn","_nextFocusedCell$curr","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","fieldProps","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","otherFieldsProps","promise","processedProps","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","_editingState$id$fiel","editingSharedPrivateApi","rowsStateInitializer","useGridRows","currentPage","lastUpdateMs","now","getRowNode","getRowIdProp","throttledRowsChange","throttle","run","throttleRemainingTimeMs","throttleRowsMs","prevCache","nonPinnedRowsUpdates","pinnedRowsCache","prevModel","idLookup","previousCache","_previousCache$update","_previousCache$update2","_previousCache$update3","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","updateCacheWithNewRows","getRowModels","dataRows","getRowsCount","getAllRowIds","getRowIndexRelativeToVisibleRows","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","applySorting","applyFiltering","groupNode","sortedRowIds","childId","setRowIndex","targetIndex","parent","allRows","oldIndex","updatedRows","rowApi","unstable_replaceRows","rootGroup","rootGroupChildren","replacedRowId","rowTreeNodeConfig","groupingKey","rowProApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","flatRowTreeCreationMethod","groupingField","childrenFromPath","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","updateFlatRowTree","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","getBaseCellParams","cellFocus","cellTabIndex","_getRowId","getGridColumnHeaderElement","getRowElement","getGridRowElement","rowSelector","cellSelector","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","_getSelectionModelPro","rowSelectionModel","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","sortingStateInitializer","_props$sortModel","scrollIntoView","clientHeight","scrollTop","offsetTop","elementBottom","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorEquals","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","GridIconButtonContainerRoot","GridIconButtonContainer","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","footerRowCount","paginationElement","hideFooterPagination","GridRowCountRoot","GridRowCount","GridPreferencesPanel","_preferencePanelState","preferencePanelState","panelContent","openedPanelValue","filters","panel","panelId","GridOverlayRoot","overlay","GridOverlay","GridLoadingOverlay","CircularProgress","GridNoRowsOverlay","_LastPageIcon","_FirstPageIcon","_KeyboardArrowRight","_KeyboardArrowLeft","_KeyboardArrowLeft2","_KeyboardArrowRight2","_FirstPageIcon2","_LastPageIcon2","_slotProps$firstButto","_slotProps$previousBu","_slotProps$nextButton","_slotProps$lastButton","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","IconButton","firstButton","LastPageIcon","FirstPageIcon","previousButton","KeyboardArrowRight","KeyboardArrowLeft","nextButton","lastButton","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","Toolbar","tablePaginationClasses","paddingRight","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","select","selectRoot","paddingLeft","textAlign","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","to","defaultGetAriaLabel","_slotProps$select","ActionsComponent","TablePaginationActions","colSpan","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","rowsPerPageOption","isHostComponent","GridPaginationRoot","TablePagination","GridPagination","_rootProps$rowCount","lastPage","handlePageSizeChange","setPageSize","handlePageChange","setPage","pageSizeOptions","isPageSizeIncludedInPageSizeOptions","GridPanelContentRoot","maxHeight","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","marginBottom","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","_rootProps$slotProps5","_rootProps$slotProps6","_rootProps$slotProps7","_rootProps$slotProps8","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","filteredFields","currentFilters","sortedFilteredColumns","currentColumn","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLogicOperator","_valueRef$current","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","upsertFilterItem","applyFilterLogicOperator","setFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","_colDef$filterOperato","getNewFilter","nextColumnFieldName","shouldCloseFilterPanel","deleteFilterItem","hideFilterPanel","baseButton","addNewFilter","newFilter","upsertFilterItems","startIcon","filterPanelAddIcon","handleRemoveAll","setFilterModel","filterPanelRemoveAllIcon","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GridColumnsPanelRoot","columnsPanel","GridColumnsPanelRowRoot","columnsPanelRow","switchClasses","defaultSearchPredicate","searchValue","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","hidePreferences","modifiers","enabled","phase","effect","setAnchorEl","_apiRef$current$rootE","columnHeadersElement","elevation","fastMemo","cachedSupportsPreventScroll","_excluded3","_excluded4","EMPTY_CELL_PARAMS","showRightBorder","isSelected","isSelectionMode","content","MemoizedCellWrapper","editCellState","cellParamsWithAPI","managesOwnFocus","rootClasses","getCellClassName","classNames","updatedRow","editCellStateRest","CellComponent","cellProps","MemoizedGridCellV7","_getActions","_rootProps$unstable_c","_rootProps$experiment4","disableDragEvents","isNotVisible","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","onDragOver","canManageOwnFocus","valueToRender","cellRef","unstable_cellSelection","publishMouseUp","publishMouseDown","publish","propHandler","focusableElement","elementToFocus","scrollPosition","getScrollPosition","scroll","handleFocus","onFocus","valueString","draggableEventHandlers","EmptyCell","MemoizedGridRow","refProp","selected","hovered","styleProp","renderedColumns","containerWidth","isLastVisible","focusedCellColumnIndexNotInRange","onMouseEnter","onMouseLeave","onMouseOut","columnsTotalWidth","treeDepth","editRowsState","ariaRowIndex","unstable_storeRowHeightMeasurement","unstable_setLastMeasuredRowIndex","rootElement","resizeObserver","borderBoxSize","blockSize","contentRect","disconnect","nodeType","publishClick","disableColumnReorder","GridCellV7","GridCellWrapper","rowReordering","getCell","_editRowsState$rowId$","_editRowsState$rowId","cellIsNotVisible","indexRelativeToAllColumns","sizes","unstable_getRowInternalSizes","numberOfBaseSizes","maximumSize","rowStyle","spacingTop","rowSpacingType","spacingBottom","property","propertyValue","parseInt","rowClassNames","getRowClassName","_currentPage$range","indexRelativeToCurrentPage","isFirstVisible","randomNumber","rowType","cells","showCellVerticalBorder","contentWidth","skeletonCell","emptyCellWidth","eventHandlers","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","GridColumnHeaderSortIcon","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","baseTooltip","enterDelay","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","hideColumnMenu","labelledby","GridColumnHeaderTitleRoot","columnHeaderTitle","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","tooltip","setTooltip","handleMouseOver","isOver","scrollHeight","scrollWidth","clientWidth","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","side","Right","resizing","stopClick","showColumnVerticalBorder","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","showColumnMenuIcon","setShowColumnMenuIcon","ariaSort","scrollLeft","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","disableColumnResize","GridColumnHeaderItem","_colDef$sortingOrder","_colDef$headerName","filterItemsCounter","isDragging","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onBlur","onDragStart","onDragEnd","handleExited","disableColumnFilter","columnHeaderFilterIconButton","counter","hideSortIcons","elementId","gridVirtualizationSelector","virtualization","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","enabledForColumns","binarySearch","offset","sliceStart","sliceEnd","pivot","getRenderableIndexes","firstIndex","lastIndex","buffer","minFirstIndex","maxLastIndex","areRenderContextsEqual","context1","context2","lastColumnIndex","MEMOIZE_OPTIONS","useGridVirtualScroller","_currentPage$range3","_currentPage$range4","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","renderContext","setRenderContextState","prevRenderContext","containerDimensions","setContainerDimensions","prevTotalWidth","hoveredRowId","setHoveredRowId","rowStyleCache","prevGetRowProps","prevRootRowStyle","getRenderedColumnsRef","lastColumnToRender","minFirstColumn","maxLastColumn","indexOfColumnWithFocusedCell","getNearestIndexToRender","_currentPage$range2","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","abs","exponentialSearch","computeRenderContext","hasRowWithAutoHeight","rowBuffer","rowHasAutoHeight","handleResize","updateRenderZonePosition","nextRenderContext","initialFirstColumnToRender","getRenderContext","setRenderContext","initialRenderContext","handleScroll","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","rowThreshold","columnThreshold","ReactDOM","handleWheel","handleTouchMove","indexOfRowWithFocusedCell","_params$id","relatedTarget","needsHorizontalScrollbar","contentSize","shouldExtendContent","rootStyle","overflowX","overflowY","getRows","onRowRender","availableSpace","rowIndexOffset","renderedRows","calculateColSpan","isRowWithFocusedCellNotInRange","rowWithFocusedCell","isColumnWihFocusedCellNotInRange","rootRowStyle","rootRowProps","isRowWithFocusedCellRendered","_currentPage$range5","isRowNotVisible","lastVisibleRowIndex","baseRowHeight","columnWithFocusedCellNotInRange","renderedColumnsWithFocusedCell","tabbableCell","rowProps","getRootProps","onScroll","onWheel","onTouchMove","getContentProps","getRenderZoneProps","GridColumnGroupHeader","_columnGroupsLookup$g","isLastColumn","columnGroupsLookup","render","renderHeaderGroup","renderParams","showColumnBorder","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","GridColumnHeadersInnerRoot","columnHeaderDropZone","borderRight","GridColumnHeadersInner","hasScrollX","MemoizedGridColumnHeaders","getInnerProps","getColumnHeaders","getColumnGroupHeaders","innerRefProp","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","handleInnerRef","setRenderContextRaw","prevScrollLeft","totalHeaderHeight","getFirstColumnIndexToRenderRef","updateInnerPosition","_prevRenderContext$cu","_prevRenderContext$cu2","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","columnsToRender","columnIndex","isFirstColumn","headerToRender","_apiRef$current$unsta","_apiRef$current$unsta2","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","leftOverflow","_column$computedWidth","elements","headerInfo","depthInfo","depthIndex","groupIndex","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","autoFocus","GridColumnMenuHideItem","toggleColumn","setColumnVisibility","disableColumnSelector","ListItemIcon","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","showPreferences","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","onSortMenuItemClick","sortColumn","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","showFilterPanel","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","Divider","useGridColumnMenuSlots","Component","otherProps","GridColumnMenu","GridNoResultsOverlay","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","BooleanCellTrueIcon","BooleanCellFalseIcon","ColumnMenuIcon","OpenFilterButtonIcon","FilterPanelDeleteIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","MoreActionsIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","ColumnMenuHideIcon","ColumnMenuSortAscendingIcon","ColumnMenuSortDescendingIcon","ColumnMenuFilterIcon","ColumnMenuManageColumnsIcon","ColumnMenuClearIcon","LoadIcon","FilterPanelAddIcon","FilterPanelRemoveAllIcon","ColumnReorderIcon","BaseCheckbox","MUICheckbox","BaseTextField","MUITextField","BaseFormControl","MUIFormControl","BaseSelect","MUISelect","BaseSwitch","MUISwitch","BaseButton","MUIButton","BaseIconButton","MUIIconButton","BaseInputAdornment","MUIInputAdornment","BaseTooltip","MUITooltip","BasePopper","MUIPopper","BaseInputLabel","MUIInputLabel","BaseSelectOption","MUIMenuItem","BaseChip","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","SkeletonCell","Skeleton","ColumnHeaderFilterIconButton","toggleFilter","columnFilteredIcon","ColumnMenu","ColumnHeaders","GridColumnHeaders","Footer","FooterRowCount","PreferencesPanel","LoadingOverlay","NoResultsOverlay","NoRowsOverlay","Pagination","FilterPanel","ColumnsPanel","searchInputRef","setSearchValue","searchPredicate","autoFocusSearchField","disableHideAllButton","disableShowAllButton","getTogglableColumns","sortedColumns","toggleAllColumns","isVisible","currentModel","togglableColumns","handleSearchValueChange","togglableSortedColumns","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","FormControlLabel","baseSwitch","Panel","GridRow","uncapitalizeObjectKeys","capitalizedObject","charAt","groupForwardedProps","_props$forwardedProps","forwardedProps","DATA_GRID_FORCED_PROPS","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","disableDensitySelector","disableRowSelectionOnClick","disableVirtualization","filterMode","sortingMode","keepNonExistentRowsSelected","rowPositionsDebounceMs","useDataGridProps","themedProps","allProps","overrides","k","computeSlots","_themedProps$slotProp","rowsMetaStateInitializer","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","_unwrappedGroupingMod","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","_getParents$depth","lastGroup","prevField","haveDifferentContainers","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","_props$experimentalFe","_props$columnGrouping","_props$columnGrouping2","_apiRef$current$state","visibleColumnFields","pinnedColumns","_unwrappedGroupingMod2","virtualizationStateInitializer","useDataGridComponent","useGridRowsPreProcessors","useGridRowSelection","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","propIsRowSelectable","canHaveMultipleSelection","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","selectRows","ids","selectableIds","selectionLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","_closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","previousRowIndex","isStateControlled","_props$initialState4","_props$slotProps2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnPosition","updateColumns","_columnVisibilityMode","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","setColumnWidth","columnReorderApi","stateExportPreProcessing","prevState","_props$initialState$c","_props$initialState3","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","stateRestorePreProcessing","_context$stateToResto","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","_props$slotProps","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","setCellColSpanInfo","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","nextColumnIndex","columnSpanningPrivateApi","handleColumnReorderChange","useGridColumnSpanning","useGridColumnGrouping","_props$experimentalFe3","getColumnGroupPath","_unwrappedGroupingMod3","getAllGroupDetails","handleColumnIndexChange","_props$columnGrouping3","_state$columns$ordere","_state$columns","_state$pinnedColumns","updateColumnGroupingState","_props$experimentalFe2","_apiRef$current$getPi","_apiRef$current$getPi2","getPinnedColumns","_unwrappedGroupingMod4","_unwrappedGroupingMod5","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","_event$relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","handlePaginationModelChange","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hideTimeout","immediateTimeout","doNotHidePanel","hidePreferencesDelayed","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filteringResult","visibleRowsLookupState","addColumnMenuItem","applyFilters","itemIndex","existingItems","itemToDelete","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","setQuickFilterValues","filterApi","unstable_applyFilters","filterModelToExport","callbacks","filterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","filterableColumnsLookup","updateVisibleRowsLookupState","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","getSortCellParams","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","setSortModel","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridDensity","setDensity","newDensity","currentDensityState","newDensityState","useGridPagination","onPaginationModelChange","setPaginationModel","_props$rowCount","_context$stateToResto2","_props$rowCount2","handleUpdateAutoPageSize","pinnedRowsHeight","maximumPageSizeWithoutScrollBar","_apiRef$current$virtu","_props$rowCount3","useGridRowsMeta","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","baseCenter","isResized","needsFirstMeasurement","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","initialHeights","_spacing$top","_spacing$bottom","processedSizes","maximumBaseSize","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","storeMeasuredRowHeight","needsHydration","_rowsHeightLookup$cur2","setLastMeasuredRowIndex","resetRowHeights","rowsMetaPrivateApi","_rowsHeightLookup$cur","unstable_setRowHeight","useGridScroll","colRef","scrollCoordinates","cellWidth","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","topPinnedRowsHeight","bottomPinnedRowsHeight","showColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","errorShown","rootDimensionsRef","fullDimensionsRef","updateGridDimensionsRef","scrollBarSize","viewportOuterSize","hasScrollY","scrollbarSize","scrollDiv","offsetWidth","scrollInformation","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScroll","newFullDimensions","prevDimensions","savedSize","setSavedSize","debouncedSetSavedSize","previousSize","resize","_apiRef$current$mainE","_previousSize$current","_previousSize$current2","mainEl","computedStyle","ownerWindow","getComputedStyle","parseFloat","hasHeightChanged","hasWidthChanged","dimensionsPrivateApi","isFirstSizing","isJSDOM","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","setVirtualization","unstable_setColumnVirtualization","useGridVirtualization","VirtualScrollerRoot","virtualScroller","GridVirtualScroller","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","_props$style","overflowedContent","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","GridOverlayWrapperRoot","overlayWrapper","overlayType","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","setViewportInnerSize","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","GridOverlays","showNoResultsOverlay","noRowsOverlay","noResultsOverlay","loadingOverlay","DataGridVirtualScroller","DataGridRaw","propTypes","PropTypes","isRequired","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange","onRowEditCommit","GridActionsCellItem","handleClick","contextValue","arg","hint","prim","toPrimitive","TypeError","_typeof","iterator"],"sourceRoot":""}