{"version":3,"file":"static/js/3710.942a7fe9.chunk.js","mappings":"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","sources":["api/apikey.js","hooks/useApi.js","hooks/useConfirm.js","ui-component/button/StyledButton.js","ui-component/dialog/ConfirmDialog.js","utils/useNotifier.js","views/apikey/APIKeyDialog.js","assets/images/api_empty.svg","views/apikey/index.js"],"sourcesContent":["import client from './client'\r\n\r\nconst getAllAPIKeys = () => client.get('/apikey')\r\n\r\nconst createNewAPI = (body) => client.post(`/apikey`, body)\r\n\r\nconst updateAPI = (id, body) => client.put(`/apikey/${id}`, body)\r\n\r\nconst deleteAPI = (id) => client.delete(`/apikey/${id}`)\r\n\r\nexport default {\r\n    getAllAPIKeys,\r\n    createNewAPI,\r\n    updateAPI,\r\n    deleteAPI\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport default (apiFunc) => {\r\n    const [data, setData] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const request = async (...args) => {\r\n        setLoading(true)\r\n        try {\r\n            const result = await apiFunc(...args)\r\n            setData(result.data)\r\n        } catch (err) {\r\n            setError(err || 'Unexpected Error!')\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return {\r\n        data,\r\n        error,\r\n        loading,\r\n        request\r\n    }\r\n}\r\n","import { useContext } from 'react'\r\nimport ConfirmContext from 'store/context/ConfirmContext'\r\nimport { HIDE_CONFIRM, SHOW_CONFIRM } from 'store/actions'\r\n\r\nlet resolveCallback\r\nconst useConfirm = () => {\r\n    const [confirmState, dispatch] = useContext(ConfirmContext)\r\n\r\n    const closeConfirm = () => {\r\n        dispatch({\r\n            type: HIDE_CONFIRM\r\n        })\r\n    }\r\n\r\n    const onConfirm = () => {\r\n        closeConfirm()\r\n        resolveCallback(true)\r\n    }\r\n\r\n    const onCancel = () => {\r\n        closeConfirm()\r\n        resolveCallback(false)\r\n    }\r\n    const confirm = (confirmPayload) => {\r\n        dispatch({\r\n            type: SHOW_CONFIRM,\r\n            payload: confirmPayload\r\n        })\r\n        return new Promise((res) => {\r\n            resolveCallback = res\r\n        })\r\n    }\r\n\r\n    return { confirm, onConfirm, onCancel, confirmState }\r\n}\r\n\r\nexport default useConfirm\r\n","import { styled } from '@mui/material/styles'\r\nimport { Button } from '@mui/material'\r\nimport MuiToggleButton from '@mui/material/ToggleButton'\r\n\r\nexport const StyledButton = styled(Button)(({ theme, color = 'primary' }) => ({\r\n    color: 'white',\r\n    backgroundColor: theme.palette[color].main,\r\n    '&:hover': {\r\n        backgroundColor: theme.palette[color].main,\r\n        backgroundImage: `linear-gradient(rgb(0 0 0/10%) 0 0)`\r\n    }\r\n}))\r\n\r\nexport const StyledToggleButton = styled(MuiToggleButton)(({ theme, color = 'primary' }) => ({\r\n    '&.Mui-selected, &.Mui-selected:hover': {\r\n        color: 'white',\r\n        backgroundColor: theme.palette[color].main\r\n    }\r\n}))\r\n","import { createPortal } from 'react-dom'\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@mui/material'\r\nimport useConfirm from 'hooks/useConfirm'\r\nimport { StyledButton } from 'ui-component/button/StyledButton'\r\n\r\nconst ConfirmDialog = () => {\r\n    const { onConfirm, onCancel, confirmState } = useConfirm()\r\n    const portalElement = document.getElementById('portal')\r\n\r\n    const component = confirmState.show ? (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth='xs'\r\n            open={confirmState.show}\r\n            onClose={onCancel}\r\n            aria-labelledby='alert-dialog-title'\r\n            aria-describedby='alert-dialog-description'\r\n        >\r\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\r\n                {confirmState.title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <span>{confirmState.description}</span>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onCancel}>{confirmState.cancelButtonName}</Button>\r\n                <StyledButton variant='contained' onClick={onConfirm}>\r\n                    {confirmState.confirmButtonName}\r\n                </StyledButton>\r\n            </DialogActions>\r\n        </Dialog>\r\n    ) : null\r\n\r\n    return createPortal(component, portalElement)\r\n}\r\n\r\nexport default ConfirmDialog\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useSnackbar } from 'notistack'\r\nimport { removeSnackbar } from 'store/actions'\r\n\r\nlet displayed = []\r\n\r\nconst useNotifier = () => {\r\n    const dispatch = useDispatch()\r\n    const notifier = useSelector((state) => state.notifier)\r\n    const { notifications } = notifier\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n\r\n    const storeDisplayed = (id) => {\r\n        displayed = [...displayed, id]\r\n    }\r\n\r\n    const removeDisplayed = (id) => {\r\n        displayed = [...displayed.filter((key) => id !== key)]\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\r\n            if (dismissed) {\r\n                // dismiss snackbar using notistack\r\n                closeSnackbar(key)\r\n                return\r\n            }\r\n\r\n            // do nothing if snackbar is already displayed\r\n            if (displayed.includes(key)) return\r\n\r\n            // display snackbar using notistack\r\n            enqueueSnackbar(message, {\r\n                key,\r\n                ...options,\r\n                onClose: (event, reason, myKey) => {\r\n                    if (options.onClose) {\r\n                        options.onClose(event, reason, myKey)\r\n                    }\r\n                },\r\n                onExited: (event, myKey) => {\r\n                    // remove this snackbar from redux store\r\n                    dispatch(removeSnackbar(myKey))\r\n                    removeDisplayed(myKey)\r\n                }\r\n            })\r\n\r\n            // keep track of snackbars that we've displayed\r\n            storeDisplayed(key)\r\n        })\r\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch])\r\n}\r\n\r\nexport default useNotifier\r\n","import { createPortal } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { enqueueSnackbar as enqueueSnackbarAction, closeSnackbar as closeSnackbarAction } from 'store/actions'\r\n\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Stack,\r\n    IconButton,\r\n    OutlinedInput,\r\n    Popover\r\n} from '@mui/material'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { StyledButton } from 'ui-component/button/StyledButton'\r\n\r\n// Icons\r\nimport { IconX, IconCopy } from '@tabler/icons'\r\n\r\n// API\r\nimport apikeyApi from 'api/apikey'\r\n\r\n// utils\r\nimport useNotifier from 'utils/useNotifier'\r\n\r\nconst APIKeyDialog = ({ show, dialogProps, onCancel, onConfirm }) => {\r\n    const portalElement = document.getElementById('portal')\r\n\r\n    const theme = useTheme()\r\n    const dispatch = useDispatch()\r\n\r\n    // ==============================|| Snackbar ||============================== //\r\n\r\n    useNotifier()\r\n\r\n    const enqueueSnackbar = (...args) => dispatch(enqueueSnackbarAction(...args))\r\n    const closeSnackbar = (...args) => dispatch(closeSnackbarAction(...args))\r\n\r\n    const [keyName, setKeyName] = useState('')\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const openPopOver = Boolean(anchorEl)\r\n\r\n    useEffect(() => {\r\n        if (dialogProps.type === 'EDIT' && dialogProps.key) {\r\n            setKeyName(dialogProps.key.keyName)\r\n        } else if (dialogProps.type === 'ADD') {\r\n            setKeyName('')\r\n        }\r\n    }, [dialogProps])\r\n\r\n    const handleClosePopOver = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const addNewKey = async () => {\r\n        try {\r\n            const createResp = await apikeyApi.createNewAPI({ keyName })\r\n            if (createResp.data) {\r\n                enqueueSnackbar({\r\n                    message: 'New API key added',\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: 'success',\r\n                        action: (key) => (\r\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                <IconX />\r\n                            </Button>\r\n                        )\r\n                    }\r\n                })\r\n                onConfirm()\r\n            }\r\n        } catch (error) {\r\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\r\n            enqueueSnackbar({\r\n                message: `Failed to add new API key: ${errorData}`,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: 'error',\r\n                    persist: true,\r\n                    action: (key) => (\r\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                            <IconX />\r\n                        </Button>\r\n                    )\r\n                }\r\n            })\r\n            onCancel()\r\n        }\r\n    }\r\n\r\n    const saveKey = async () => {\r\n        try {\r\n            const saveResp = await apikeyApi.updateAPI(dialogProps.key.id, { keyName })\r\n            if (saveResp.data) {\r\n                enqueueSnackbar({\r\n                    message: 'API Key saved',\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: 'success',\r\n                        action: (key) => (\r\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                <IconX />\r\n                            </Button>\r\n                        )\r\n                    }\r\n                })\r\n                onConfirm()\r\n            }\r\n        } catch (error) {\r\n            const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\r\n            enqueueSnackbar({\r\n                message: `Failed to save API key: ${errorData}`,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: 'error',\r\n                    persist: true,\r\n                    action: (key) => (\r\n                        <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                            <IconX />\r\n                        </Button>\r\n                    )\r\n                }\r\n            })\r\n            onCancel()\r\n        }\r\n    }\r\n\r\n    const component = show ? (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth='sm'\r\n            open={show}\r\n            onClose={onCancel}\r\n            aria-labelledby='alert-dialog-title'\r\n            aria-describedby='alert-dialog-description'\r\n        >\r\n            <DialogTitle sx={{ fontSize: '1rem' }} id='alert-dialog-title'>\r\n                {dialogProps.title}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                {dialogProps.type === 'EDIT' && (\r\n                    <Box sx={{ p: 2 }}>\r\n                        <Typography variant='overline'>API Key</Typography>\r\n                        <Stack direction='row' sx={{ mb: 1 }}>\r\n                            <Typography\r\n                                sx={{\r\n                                    p: 1,\r\n                                    borderRadius: 10,\r\n                                    backgroundColor: theme.palette.primary.light,\r\n                                    width: 'max-content',\r\n                                    height: 'max-content'\r\n                                }}\r\n                                variant='h5'\r\n                            >\r\n                                {dialogProps.key.apiKey}\r\n                            </Typography>\r\n                            <IconButton\r\n                                title='Copy API Key'\r\n                                color='success'\r\n                                onClick={(event) => {\r\n                                    navigator.clipboard.writeText(dialogProps.key.apiKey)\r\n                                    setAnchorEl(event.currentTarget)\r\n                                    setTimeout(() => {\r\n                                        handleClosePopOver()\r\n                                    }, 1500)\r\n                                }}\r\n                            >\r\n                                <IconCopy />\r\n                            </IconButton>\r\n                            <Popover\r\n                                open={openPopOver}\r\n                                anchorEl={anchorEl}\r\n                                onClose={handleClosePopOver}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'left'\r\n                                }}\r\n                            >\r\n                                <Typography variant='h6' sx={{ pl: 1, pr: 1, color: 'white', background: theme.palette.success.dark }}>\r\n                                    Copied!\r\n                                </Typography>\r\n                            </Popover>\r\n                        </Stack>\r\n                    </Box>\r\n                )}\r\n\r\n                <Box sx={{ p: 2 }}>\r\n                    <Stack sx={{ position: 'relative' }} direction='row'>\r\n                        <Typography variant='overline'>Key Name</Typography>\r\n                    </Stack>\r\n                    <OutlinedInput\r\n                        id='keyName'\r\n                        type='string'\r\n                        fullWidth\r\n                        placeholder='My New Key'\r\n                        value={keyName}\r\n                        name='keyName'\r\n                        onChange={(e) => setKeyName(e.target.value)}\r\n                    />\r\n                </Box>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <StyledButton variant='contained' onClick={() => (dialogProps.type === 'ADD' ? addNewKey() : saveKey())}>\r\n                    {dialogProps.confirmButtonName}\r\n                </StyledButton>\r\n            </DialogActions>\r\n        </Dialog>\r\n    ) : null\r\n\r\n    return createPortal(component, portalElement)\r\n}\r\n\r\nAPIKeyDialog.propTypes = {\r\n    show: PropTypes.bool,\r\n    dialogProps: PropTypes.object,\r\n    onCancel: PropTypes.func,\r\n    onConfirm: PropTypes.func\r\n}\r\n\r\nexport default APIKeyDialog\r\n","var _path, _path2, _rect, _path3, _rect2, _rect3, _rect4, _rect5, _rect6, _path4, _rect7, _path5, _rect8, _path6, _rect9, _circle, _path7, _rect10, _rect11, _path8, _rect12, _path9, _path10, _path11, _rect13, _rect14, _rect15, _rect16, _rect17, _path12, _circle2, _circle3, _circle4, _path13, _circle5, _path14, _polygon, _polygon2, _path15, _path16, _path17, _rect18, _rect19, _circle6, _circle7, _circle8, _circle9;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgApiEmpty(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 1100.50064,\n    height: 691.70682,\n    viewBox: \"0 0 1100.50064 691.70682\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"two_factor_authentication\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1150.25032,388.23743h-1.85859V337.32194a29.4685,29.4685,0,0,0-29.46859-29.46853H1011.05186a29.4685,29.4685,0,0,0-29.46859,29.46853V616.64827a29.46851,29.46851,0,0,0,29.46859,29.46854h107.87128a29.46851,29.46851,0,0,0,29.46859-29.46854V424.47994h1.85859Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1142.121,339.05342v278.92a22.01111,22.01111,0,0,1-22.01,22.01h-108.39a22.00248,22.00248,0,0,1-22-22.01v-278.92a22.00031,22.00031,0,0,1,22-22h13.15a10.4608,10.4608,0,0,0,9.68,14.4h61.8a10.44027,10.44027,0,0,0,9.67993-14.4H1120.111A22.00894,22.00894,0,0,1,1142.121,339.05342Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#d0cde1\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 945.85129,\n    y: 355.70682,\n    width: 126,\n    height: 34,\n    fill: \"#6c63ff\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1126.601,487.85341h-122a3.00328,3.00328,0,0,1-3-3v-30a3.00328,3.00328,0,0,1,3-3h122a3.00328,3.00328,0,0,1,3,3v30A3.00328,3.00328,0,0,1,1126.601,487.85341Zm-122-34a1.001,1.001,0,0,0-1,1v30a1.00067,1.00067,0,0,0,1,1h122a1.00067,1.00067,0,0,0,1-1v-30a1.001,1.001,0,0,0-1-1Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 959.85129,\n    y: 374.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 981.85129,\n    y: 374.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1003.85129,\n    y: 374.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect5 || (_rect5 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1025.85129,\n    y: 374.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect6 || (_rect6 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 1047.85129,\n    y: 374.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1142.121,589.61342v28.36a22.01111,22.01111,0,0,1-22.01,22.01h-108.39a22.00248,22.00248,0,0,1-22-22.01v-130.46Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    opacity: 0.1\n  })), _rect7 || (_rect7 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 99.85129,\n    y: 459.70682,\n    width: 473,\n    height: 232,\n    fill: \"#d0cde1\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M502.351,795.85341H151.601a2.00591,2.00591,0,0,1-2-2v-228a2.00587,2.00587,0,0,1,2-2h4.44Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    opacity: 0.1\n  })), _rect8 || (_rect8 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 318.85129,\n    y: 490.70682,\n    width: 732.99951,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M600.34268,108.46435H390.853v-4.31776H295.86217v4.31776H85.5089a14.17039,14.17039,0,0,0-14.1704,14.1704V409.4906a14.17043,14.17043,0,0,0,14.1704,14.17045H600.34268a14.17044,14.17044,0,0,0,14.1704-14.17045V122.63475A14.17039,14.17039,0,0,0,600.34268,108.46435Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _rect9 || (_rect9 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40.59128,\n    y: 29.35679,\n    width: 505.16998,\n    height: 284.98004,\n    fill: \"#d0cde1\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 292.74433,\n    cy: 16.4075,\n    r: 5.18132,\n    fill: \"#6c63ff\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.601,239.85341h-12a3.00328,3.00328,0,0,1-3-3v-12a3.00328,3.00328,0,0,1,3-3h12a3.00328,3.00328,0,0,1,3,3v12A3.00328,3.00328,0,0,1,240.601,239.85341Zm-12-16a1.0013,1.0013,0,0,0-1,1v12a1.0013,1.0013,0,0,0,1,1h12a1.0013,1.0013,0,0,0,1-1v-12a1.0013,1.0013,0,0,0-1-1Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _rect10 || (_rect10 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 176.85129,\n    y: 133.70682,\n    width: 228,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect11 || (_rect11 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 345.85129,\n    y: 188.70682,\n    width: 53,\n    height: 16,\n    fill: \"#6c63ff\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M452.601,304.85341h-49a3.00328,3.00328,0,0,1-3-3v-12a3.00328,3.00328,0,0,1,3-3h49a3.00328,3.00328,0,0,1,3,3v12A3.00328,3.00328,0,0,1,452.601,304.85341Zm-49-16a1.0013,1.0013,0,0,0-1,1v12a1.0013,1.0013,0,0,0,1,1h49a1.0013,1.0013,0,0,0,1-1v-12a1.0013,1.0013,0,0,0-1-1Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _rect12 || (_rect12 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 703.85129,\n    y: 206.70682,\n    width: 100,\n    height: 70,\n    fill: \"#6c63ff\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M863.601,375.35341h-96a4.00427,4.00427,0,0,1-4-4v-66a4.00427,4.00427,0,0,1,4-4h96a4.00426,4.00426,0,0,1,4,4v66A4.00426,4.00426,0,0,1,863.601,375.35341Zm-96-70v66H863.6039l-.00293-66Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M852.601,302.85341h-4a33,33,0,1,0-66,0h-4a37,37,0,1,1,74,0Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M825.601,330.35341a10.00023,10.00023,0,1,0-15.29412,8.47258V349.5593a5.29411,5.29411,0,0,0,5.29412,5.29411h0a5.29411,5.29411,0,0,0,5.29411-5.29411V338.826A9.98327,9.98327,0,0,0,825.601,330.35341Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _rect13 || (_rect13 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 284.35129,\n    y: 562.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect14 || (_rect14 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 306.35129,\n    y: 562.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect15 || (_rect15 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 328.35129,\n    y: 562.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect16 || (_rect16 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 350.35129,\n    y: 562.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect17 || (_rect17 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 372.35129,\n    y: 562.70682,\n    width: 16,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M643.60059,778.85352H174.60107a4.00428,4.00428,0,0,1-4-4v-228a4.00427,4.00427,0,0,1,4-4H643.60059a4.004,4.004,0,0,1,4,4v228A4.004,4.004,0,0,1,643.60059,778.85352Zm-468.99952-232v228H643.60352l-.00293-228Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 145.85129,\n    cy: 470.70682,\n    r: 6,\n    fill: \"#3f3d56\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 166.85129,\n    cy: 470.70682,\n    r: 6,\n    fill: \"#3f3d56\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 187.85129,\n    cy: 470.70682,\n    r: 6,\n    fill: \"#3f3d56\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M453.601,680.85341h-135a3.00328,3.00328,0,0,1-3-3v-34a3.00328,3.00328,0,0,1,3-3h135a3.00328,3.00328,0,0,1,3,3v34A3.00328,3.00328,0,0,1,453.601,680.85341Zm-135-38a1.001,1.001,0,0,0-1,1v34a1.001,1.001,0,0,0,1,1h135a1.001,1.001,0,0,0,1-1v-34a1.001,1.001,0,0,0-1-1Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 437.85129,\n    cy: 559.70682,\n    r: 18,\n    fill: \"#6c63ff\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M493.601,679.85341a19,19,0,1,1,19-19A19.02162,19.02162,0,0,1,493.601,679.85341Zm0-36a17,17,0,1,0,17,17A17.019,17.019,0,0,0,493.601,643.85341Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"444.118 563.803 434.437 554.121 437.265 551.293 443.584 557.611 461.216 532.555 464.487 534.858 444.118 563.803\",\n    fill: \"#3f3d56\"\n  })), _polygon2 || (_polygon2 = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"433.761 314.337 40.591 314.337 40.591 50.947 433.761 314.337\",\n    opacity: 0.1\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M628.69739,413.2984H579.39527v-3.55218a.7043.7043,0,0,0-.70431-.70432H561.78737a.70429.70429,0,0,0-.70431.70432v3.55218H550.51832v-3.55218a.7043.7043,0,0,0-.70432-.70432H532.91042a.7043.7043,0,0,0-.70432.70432v3.55218H521.64136v-3.55218a.70429.70429,0,0,0-.70431-.70432H504.03347a.7043.7043,0,0,0-.70432.70432v3.55218H492.76441v-3.55218a.7043.7043,0,0,0-.70432-.70432H475.15651a.70429.70429,0,0,0-.70431.70432v3.55218H463.88746v-3.55218a.7043.7043,0,0,0-.70432-.70432H446.27956a.7043.7043,0,0,0-.70432.70432v3.55218H435.0105v-3.55218a.70429.70429,0,0,0-.70431-.70432H417.4026a.7043.7043,0,0,0-.70431.70432v3.55218H406.13355v-3.55218a.7043.7043,0,0,0-.70432-.70432H273.01784a.7043.7043,0,0,0-.70432.70432v3.55218H261.74878v-3.55218a.7043.7043,0,0,0-.70432-.70432H244.14088a.70429.70429,0,0,0-.70431.70432v3.55218H232.87183v-3.55218a.7043.7043,0,0,0-.70432-.70432H215.26393a.7043.7043,0,0,0-.70432.70432v3.55218H203.99487v-3.55218a.70429.70429,0,0,0-.70431-.70432H186.387a.7043.7043,0,0,0-.70431.70432v3.55218H175.11792v-3.55218a.7043.7043,0,0,0-.70432-.70432H157.51a.7043.7043,0,0,0-.70432.70432v3.55218H146.241v-3.55218a.7043.7043,0,0,0-.70432-.70432H128.63307a.7043.7043,0,0,0-.70432.70432v3.55218H117.364v-3.55218a.7043.7043,0,0,0-.70431-.70432H99.75611a.70429.70429,0,0,0-.70431.70432v3.55218H66.65326A16.90359,16.90359,0,0,0,49.74968,430.202v7.6434a16.90358,16.90358,0,0,0,16.90358,16.90354H628.69739A16.90358,16.90358,0,0,0,645.601,437.84539V430.202A16.90359,16.90359,0,0,0,628.69739,413.2984Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M474.601,321.85341h-264a3.00328,3.00328,0,0,1-3-3v-110a3.00328,3.00328,0,0,1,3-3h264a3.00328,3.00328,0,0,1,3,3v110A3.00328,3.00328,0,0,1,474.601,321.85341Zm-264-114a1.0013,1.0013,0,0,0-1,1v110a1.0013,1.0013,0,0,0,1,1h264a1.0013,1.0013,0,0,0,1-1v-110a1.0013,1.0013,0,0,0-1-1Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.601,269.85341h-12a3.00328,3.00328,0,0,1-3-3v-12a3.00328,3.00328,0,0,1,3-3h12a3.00328,3.00328,0,0,1,3,3v12A3.00328,3.00328,0,0,1,240.601,269.85341Zm-12-16a1.0013,1.0013,0,0,0-1,1v12a1.0013,1.0013,0,0,0,1,1h12a1.0013,1.0013,0,0,0,1-1v-12a1.0013,1.0013,0,0,0-1-1Z\",\n    transform: \"translate(-49.74968 -104.14659)\",\n    fill: \"#3f3d56\"\n  })), _rect18 || (_rect18 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 176.85129,\n    y: 163.70682,\n    width: 228,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _rect19 || (_rect19 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 264.85129,\n    y: 269.70682,\n    width: 732.99951,\n    height: 2,\n    fill: \"#3f3d56\"\n  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 264.85129,\n    cy: 269.70682,\n    r: 14,\n    fill: \"#3f3d56\"\n  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 997.85129,\n    cy: 271.70682,\n    r: 11,\n    fill: \"#3f3d56\"\n  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 1051.85129,\n    cy: 492.70682,\n    r: 11,\n    fill: \"#3f3d56\"\n  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 321.85129,\n    cy: 492.70682,\n    r: 11,\n    fill: \"#3f3d56\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgApiEmpty);\nexport default __webpack_public_path__ + \"static/media/api_empty.6032fc7f3d6f6a5082bec0505aaf8ecb.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { enqueueSnackbar as enqueueSnackbarAction, closeSnackbar as closeSnackbarAction } from 'store/actions'\r\n\r\n// material-ui\r\nimport {\r\n    Button,\r\n    Box,\r\n    Chip,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    IconButton,\r\n    Popover,\r\n    Collapse,\r\n    Typography,\r\n    Toolbar,\r\n    TextField,\r\n    InputAdornment,\r\n    ButtonGroup\r\n} from '@mui/material'\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\r\nimport { useTheme, styled } from '@mui/material/styles'\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard'\r\nimport { StyledButton } from 'ui-component/button/StyledButton'\r\nimport APIKeyDialog from './APIKeyDialog'\r\nimport ConfirmDialog from 'ui-component/dialog/ConfirmDialog'\r\n\r\n// API\r\nimport apiKeyApi from 'api/apikey'\r\n\r\n// Hooks\r\nimport useApi from 'hooks/useApi'\r\nimport useConfirm from 'hooks/useConfirm'\r\n\r\n// utils\r\nimport useNotifier from 'utils/useNotifier'\r\n\r\n// Icons\r\nimport {\r\n    IconTrash,\r\n    IconEdit,\r\n    IconCopy,\r\n    IconChevronsUp,\r\n    IconChevronsDown,\r\n    IconX,\r\n    IconSearch,\r\n    IconPlus,\r\n    IconEye,\r\n    IconEyeOff\r\n} from '@tabler/icons'\r\nimport APIEmptySVG from 'assets/images/api_empty.svg'\r\nimport * as PropTypes from 'prop-types'\r\nimport moment from 'moment/moment'\r\n\r\n// ==============================|| APIKey ||============================== //\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n    [`&.${tableCellClasses.head}`]: {\r\n        backgroundColor: theme.palette.action.hover\r\n    }\r\n}))\r\n\r\nconst StyledTableRow = styled(TableRow)(() => ({\r\n    // hide last border\r\n    '&:last-child td, &:last-child th': {\r\n        border: 0\r\n    }\r\n}))\r\n\r\nfunction APIKeyRow(props) {\r\n    const [open, setOpen] = useState(false)\r\n    return (\r\n        <>\r\n            <TableRow sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                <TableCell scope='row'>{props.apiKey.keyName}</TableCell>\r\n                <TableCell>\r\n                    {props.showApiKeys.includes(props.apiKey.apiKey)\r\n                        ? props.apiKey.apiKey\r\n                        : `${props.apiKey.apiKey.substring(0, 2)}${'•'.repeat(18)}${props.apiKey.apiKey.substring(\r\n                              props.apiKey.apiKey.length - 5\r\n                          )}`}\r\n                    <IconButton title='Copy' color='success' onClick={props.onCopyClick}>\r\n                        <IconCopy />\r\n                    </IconButton>\r\n                    <IconButton title='Show' color='inherit' onClick={props.onShowAPIClick}>\r\n                        {props.showApiKeys.includes(props.apiKey.apiKey) ? <IconEyeOff /> : <IconEye />}\r\n                    </IconButton>\r\n                    <Popover\r\n                        open={props.open}\r\n                        anchorEl={props.anchorEl}\r\n                        onClose={props.onClose}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left'\r\n                        }}\r\n                    >\r\n                        <Typography variant='h6' sx={{ pl: 1, pr: 1, color: 'white', background: props.theme.palette.success.dark }}>\r\n                            Copied!\r\n                        </Typography>\r\n                    </Popover>\r\n                </TableCell>\r\n                <TableCell>\r\n                    {props.apiKey.chatFlows.length}{' '}\r\n                    {props.apiKey.chatFlows.length > 0 && (\r\n                        <IconButton aria-label='expand row' size='small' color='inherit' onClick={() => setOpen(!open)}>\r\n                            {props.apiKey.chatFlows.length > 0 && open ? <IconChevronsUp /> : <IconChevronsDown />}\r\n                        </IconButton>\r\n                    )}\r\n                </TableCell>\r\n                <TableCell>{props.apiKey.createdAt}</TableCell>\r\n                <TableCell>\r\n                    <IconButton title='Edit' color='primary' onClick={props.onEditClick}>\r\n                        <IconEdit />\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell>\r\n                    <IconButton title='Delete' color='error' onClick={props.onDeleteClick}>\r\n                        <IconTrash />\r\n                    </IconButton>\r\n                </TableCell>\r\n            </TableRow>\r\n            {open && (\r\n                <TableRow sx={{ '& td': { border: 0 } }}>\r\n                    <TableCell sx={{ pb: 0, pt: 0 }} colSpan={6}>\r\n                        <Collapse in={open} timeout='auto' unmountOnExit>\r\n                            <Box sx={{ mt: 1, mb: 2, borderRadius: '15px', border: '1px solid' }}>\r\n                                <Table aria-label='chatflow table'>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <StyledTableCell sx={{ width: '30%', borderTopLeftRadius: '15px' }}>\r\n                                                Chatflow Name\r\n                                            </StyledTableCell>\r\n                                            <StyledTableCell sx={{ width: '20%' }}>Modified On</StyledTableCell>\r\n                                            <StyledTableCell sx={{ width: '50%', borderTopRightRadius: '15px' }}>Category</StyledTableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {props.apiKey.chatFlows.map((flow, index) => (\r\n                                            <StyledTableRow key={index}>\r\n                                                <TableCell>{flow.flowName}</TableCell>\r\n                                                <TableCell>{moment(flow.updatedDate).format('DD-MMM-YY')}</TableCell>\r\n                                                <TableCell>\r\n                                                    &nbsp;\r\n                                                    {flow.category &&\r\n                                                        flow.category\r\n                                                            .split(';')\r\n                                                            .map((tag, index) => (\r\n                                                                <Chip key={index} label={tag} style={{ marginRight: 5, marginBottom: 5 }} />\r\n                                                            ))}\r\n                                                </TableCell>\r\n                                            </StyledTableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Box>\r\n                        </Collapse>\r\n                    </TableCell>\r\n                </TableRow>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nAPIKeyRow.propTypes = {\r\n    apiKey: PropTypes.any,\r\n    showApiKeys: PropTypes.arrayOf(PropTypes.any),\r\n    onCopyClick: PropTypes.func,\r\n    onShowAPIClick: PropTypes.func,\r\n    open: PropTypes.bool,\r\n    anchorEl: PropTypes.any,\r\n    onClose: PropTypes.func,\r\n    theme: PropTypes.any,\r\n    onEditClick: PropTypes.func,\r\n    onDeleteClick: PropTypes.func\r\n}\r\nconst APIKey = () => {\r\n    const theme = useTheme()\r\n    const customization = useSelector((state) => state.customization)\r\n\r\n    const dispatch = useDispatch()\r\n    useNotifier()\r\n\r\n    const enqueueSnackbar = (...args) => dispatch(enqueueSnackbarAction(...args))\r\n    const closeSnackbar = (...args) => dispatch(closeSnackbarAction(...args))\r\n\r\n    const [showDialog, setShowDialog] = useState(false)\r\n    const [dialogProps, setDialogProps] = useState({})\r\n    const [apiKeys, setAPIKeys] = useState([])\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [showApiKeys, setShowApiKeys] = useState([])\r\n    const openPopOver = Boolean(anchorEl)\r\n\r\n    const [search, setSearch] = useState('')\r\n    const onSearchChange = (event) => {\r\n        setSearch(event.target.value)\r\n    }\r\n    function filterKeys(data) {\r\n        return data.keyName.toLowerCase().indexOf(search.toLowerCase()) > -1\r\n    }\r\n\r\n    const { confirm } = useConfirm()\r\n\r\n    const getAllAPIKeysApi = useApi(apiKeyApi.getAllAPIKeys)\r\n\r\n    const onShowApiKeyClick = (apikey) => {\r\n        const index = showApiKeys.indexOf(apikey)\r\n        if (index > -1) {\r\n            //showApiKeys.splice(index, 1)\r\n            const newShowApiKeys = showApiKeys.filter(function (item) {\r\n                return item !== apikey\r\n            })\r\n            setShowApiKeys(newShowApiKeys)\r\n        } else {\r\n            setShowApiKeys((prevkeys) => [...prevkeys, apikey])\r\n        }\r\n    }\r\n\r\n    const handleClosePopOver = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const addNew = () => {\r\n        const dialogProp = {\r\n            title: 'Add New API Key',\r\n            type: 'ADD',\r\n            cancelButtonName: 'Cancel',\r\n            confirmButtonName: 'Add'\r\n        }\r\n        setDialogProps(dialogProp)\r\n        setShowDialog(true)\r\n    }\r\n\r\n    const edit = (key) => {\r\n        const dialogProp = {\r\n            title: 'Edit API Key',\r\n            type: 'EDIT',\r\n            cancelButtonName: 'Cancel',\r\n            confirmButtonName: 'Save',\r\n            key\r\n        }\r\n        setDialogProps(dialogProp)\r\n        setShowDialog(true)\r\n    }\r\n\r\n    const deleteKey = async (key) => {\r\n        const confirmPayload = {\r\n            title: `Delete`,\r\n            description:\r\n                key.chatFlows.length === 0\r\n                    ? `Delete key [${key.keyName}] ? `\r\n                    : `Delete key [${key.keyName}] ?\\n There are ${key.chatFlows.length} chatflows using this key.`,\r\n            confirmButtonName: 'Delete',\r\n            cancelButtonName: 'Cancel'\r\n        }\r\n        const isConfirmed = await confirm(confirmPayload)\r\n\r\n        if (isConfirmed) {\r\n            try {\r\n                const deleteResp = await apiKeyApi.deleteAPI(key.id)\r\n                if (deleteResp.data) {\r\n                    enqueueSnackbar({\r\n                        message: 'API key deleted',\r\n                        options: {\r\n                            key: new Date().getTime() + Math.random(),\r\n                            variant: 'success',\r\n                            action: (key) => (\r\n                                <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                    <IconX />\r\n                                </Button>\r\n                            )\r\n                        }\r\n                    })\r\n                    onConfirm()\r\n                }\r\n            } catch (error) {\r\n                const errorData = error.response.data || `${error.response.status}: ${error.response.statusText}`\r\n                enqueueSnackbar({\r\n                    message: `Failed to delete API key: ${errorData}`,\r\n                    options: {\r\n                        key: new Date().getTime() + Math.random(),\r\n                        variant: 'error',\r\n                        persist: true,\r\n                        action: (key) => (\r\n                            <Button style={{ color: 'white' }} onClick={() => closeSnackbar(key)}>\r\n                                <IconX />\r\n                            </Button>\r\n                        )\r\n                    }\r\n                })\r\n                onCancel()\r\n            }\r\n        }\r\n    }\r\n\r\n    const onConfirm = () => {\r\n        setShowDialog(false)\r\n        getAllAPIKeysApi.request()\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllAPIKeysApi.request()\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (getAllAPIKeysApi.data) {\r\n            setAPIKeys(getAllAPIKeysApi.data)\r\n        }\r\n    }, [getAllAPIKeysApi.data])\r\n\r\n    return (\r\n        <>\r\n            <MainCard sx={{ background: customization.isDarkMode ? theme.palette.common.black : '' }}>\r\n                <Stack flexDirection='row'>\r\n                    <Box sx={{ flexGrow: 1 }}>\r\n                        <Toolbar\r\n                            disableGutters={true}\r\n                            style={{\r\n                                margin: 1,\r\n                                padding: 1,\r\n                                paddingBottom: 10,\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                width: '100%'\r\n                            }}\r\n                        >\r\n                            <h1>API Keys&nbsp;</h1>\r\n                            <TextField\r\n                                size='small'\r\n                                sx={{ display: { xs: 'none', sm: 'block' }, ml: 3 }}\r\n                                variant='outlined'\r\n                                placeholder='Search key name'\r\n                                onChange={onSearchChange}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position='start'>\r\n                                            <IconSearch />\r\n                                        </InputAdornment>\r\n                                    )\r\n                                }}\r\n                            />\r\n                            <Box sx={{ flexGrow: 1 }} />\r\n                            <ButtonGroup\r\n                                sx={{ maxHeight: 40 }}\r\n                                disableElevation\r\n                                variant='contained'\r\n                                aria-label='outlined primary button group'\r\n                            >\r\n                                <ButtonGroup disableElevation aria-label='outlined primary button group'>\r\n                                    <StyledButton\r\n                                        variant='contained'\r\n                                        sx={{ color: 'white', mr: 1, height: 37 }}\r\n                                        onClick={addNew}\r\n                                        startIcon={<IconPlus />}\r\n                                    >\r\n                                        Create Key\r\n                                    </StyledButton>\r\n                                </ButtonGroup>\r\n                            </ButtonGroup>\r\n                        </Toolbar>\r\n                    </Box>\r\n                </Stack>\r\n                {apiKeys.length <= 0 && (\r\n                    <Stack sx={{ alignItems: 'center', justifyContent: 'center' }} flexDirection='column'>\r\n                        <Box sx={{ p: 2, height: 'auto' }}>\r\n                            <img style={{ objectFit: 'cover', height: '30vh', width: 'auto' }} src={APIEmptySVG} alt='APIEmptySVG' />\r\n                        </Box>\r\n                        <div>No API Keys Yet</div>\r\n                    </Stack>\r\n                )}\r\n                {apiKeys.length > 0 && (\r\n                    <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Key Name</TableCell>\r\n                                    <TableCell>API Key</TableCell>\r\n                                    <TableCell>Usage</TableCell>\r\n                                    <TableCell>Created</TableCell>\r\n                                    <TableCell> </TableCell>\r\n                                    <TableCell> </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {apiKeys.filter(filterKeys).map((key, index) => (\r\n                                    <APIKeyRow\r\n                                        key={index}\r\n                                        apiKey={key}\r\n                                        showApiKeys={showApiKeys}\r\n                                        onCopyClick={(event) => {\r\n                                            navigator.clipboard.writeText(key.apiKey)\r\n                                            setAnchorEl(event.currentTarget)\r\n                                            setTimeout(() => {\r\n                                                handleClosePopOver()\r\n                                            }, 1500)\r\n                                        }}\r\n                                        onShowAPIClick={() => onShowApiKeyClick(key.apiKey)}\r\n                                        open={openPopOver}\r\n                                        anchorEl={anchorEl}\r\n                                        onClose={handleClosePopOver}\r\n                                        theme={theme}\r\n                                        onEditClick={() => edit(key)}\r\n                                        onDeleteClick={() => deleteKey(key)}\r\n                                    />\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </MainCard>\r\n            <APIKeyDialog\r\n                show={showDialog}\r\n                dialogProps={dialogProps}\r\n                onCancel={() => setShowDialog(false)}\r\n                onConfirm={onConfirm}\r\n            ></APIKeyDialog>\r\n            <ConfirmDialog />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default APIKey\r\n"],"names":["getAllAPIKeys","client","get","createNewAPI","body","post","updateAPI","id","put","concat","deleteAPI","delete","apiFunc","data","setData","useState","error","setError","loading","setLoading","request","async","result","arguments","err","resolveCallback","useConfirm","confirmState","dispatch","useContext","ConfirmContext","closeConfirm","type","HIDE_CONFIRM","confirm","confirmPayload","SHOW_CONFIRM","payload","Promise","res","onConfirm","onCancel","StyledButton","styled","Button","_ref","theme","color","backgroundColor","palette","main","backgroundImage","MuiToggleButton","_ref2","ConfirmDialog","portalElement","document","getElementById","component","show","_jsxs","Dialog","fullWidth","maxWidth","open","onClose","children","_jsx","DialogTitle","sx","fontSize","title","DialogContent","description","DialogActions","onClick","cancelButtonName","variant","confirmButtonName","createPortal","displayed","useNotifier","useDispatch","notifier","useSelector","state","notifications","enqueueSnackbar","closeSnackbar","useSnackbar","React","forEach","key","message","options","dismissed","includes","event","reason","myKey","onExited","removeSnackbar","filter","dialogProps","useTheme","enqueueSnackbarAction","closeSnackbarAction","keyName","setKeyName","anchorEl","setAnchorEl","openPopOver","Boolean","useEffect","handleClosePopOver","Box","p","Typography","Stack","direction","mb","borderRadius","primary","light","width","height","apiKey","IconButton","navigator","clipboard","writeText","currentTarget","setTimeout","IconCopy","Popover","anchorOrigin","vertical","horizontal","transformOrigin","pl","pr","background","success","dark","position","OutlinedInput","placeholder","value","name","onChange","e","target","apikeyApi","Date","getTime","Math","random","action","style","IconX","errorData","response","status","statusText","persist","addNewKey","saveKey","StyledTableCell","TableCell","tableCellClasses","head","hover","StyledTableRow","TableRow","border","APIKeyRow","props","setOpen","_Fragment","scope","showApiKeys","substring","repeat","length","onCopyClick","onShowAPIClick","IconEyeOff","IconEye","chatFlows","size","IconChevronsUp","IconChevronsDown","createdAt","onEditClick","IconEdit","onDeleteClick","IconTrash","pb","pt","colSpan","Collapse","in","timeout","unmountOnExit","mt","Table","TableHead","borderTopLeftRadius","borderTopRightRadius","TableBody","map","flow","index","flowName","moment","updatedDate","format","category","split","tag","Chip","label","marginRight","marginBottom","APIKey","customization","showDialog","setShowDialog","setDialogProps","apiKeys","setAPIKeys","setShowApiKeys","search","setSearch","getAllAPIKeysApi","useApi","apiKeyApi","MainCard","isDarkMode","common","black","flexDirection","flexGrow","Toolbar","disableGutters","margin","padding","paddingBottom","display","justifyContent","TextField","xs","sm","ml","InputProps","startAdornment","InputAdornment","IconSearch","ButtonGroup","maxHeight","disableElevation","mr","addNew","startIcon","IconPlus","alignItems","objectFit","src","APIEmptySVG","alt","TableContainer","Paper","minWidth","toLowerCase","indexOf","apikey","newShowApiKeys","item","prevkeys","onShowApiKeyClick","edit","deleteKey","APIKeyDialog"],"sourceRoot":""}